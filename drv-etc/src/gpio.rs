//! General-purpose I/O.

#[cfg(any(
  feature = "stm32l4x1",
  feature = "stm32l4x2",
  feature = "stm32l4x3",
  feature = "stm32l4x5",
  feature = "stm32l4x6",
  feature = "stm32l4r5",
  feature = "stm32l4r7",
  feature = "stm32l4r9",
  feature = "stm32l4s5",
  feature = "stm32l4s7",
  feature = "stm32l4s9"
))]
use drone_stm32_device::reg::gpioh;
#[cfg(any(
  feature = "stm32l4x6",
  feature = "stm32l4r5",
  feature = "stm32l4r7",
  feature = "stm32l4r9",
  feature = "stm32l4s5",
  feature = "stm32l4s7",
  feature = "stm32l4s9"
))]
use drone_stm32_device::reg::gpioi;
use drone_stm32_device::reg::prelude::*;
#[cfg(any(
  feature = "stm32f100",
  feature = "stm32f101",
  feature = "stm32f102",
  feature = "stm32f103",
  feature = "stm32f107",
  feature = "stm32l4x1",
  feature = "stm32l4x2",
  feature = "stm32l4x3",
  feature = "stm32l4x5",
  feature = "stm32l4x6",
  feature = "stm32l4r5",
  feature = "stm32l4r7",
  feature = "stm32l4r9",
  feature = "stm32l4s5",
  feature = "stm32l4s7",
  feature = "stm32l4s9"
))]
use drone_stm32_device::reg::{gpioa, gpiob, gpioc, gpiod, gpioe};
#[cfg(any(
  feature = "stm32f100",
  feature = "stm32f101",
  feature = "stm32f102",
  feature = "stm32f103",
  feature = "stm32f107",
  feature = "stm32l4x5",
  feature = "stm32l4x6",
  feature = "stm32l4r5",
  feature = "stm32l4r7",
  feature = "stm32l4r9",
  feature = "stm32l4s5",
  feature = "stm32l4s7",
  feature = "stm32l4s9"
))]
use drone_stm32_device::reg::{gpiof, gpiog};

/// GPIO port.
#[allow(missing_docs)]
pub trait GpioPort<T: RegTag>: Sized + Send + Sync + 'static {
  type Pins;

  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type Afrl: RReg<T> + WReg<T>;
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type Afrh: RReg<T> + WReg<T>;
  #[cfg(any(
    feature = "stm32f100",
    feature = "stm32f101",
    feature = "stm32f102",
    feature = "stm32f103",
    feature = "stm32f107",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type Brr: WoReg<T>;
  type Bsrr: WoReg<T>;
  #[cfg(any(
    feature = "stm32f100",
    feature = "stm32f101",
    feature = "stm32f102",
    feature = "stm32f103",
    feature = "stm32f107"
  ))]
  type Crl: RReg<T> + WReg<T>;
  #[cfg(any(
    feature = "stm32f100",
    feature = "stm32f101",
    feature = "stm32f102",
    feature = "stm32f103",
    feature = "stm32f107"
  ))]
  type Crh: RReg<T> + WReg<T>;
  type Idr: RoReg<T>;
  type Lckr: RReg<T> + WReg<T>;
  type LckrLckk: RegField<T, Reg = Self::Lckr>
    + RRRegFieldBit<T>
    + WWRegFieldBit<T>;
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type Moder: RReg<T> + WReg<T>;
  type Odr: RReg<T> + WReg<T>;
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type Ospeedr: RReg<T> + WReg<T>;
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type Otyper: RReg<T> + WReg<T>;
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type Pupdr: RReg<T> + WReg<T>;

  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  res_reg_decl!(Afrl, afrl, afrl_mut);
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  res_reg_decl!(Afrh, afrh, afrh_mut);
  #[cfg(any(
    feature = "stm32f100",
    feature = "stm32f101",
    feature = "stm32f102",
    feature = "stm32f103",
    feature = "stm32f107",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  res_reg_decl!(Brr, brr, brr_mut);
  res_reg_decl!(Bsrr, bsrr, bsrr_mut);
  #[cfg(any(
    feature = "stm32f100",
    feature = "stm32f101",
    feature = "stm32f102",
    feature = "stm32f103",
    feature = "stm32f107"
  ))]
  res_reg_decl!(Crl, crl, crl_mut);
  #[cfg(any(
    feature = "stm32f100",
    feature = "stm32f101",
    feature = "stm32f102",
    feature = "stm32f103",
    feature = "stm32f107"
  ))]
  res_reg_decl!(Crh, crh, crh_mut);
  res_reg_decl!(Idr, idr, idr_mut);
  res_reg_decl!(Lckr, lckr, lckr_mut);
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  res_reg_decl!(Moder, moder, moder_mut);
  res_reg_decl!(Odr, odr, odr_mut);
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  res_reg_decl!(Ospeedr, ospeedr, ospeedr_mut);
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  res_reg_decl!(Otyper, otyper, otyper_mut);
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  res_reg_decl!(Pupdr, pupdr, pupdr_mut);

  fn into_pins(self) -> (Self::Pins, Self::LckrLckk);

  fn from_pins(pins: Self::Pins, lckk: Self::LckrLckk) -> Self;
}

/// GPIO port with `ASCR` register.
#[cfg(any(
  feature = "stm32l4x6",
  feature = "stm32l4r5",
  feature = "stm32l4r7",
  feature = "stm32l4r9",
  feature = "stm32l4s5",
  feature = "stm32l4s7",
  feature = "stm32l4s9"
))]
#[allow(missing_docs)]
pub trait GpioPortAscr<T: RegTag>: GpioPort<T> {
  type Ascr: RReg<T> + WReg<T>;

  res_reg_decl!(Ascr, ascr, ascr_mut);
}

/// GPIO pin.
#[allow(missing_docs)]
pub trait GpioPin<T: RegTag>: Sized + Send + Sync + 'static {
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type Afr: RReg<T> + WReg<T>;
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type AfrAfr: RegField<T, Reg = Self::Afr>
    + RRRegFieldBits<T>
    + WWRegFieldBits<T>;
  #[cfg(any(
    feature = "stm32f100",
    feature = "stm32f101",
    feature = "stm32f102",
    feature = "stm32f103",
    feature = "stm32f107",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type Brr: WoReg<T>;
  #[cfg(any(
    feature = "stm32f100",
    feature = "stm32f101",
    feature = "stm32f102",
    feature = "stm32f103",
    feature = "stm32f107",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type BrrBr: RegField<T, Reg = Self::Brr> + WoWoRegFieldBit<T>;
  type Bsrr: WoReg<T>;
  type BsrrBr: RegField<T, Reg = Self::Bsrr> + WoWoRegFieldBit<T>;
  type BsrrBs: RegField<T, Reg = Self::Bsrr> + WoWoRegFieldBit<T>;
  #[cfg(any(
    feature = "stm32f100",
    feature = "stm32f101",
    feature = "stm32f102",
    feature = "stm32f103",
    feature = "stm32f107"
  ))]
  type Cr: RReg<T> + WReg<T>;
  #[cfg(any(
    feature = "stm32f100",
    feature = "stm32f101",
    feature = "stm32f102",
    feature = "stm32f103",
    feature = "stm32f107"
  ))]
  type CrCnf: RegField<T, Reg = Self::Cr>
    + RRRegFieldBits<T>
    + WWRegFieldBits<T>;
  #[cfg(any(
    feature = "stm32f100",
    feature = "stm32f101",
    feature = "stm32f102",
    feature = "stm32f103",
    feature = "stm32f107"
  ))]
  type CrMode: RegField<T, Reg = Self::Cr>
    + RRRegFieldBits<T>
    + WWRegFieldBits<T>;
  type Idr: RoReg<T>;
  type IdrIdr: RegField<T, Reg = Self::Idr> + RegFieldBit<T> + RoRRegField<T>;
  type Lckr: RReg<T> + WReg<T>;
  type LckrLck: RegField<T, Reg = Self::Lckr>
    + RRRegFieldBit<T>
    + WWRegFieldBit<T>;
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type Moder: RReg<T> + WReg<T>;
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type ModerModer: RegField<T, Reg = Self::Moder>
    + RRRegFieldBits<T>
    + WWRegFieldBits<T>;
  type Odr: RReg<T> + WReg<T>;
  type OdrOdr: RegField<T, Reg = Self::Odr>
    + RRRegFieldBit<T>
    + WWRegFieldBit<T>;
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type Ospeedr: RReg<T> + WReg<T>;
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type OspeedrOspeedr: RegField<T, Reg = Self::Ospeedr>
    + RRRegFieldBits<T>
    + WWRegFieldBits<T>;
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type Otyper: RReg<T> + WReg<T>;
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type OtyperOt: RegField<T, Reg = Self::Otyper>
    + RRRegFieldBit<T>
    + WWRegFieldBit<T>;
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type Pupdr: RReg<T> + WReg<T>;
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  type PupdrPupdr: RegField<T, Reg = Self::Pupdr>
    + RRRegFieldBits<T>
    + WWRegFieldBits<T>;

  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  res_reg_decl!(AfrAfr, afr, afr_mut);
  #[cfg(any(
    feature = "stm32f100",
    feature = "stm32f101",
    feature = "stm32f102",
    feature = "stm32f103",
    feature = "stm32f107",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  res_reg_decl!(BrrBr, brr_br, brr_br_mut);
  res_reg_decl!(BsrrBr, bsrr_br, bsrr_br_mut);
  res_reg_decl!(BsrrBs, bsrr_bs, bsrr_bs_mut);
  #[cfg(any(
    feature = "stm32f100",
    feature = "stm32f101",
    feature = "stm32f102",
    feature = "stm32f103",
    feature = "stm32f107"
  ))]
  res_reg_decl!(CrCnf, cr_cnf, cr_cnf_mut);
  #[cfg(any(
    feature = "stm32f100",
    feature = "stm32f101",
    feature = "stm32f102",
    feature = "stm32f103",
    feature = "stm32f107"
  ))]
  res_reg_decl!(CrMode, cr_mode, cr_mode_mut);
  res_reg_decl!(IdrIdr, idr, idr_mut);
  res_reg_decl!(LckrLck, lckr, lckr_mut);
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  res_reg_decl!(ModerModer, moder, moder_mut);
  res_reg_decl!(OdrOdr, odr, odr_mut);
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  res_reg_decl!(OspeedrOspeedr, ospeedr, ospeedr_mut);
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  res_reg_decl!(OtyperOt, otyper, otyper_mut);
  #[cfg(any(
    feature = "stm32l4x1",
    feature = "stm32l4x2",
    feature = "stm32l4x3",
    feature = "stm32l4x5",
    feature = "stm32l4x6",
    feature = "stm32l4r5",
    feature = "stm32l4r7",
    feature = "stm32l4r9",
    feature = "stm32l4s5",
    feature = "stm32l4s7",
    feature = "stm32l4s9"
  ))]
  res_reg_decl!(PupdrPupdr, pupdr, pupdr_mut);
}

/// GPIO pin with `ASCR` register.
#[cfg(any(
  feature = "stm32l4x6",
  feature = "stm32l4r5",
  feature = "stm32l4r7",
  feature = "stm32l4r9",
  feature = "stm32l4s5",
  feature = "stm32l4s7",
  feature = "stm32l4s9"
))]
#[allow(missing_docs)]
pub trait GpioPinAscr<T: RegTag>: GpioPin<T> {
  type AscrAsc: RegField<T>;

  res_reg_decl!(AscrAsc, ascr, ascr_mut);
}

#[allow(unused_macros)]
macro_rules! gpio_port {
  (
    $doc_port:expr,
    $name_port:ident,
    $name_port_macro:ident,
    $doc_pins:expr,
    $name_pins:ident,
    $gpio:ident,
    $gpio_afrl:ident,
    $gpio_afrh:ident,
    $gpio_ascr:ident,
    $gpio_brr:ident,
    $gpio_bsrr:ident,
    $gpio_crl:ident,
    $gpio_crh:ident,
    $gpio_idr:ident,
    $gpio_lckr:ident,
    $gpio_moder:ident,
    $gpio_odr:ident,
    $gpio_ospeedr:ident,
    $gpio_otyper:ident,
    $gpio_pupdr:ident,
    #[$ascr_cfg:meta],
    $((
      $afr_path:ident,
      $cr_path:ident,
      $gpio_afr:ident,
      $gpio_cr:ident,
      $((
        $doc_pin:expr,
        $name_pin_ty:ident,
        $name_pin:ident,
        $name_pin_macro:ident,
        $afr_ty:ident,
        $asc_ty:ident,
        $br_ty:ident,
        $bs_ty:ident,
        $cnf_ty:ident,
        $mode_ty:ident,
        $idr_ty:ident,
        $lck_ty:ident,
        $moder_ty:ident,
        $odr_ty:ident,
        $ospeedr_ty:ident,
        $ot_ty:ident,
        $pupdr_ty:ident,
        $gpio_afr_afr:ident,
        $gpio_ascr_asc:ident,
        $gpio_brr_br:ident,
        $gpio_bsrr_br:ident,
        $gpio_bsrr_bs:ident,
        $gpio_cr_cnf:ident,
        $gpio_cr_mode:ident,
        $gpio_idr_idr:ident,
        $gpio_lckr_lck:ident,
        $gpio_moder_moder:ident,
        $gpio_odr_odr:ident,
        $gpio_ospeedr_ospeedr:ident,
        $gpio_otyper_ot:ident,
        $gpio_pupdr_pupdr:ident,
        $afr:ident,
        $asc:ident,
        $br:ident,
        $bs:ident,
        $cnf:ident,
        $mode:ident,
        $idr:ident,
        $lck:ident,
        $moder:ident,
        $odr:ident,
        $ospeedr:ident,
        $ot:ident,
        $pupdr:ident,
      ),)*
    ),)*
  ) => {
    #[doc = $doc_port]
    #[allow(missing_docs)]
    pub struct $name_port<T: RegTag> {
      #[cfg(any(
        feature = "stm32l4x1",
        feature = "stm32l4x2",
        feature = "stm32l4x3",
        feature = "stm32l4x5",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      pub $gpio_afrl: $gpio::afrl::Reg<T>,
      #[cfg(any(
        feature = "stm32l4x1",
        feature = "stm32l4x2",
        feature = "stm32l4x3",
        feature = "stm32l4x5",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      pub $gpio_afrh: $gpio::afrh::Reg<T>,
      #[cfg(all($ascr_cfg, any(
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      )))]
      pub $gpio_ascr: $gpio::ascr::Reg<T>,
      #[cfg(any(
        feature = "stm32f100",
        feature = "stm32f101",
        feature = "stm32f102",
        feature = "stm32f103",
        feature = "stm32f107",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      pub $gpio_brr: $gpio::brr::Reg<T>,
      pub $gpio_bsrr: $gpio::bsrr::Reg<T>,
      #[cfg(any(
        feature = "stm32f100",
        feature = "stm32f101",
        feature = "stm32f102",
        feature = "stm32f103",
        feature = "stm32f107"
      ))]
      pub $gpio_crl: $gpio::crl::Reg<T>,
      #[cfg(any(
        feature = "stm32f100",
        feature = "stm32f101",
        feature = "stm32f102",
        feature = "stm32f103",
        feature = "stm32f107"
      ))]
      pub $gpio_crh: $gpio::crh::Reg<T>,
      pub $gpio_idr: $gpio::idr::Reg<T>,
      pub $gpio_lckr: $gpio::lckr::Reg<T>,
      #[cfg(any(
        feature = "stm32l4x1",
        feature = "stm32l4x2",
        feature = "stm32l4x3",
        feature = "stm32l4x5",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      pub $gpio_moder: $gpio::moder::Reg<T>,
      pub $gpio_odr: $gpio::odr::Reg<T>,
      #[cfg(any(
        feature = "stm32l4x1",
        feature = "stm32l4x2",
        feature = "stm32l4x3",
        feature = "stm32l4x5",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      pub $gpio_ospeedr: $gpio::ospeedr::Reg<T>,
      #[cfg(any(
        feature = "stm32l4x1",
        feature = "stm32l4x2",
        feature = "stm32l4x3",
        feature = "stm32l4x5",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      pub $gpio_otyper: $gpio::otyper::Reg<T>,
      #[cfg(any(
        feature = "stm32l4x1",
        feature = "stm32l4x2",
        feature = "stm32l4x3",
        feature = "stm32l4x5",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      pub $gpio_pupdr: $gpio::pupdr::Reg<T>,
    }

    #[doc = $doc_pins]
    #[allow(missing_docs)]
    pub struct $name_pins<T: RegTag> {
      $(
        $(
          pub $name_pin: $name_pin_ty<T>,
        )*
      )*
    }

    #[cfg(any(
      feature = "stm32l4x6",
      feature = "stm32l4r5",
      feature = "stm32l4r7",
      feature = "stm32l4r9",
      feature = "stm32l4s5",
      feature = "stm32l4s7",
      feature = "stm32l4s9"
    ))]
    /// Creates a new `GpioPort`.
    #[macro_export]
    macro_rules! $name_port_macro {
      ($reg:ident) => {
        $crate::gpio::$name_port {
          $gpio_afrl: $reg.$gpio_afrl.into(),
          $gpio_afrh: $reg.$gpio_afrh.into(),
          #[cfg($ascr_cfg)]
          $gpio_ascr: $reg.$gpio_ascr.into(),
          $gpio_brr: $reg.$gpio_brr.into(),
          $gpio_bsrr: $reg.$gpio_bsrr.into(),
          $gpio_idr: $reg.$gpio_idr.into(),
          $gpio_lckr: $reg.$gpio_lckr.into(),
          $gpio_moder: $reg.$gpio_moder.into(),
          $gpio_odr: $reg.$gpio_odr.into(),
          $gpio_ospeedr: $reg.$gpio_ospeedr.into(),
          $gpio_otyper: $reg.$gpio_otyper.into(),
          $gpio_pupdr: $reg.$gpio_pupdr.into(),
        }
      };
    }

    #[cfg(any(
      feature = "stm32l4x1",
      feature = "stm32l4x2",
      feature = "stm32l4x3",
      feature = "stm32l4x5",
    ))]
    /// Creates a new `GpioPort`.
    #[macro_export]
    macro_rules! $name_port_macro {
      ($reg:ident) => {
        $crate::gpio::$name_port {
          $gpio_afrl: $reg.$gpio_afrl.into(),
          $gpio_afrh: $reg.$gpio_afrh.into(),
          $gpio_bsrr: $reg.$gpio_bsrr.into(),
          $gpio_idr: $reg.$gpio_idr.into(),
          $gpio_lckr: $reg.$gpio_lckr.into(),
          $gpio_moder: $reg.$gpio_moder.into(),
          $gpio_odr: $reg.$gpio_odr.into(),
          $gpio_ospeedr: $reg.$gpio_ospeedr.into(),
          $gpio_otyper: $reg.$gpio_otyper.into(),
          $gpio_pupdr: $reg.$gpio_pupdr.into(),
        }
      };
    }

    #[cfg(any(
      feature = "stm32f100",
      feature = "stm32f101",
      feature = "stm32f102",
      feature = "stm32f103",
      feature = "stm32f107",
    ))]
    /// Creates a new `GpioPort`.
    #[macro_export]
    macro_rules! $name_port_macro {
      ($reg:ident) => {
        $crate::gpio::$name_port {
          $gpio_brr: $reg.$gpio_brr.into(),
          $gpio_bsrr: $reg.$gpio_bsrr.into(),
          $gpio_crl: $reg.$gpio_crl.into(),
          $gpio_crh: $reg.$gpio_crh.into(),
          $gpio_idr: $reg.$gpio_idr.into(),
          $gpio_lckr: $reg.$gpio_lckr.into(),
          $gpio_odr: $reg.$gpio_odr.into(),
        }
      };
    }

    impl<T: RegTag> GpioPort<T> for $name_port<T> {
      type Pins = $name_pins<T>;

      #[cfg(any(
        feature = "stm32l4x1",
        feature = "stm32l4x2",
        feature = "stm32l4x3",
        feature = "stm32l4x5",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      type Afrl = $gpio::afrl::Reg<T>;
      #[cfg(any(
        feature = "stm32l4x1",
        feature = "stm32l4x2",
        feature = "stm32l4x3",
        feature = "stm32l4x5",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      type Afrh = $gpio::afrh::Reg<T>;
      #[cfg(any(
        feature = "stm32f100",
        feature = "stm32f101",
        feature = "stm32f102",
        feature = "stm32f103",
        feature = "stm32f107",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      type Brr = $gpio::brr::Reg<T>;
      type Bsrr = $gpio::bsrr::Reg<T>;
      #[cfg(any(
        feature = "stm32f100",
        feature = "stm32f101",
        feature = "stm32f102",
        feature = "stm32f103",
        feature = "stm32f107"
      ))]
      type Crl = $gpio::crl::Reg<T>;
      #[cfg(any(
        feature = "stm32f100",
        feature = "stm32f101",
        feature = "stm32f102",
        feature = "stm32f103",
        feature = "stm32f107"
      ))]
      type Crh = $gpio::crh::Reg<T>;
      type Idr = $gpio::idr::Reg<T>;
      type Lckr = $gpio::lckr::Reg<T>;
      type LckrLckk = $gpio::lckr::Lckk<T>;
      #[cfg(any(
        feature = "stm32l4x1",
        feature = "stm32l4x2",
        feature = "stm32l4x3",
        feature = "stm32l4x5",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      type Moder = $gpio::moder::Reg<T>;
      type Odr = $gpio::odr::Reg<T>;
      #[cfg(any(
        feature = "stm32l4x1",
        feature = "stm32l4x2",
        feature = "stm32l4x3",
        feature = "stm32l4x5",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      type Ospeedr = $gpio::ospeedr::Reg<T>;
      #[cfg(any(
        feature = "stm32l4x1",
        feature = "stm32l4x2",
        feature = "stm32l4x3",
        feature = "stm32l4x5",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      type Otyper = $gpio::otyper::Reg<T>;
      #[cfg(any(
        feature = "stm32l4x1",
        feature = "stm32l4x2",
        feature = "stm32l4x3",
        feature = "stm32l4x5",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      type Pupdr = $gpio::pupdr::Reg<T>;

      #[cfg(any(
        feature = "stm32l4x1",
        feature = "stm32l4x2",
        feature = "stm32l4x3",
        feature = "stm32l4x5",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      res_reg_impl!(Afrl, afrl, afrl_mut, $gpio_afrl);
      #[cfg(any(
        feature = "stm32l4x1",
        feature = "stm32l4x2",
        feature = "stm32l4x3",
        feature = "stm32l4x5",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      res_reg_impl!(Afrh, afrh, afrh_mut, $gpio_afrh);
      #[cfg(any(
        feature = "stm32f100",
        feature = "stm32f101",
        feature = "stm32f102",
        feature = "stm32f103",
        feature = "stm32f107",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      res_reg_impl!(Brr, brr, brr_mut, $gpio_brr);
      res_reg_impl!(Bsrr, bsrr, bsrr_mut, $gpio_bsrr);
      #[cfg(any(
        feature = "stm32f100",
        feature = "stm32f101",
        feature = "stm32f102",
        feature = "stm32f103",
        feature = "stm32f107"
      ))]
      res_reg_impl!(Crl, crl, crl_mut, $gpio_crl);
      #[cfg(any(
        feature = "stm32f100",
        feature = "stm32f101",
        feature = "stm32f102",
        feature = "stm32f103",
        feature = "stm32f107"
      ))]
      res_reg_impl!(Crh, crh, crh_mut, $gpio_crh);
      res_reg_impl!(Idr, idr, idr_mut, $gpio_idr);
      res_reg_impl!(Lckr, lckr, lckr_mut, $gpio_lckr);
      #[cfg(any(
        feature = "stm32l4x1",
        feature = "stm32l4x2",
        feature = "stm32l4x3",
        feature = "stm32l4x5",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      res_reg_impl!(Moder, moder, moder_mut, $gpio_moder);
      res_reg_impl!(Odr, odr, odr_mut, $gpio_odr);
      #[cfg(any(
        feature = "stm32l4x1",
        feature = "stm32l4x2",
        feature = "stm32l4x3",
        feature = "stm32l4x5",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      res_reg_impl!(Ospeedr, ospeedr, ospeedr_mut, $gpio_ospeedr);
      #[cfg(any(
        feature = "stm32l4x1",
        feature = "stm32l4x2",
        feature = "stm32l4x3",
        feature = "stm32l4x5",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      res_reg_impl!(Otyper, otyper, otyper_mut, $gpio_otyper);
      #[cfg(any(
        feature = "stm32l4x1",
        feature = "stm32l4x2",
        feature = "stm32l4x3",
        feature = "stm32l4x5",
        feature = "stm32l4x6",
        feature = "stm32l4r5",
        feature = "stm32l4r7",
        feature = "stm32l4r9",
        feature = "stm32l4s5",
        feature = "stm32l4s7",
        feature = "stm32l4s9"
      ))]
      res_reg_impl!(Pupdr, pupdr, pupdr_mut, $gpio_pupdr);

      fn into_pins(self) -> (Self::Pins, Self::LckrLckk) {
        (
          Self::Pins {
            $(
              $(
                $name_pin: $name_pin_ty {
                  #[cfg(any(
                    feature = "stm32l4x1",
                    feature = "stm32l4x2",
                    feature = "stm32l4x3",
                    feature = "stm32l4x5",
                    feature = "stm32l4x6",
                    feature = "stm32l4r5",
                    feature = "stm32l4r7",
                    feature = "stm32l4r9",
                    feature = "stm32l4s5",
                    feature = "stm32l4s7",
                    feature = "stm32l4s9"
                  ))]
                  $gpio_afr_afr: self.$gpio_afr.$afr,
                  #[cfg(all($ascr_cfg, any(
                    feature = "stm32l4x6",
                    feature = "stm32l4r5",
                    feature = "stm32l4r7",
                    feature = "stm32l4r9",
                    feature = "stm32l4s5",
                    feature = "stm32l4s7",
                    feature = "stm32l4s9"
                  )))]
                  $gpio_ascr_asc: self.$gpio_ascr.$asc,
                  #[cfg(any(
                    feature = "stm32f100",
                    feature = "stm32f101",
                    feature = "stm32f102",
                    feature = "stm32f103",
                    feature = "stm32f107",
                    feature = "stm32l4x6",
                    feature = "stm32l4r5",
                    feature = "stm32l4r7",
                    feature = "stm32l4r9",
                    feature = "stm32l4s5",
                    feature = "stm32l4s7",
                    feature = "stm32l4s9"
                  ))]
                  $gpio_brr_br: self.$gpio_brr.$br,
                  $gpio_bsrr_br: self.$gpio_bsrr.$br,
                  $gpio_bsrr_bs: self.$gpio_bsrr.$bs,
                  #[cfg(any(
                    feature = "stm32f100",
                    feature = "stm32f101",
                    feature = "stm32f102",
                    feature = "stm32f103",
                    feature = "stm32f107"
                  ))]
                  $gpio_cr_cnf: self.$gpio_cr.$cnf,
                  #[cfg(any(
                    feature = "stm32f100",
                    feature = "stm32f101",
                    feature = "stm32f102",
                    feature = "stm32f103",
                    feature = "stm32f107"
                  ))]
                  $gpio_cr_mode: self.$gpio_cr.$mode,
                  $gpio_idr_idr: self.$gpio_idr.$idr,
                  $gpio_lckr_lck: self.$gpio_lckr.$lck,
                  #[cfg(any(
                    feature = "stm32l4x1",
                    feature = "stm32l4x2",
                    feature = "stm32l4x3",
                    feature = "stm32l4x5",
                    feature = "stm32l4x6",
                    feature = "stm32l4r5",
                    feature = "stm32l4r7",
                    feature = "stm32l4r9",
                    feature = "stm32l4s5",
                    feature = "stm32l4s7",
                    feature = "stm32l4s9"
                  ))]
                  $gpio_moder_moder: self.$gpio_moder.$moder,
                  $gpio_odr_odr: self.$gpio_odr.$odr,
                  #[cfg(any(
                    feature = "stm32l4x1",
                    feature = "stm32l4x2",
                    feature = "stm32l4x3",
                    feature = "stm32l4x5",
                    feature = "stm32l4x6",
                    feature = "stm32l4r5",
                    feature = "stm32l4r7",
                    feature = "stm32l4r9",
                    feature = "stm32l4s5",
                    feature = "stm32l4s7",
                    feature = "stm32l4s9"
                  ))]
                  $gpio_ospeedr_ospeedr: self.$gpio_ospeedr.$ospeedr,
                  #[cfg(any(
                    feature = "stm32l4x1",
                    feature = "stm32l4x2",
                    feature = "stm32l4x3",
                    feature = "stm32l4x5",
                    feature = "stm32l4x6",
                    feature = "stm32l4r5",
                    feature = "stm32l4r7",
                    feature = "stm32l4r9",
                    feature = "stm32l4s5",
                    feature = "stm32l4s7",
                    feature = "stm32l4s9"
                  ))]
                  $gpio_otyper_ot: self.$gpio_otyper.$ot,
                  #[cfg(any(
                    feature = "stm32l4x1",
                    feature = "stm32l4x2",
                    feature = "stm32l4x3",
                    feature = "stm32l4x5",
                    feature = "stm32l4x6",
                    feature = "stm32l4r5",
                    feature = "stm32l4r7",
                    feature = "stm32l4r9",
                    feature = "stm32l4s5",
                    feature = "stm32l4s7",
                    feature = "stm32l4s9"
                  ))]
                  $gpio_pupdr_pupdr: self.$gpio_pupdr.$pupdr,
                },
              )*
            )*
          },
          self.$gpio_lckr.lckk,
        )
      }

      fn from_pins(pins: Self::Pins, lckk: Self::LckrLckk) -> Self {
        Self {
          $(
            #[cfg(any(
              feature = "stm32l4x1",
              feature = "stm32l4x2",
              feature = "stm32l4x3",
              feature = "stm32l4x5",
              feature = "stm32l4x6",
              feature = "stm32l4r5",
              feature = "stm32l4r7",
              feature = "stm32l4r9",
              feature = "stm32l4s5",
              feature = "stm32l4s7",
              feature = "stm32l4s9"
            ))]
            $gpio_afr: $gpio::$afr_path::Reg {
              $($afr: pins.$name_pin.$gpio_afr_afr,)*
            },
          )*
          #[cfg(all($ascr_cfg, any(
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          )))]
          $gpio_ascr: $gpio::ascr::Reg {
            $($($asc: pins.$name_pin.$gpio_ascr_asc,)*)*
          },
          #[cfg(any(
            feature = "stm32f100",
            feature = "stm32f101",
            feature = "stm32f102",
            feature = "stm32f103",
            feature = "stm32f107",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          $gpio_brr: $gpio::brr::Reg {
            $($($br: pins.$name_pin.$gpio_brr_br,)*)*
          },
          $gpio_bsrr: $gpio::bsrr::Reg {
            $($(
              $br: pins.$name_pin.$gpio_bsrr_br,
              $bs: pins.$name_pin.$gpio_bsrr_bs,
            )*)*
          },
          $(
            #[cfg(any(
              feature = "stm32f100",
              feature = "stm32f101",
              feature = "stm32f102",
              feature = "stm32f103",
              feature = "stm32f107"
            ))]
            $gpio_cr: $gpio::$cr_path::Reg {
              $($cnf: pins.$name_pin.$gpio_cr_cnf,)*
              $($mode: pins.$name_pin.$gpio_cr_mode,)*
            },
          )*
          $gpio_idr: $gpio::idr::Reg {
            $($($idr: pins.$name_pin.$gpio_idr_idr,)*)*
          },
          $gpio_lckr: $gpio::lckr::Reg {
            lckk,
            $($($lck: pins.$name_pin.$gpio_lckr_lck,)*)*
          },
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          $gpio_moder: $gpio::moder::Reg {
            $($($moder: pins.$name_pin.$gpio_moder_moder,)*)*
          },
          $gpio_odr: $gpio::odr::Reg {
            $($($odr: pins.$name_pin.$gpio_odr_odr,)*)*
          },
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          $gpio_ospeedr: $gpio::ospeedr::Reg {
            $($($ospeedr: pins.$name_pin.$gpio_ospeedr_ospeedr,)*)*
          },
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          $gpio_otyper: $gpio::otyper::Reg {
            $($($ot: pins.$name_pin.$gpio_otyper_ot,)*)*
          },
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          $gpio_pupdr: $gpio::pupdr::Reg {
            $($($pupdr: pins.$name_pin.$gpio_pupdr_pupdr,)*)*
          },
        }
      }
    }

    #[cfg(all($ascr_cfg, any(
      feature = "stm32l4x6",
      feature = "stm32l4r5",
      feature = "stm32l4r7",
      feature = "stm32l4r9",
      feature = "stm32l4s5",
      feature = "stm32l4s7",
      feature = "stm32l4s9"
    )))]
    impl<T: RegTag> GpioPortAscr<T> for $name_port<T> {
      type Ascr = $gpio::ascr::Reg<T>;

      res_reg_impl!(Ascr, ascr, ascr_mut, $gpio_ascr);
    }

    $(
      $(
        #[doc = $doc_pin]
        #[allow(missing_docs)]
        pub struct $name_pin_ty<T: RegTag> {
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          pub $gpio_afr_afr: $gpio::$afr_path::$afr_ty<T>,
          #[cfg(all($ascr_cfg, any(
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          )))]
          pub $gpio_ascr_asc: $gpio::ascr::$asc_ty<T>,
          #[cfg(any(
            feature = "stm32f100",
            feature = "stm32f101",
            feature = "stm32f102",
            feature = "stm32f103",
            feature = "stm32f107",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          pub $gpio_brr_br: $gpio::brr::$br_ty<T>,
          pub $gpio_bsrr_br: $gpio::bsrr::$br_ty<T>,
          pub $gpio_bsrr_bs: $gpio::bsrr::$bs_ty<T>,
          #[cfg(any(
            feature = "stm32f100",
            feature = "stm32f101",
            feature = "stm32f102",
            feature = "stm32f103",
            feature = "stm32f107"
          ))]
          pub $gpio_cr_cnf: $gpio::$cr_path::$cnf_ty<T>,
          #[cfg(any(
            feature = "stm32f100",
            feature = "stm32f101",
            feature = "stm32f102",
            feature = "stm32f103",
            feature = "stm32f107"
          ))]
          pub $gpio_cr_mode: $gpio::$cr_path::$mode_ty<T>,
          pub $gpio_idr_idr: $gpio::idr::$idr_ty<T>,
          pub $gpio_lckr_lck: $gpio::lckr::$lck_ty<T>,
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          pub $gpio_moder_moder: $gpio::moder::$moder_ty<T>,
          pub $gpio_odr_odr: $gpio::odr::$odr_ty<T>,
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          pub $gpio_ospeedr_ospeedr: $gpio::ospeedr::$ospeedr_ty<T>,
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          pub $gpio_otyper_ot: $gpio::otyper::$ot_ty<T>,
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          pub $gpio_pupdr_pupdr: $gpio::pupdr::$pupdr_ty<T>,
        }

        #[cfg(any(
          feature = "stm32l4x6",
          feature = "stm32l4r5",
          feature = "stm32l4r7",
          feature = "stm32l4r9",
          feature = "stm32l4s5",
          feature = "stm32l4s7",
          feature = "stm32l4s9"
        ))]
        /// Creates a new `GpioPin`.
        #[macro_export]
        macro_rules! $name_pin_macro {
          ($reg:ident) => {
            $crate::gpio::$name_pin_ty {
              $gpio_afr_afr: $reg.$gpio_afr.$afr.into(),
              #[cfg($ascr_cfg)]
              $gpio_ascr_asc: $reg.$gpio_ascr.$asc.into(),
              $gpio_brr_br: $reg.$gpio_brr.$br.into(),
              $gpio_bsrr_br: $reg.$gpio_bsrr.$br.into(),
              $gpio_bsrr_bs: $reg.$gpio_bsrr.$bs.into(),
              $gpio_idr_idr: $reg.$gpio_idr.$idr.into(),
              $gpio_lckr_lck: $reg.$gpio_lckr.$lck.into(),
              $gpio_moder_moder: $reg.$gpio_moder.$moder.into(),
              $gpio_odr_odr: $reg.$gpio_odr.$odr.into(),
              $gpio_ospeedr_ospeedr: $reg.$gpio_ospeedr.$ospeedr.into(),
              $gpio_otyper_ot: $reg.$gpio_otyper.$ot.into(),
              $gpio_pupdr_pupdr: $reg.$gpio_pupdr.$pupdr.into(),
            }
          };
        }

        #[cfg(any(
          feature = "stm32l4x1",
          feature = "stm32l4x2",
          feature = "stm32l4x3",
          feature = "stm32l4x5",
        ))]
        /// Creates a new `GpioPin`.
        #[macro_export]
        macro_rules! $name_pin_macro {
          ($reg:ident) => {
            $crate::gpio::$name_pin_ty {
              $gpio_afr_afr: $reg.$gpio_afr.$afr.into(),
              $gpio_bsrr_br: $reg.$gpio_bsrr.$br.into(),
              $gpio_bsrr_bs: $reg.$gpio_bsrr.$bs.into(),
              $gpio_idr_idr: $reg.$gpio_idr.$idr.into(),
              $gpio_lckr_lck: $reg.$gpio_lckr.$lck.into(),
              $gpio_moder_moder: $reg.$gpio_moder.$moder.into(),
              $gpio_odr_odr: $reg.$gpio_odr.$odr.into(),
              $gpio_ospeedr_ospeedr: $reg.$gpio_ospeedr.$ospeedr.into(),
              $gpio_otyper_ot: $reg.$gpio_otyper.$ot.into(),
              $gpio_pupdr_pupdr: $reg.$gpio_pupdr.$pupdr.into(),
            }
          };
        }

        #[cfg(any(
          feature = "stm32f100",
          feature = "stm32f101",
          feature = "stm32f102",
          feature = "stm32f103",
          feature = "stm32f107",
        ))]
        /// Creates a new `GpioPin`.
        #[macro_export]
        macro_rules! $name_pin_macro {
          ($reg:ident) => {
            $crate::gpio::$name_pin_ty {
              $gpio_brr_br: $reg.$gpio_brr.$br.into(),
              $gpio_bsrr_br: $reg.$gpio_bsrr.$br.into(),
              $gpio_bsrr_bs: $reg.$gpio_bsrr.$bs.into(),
              $gpio_cr_cnf: $reg.$gpio_cr.$cnf.into(),
              $gpio_cr_mode: $reg.$gpio_cr.$mode.into(),
              $gpio_idr_idr: $reg.$gpio_idr.$idr.into(),
              $gpio_lckr_lck: $reg.$gpio_lckr.$lck.into(),
              $gpio_odr_odr: $reg.$gpio_odr.$odr.into(),
            }
          };
        }

        impl<T: RegTag> GpioPin<T> for $name_pin_ty<T> {
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          type Afr = $gpio::$afr_path::Reg<T>;
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          type AfrAfr = $gpio::$afr_path::$afr_ty<T>;
          #[cfg(any(
            feature = "stm32f100",
            feature = "stm32f101",
            feature = "stm32f102",
            feature = "stm32f103",
            feature = "stm32f107",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          type Brr = $gpio::brr::Reg<T>;
          #[cfg(any(
            feature = "stm32f100",
            feature = "stm32f101",
            feature = "stm32f102",
            feature = "stm32f103",
            feature = "stm32f107",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          type BrrBr = $gpio::brr::$br_ty<T>;
          type Bsrr = $gpio::bsrr::Reg<T>;
          type BsrrBr = $gpio::bsrr::$br_ty<T>;
          type BsrrBs = $gpio::bsrr::$bs_ty<T>;
          #[cfg(any(
            feature = "stm32f100",
            feature = "stm32f101",
            feature = "stm32f102",
            feature = "stm32f103",
            feature = "stm32f107"
          ))]
          type Cr = $gpio::$cr_path::Reg<T>;
          #[cfg(any(
            feature = "stm32f100",
            feature = "stm32f101",
            feature = "stm32f102",
            feature = "stm32f103",
            feature = "stm32f107"
          ))]
          type CrCnf = $gpio::$cr_path::$cnf_ty<T>;
          #[cfg(any(
            feature = "stm32f100",
            feature = "stm32f101",
            feature = "stm32f102",
            feature = "stm32f103",
            feature = "stm32f107"
          ))]
          type CrMode = $gpio::$cr_path::$mode_ty<T>;
          type Idr = $gpio::idr::Reg<T>;
          type IdrIdr = $gpio::idr::$idr_ty<T>;
          type Lckr = $gpio::lckr::Reg<T>;
          type LckrLck = $gpio::lckr::$lck_ty<T>;
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          type Moder = $gpio::moder::Reg<T>;
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          type ModerModer = $gpio::moder::$moder_ty<T>;
          type Odr = $gpio::odr::Reg<T>;
          type OdrOdr = $gpio::odr::$odr_ty<T>;
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          type Ospeedr = $gpio::ospeedr::Reg<T>;
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          type OspeedrOspeedr = $gpio::ospeedr::$ospeedr_ty<T>;
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          type Otyper = $gpio::otyper::Reg<T>;
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          type OtyperOt = $gpio::otyper::$ot_ty<T>;
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          type Pupdr = $gpio::pupdr::Reg<T>;
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          type PupdrPupdr = $gpio::pupdr::$pupdr_ty<T>;

          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          res_reg_impl!(AfrAfr, afr, afr_mut, $gpio_afr_afr);
          #[cfg(any(
            feature = "stm32f100",
            feature = "stm32f101",
            feature = "stm32f102",
            feature = "stm32f103",
            feature = "stm32f107",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          res_reg_impl!(BrrBr, brr_br, brr_br_mut, $gpio_brr_br);
          res_reg_impl!(BsrrBr, bsrr_br, bsrr_br_mut, $gpio_bsrr_br);
          res_reg_impl!(BsrrBs, bsrr_bs, bsrr_bs_mut, $gpio_bsrr_bs);
          #[cfg(any(
            feature = "stm32f100",
            feature = "stm32f101",
            feature = "stm32f102",
            feature = "stm32f103",
            feature = "stm32f107"
          ))]
          res_reg_impl!(CrCnf, cr_cnf, cr_cnf_mut, $gpio_cr_cnf);
          #[cfg(any(
            feature = "stm32f100",
            feature = "stm32f101",
            feature = "stm32f102",
            feature = "stm32f103",
            feature = "stm32f107"
          ))]
          res_reg_impl!(CrMode, cr_mode, cr_mode_mut, $gpio_cr_mode);
          res_reg_impl!(IdrIdr, idr, idr_mut, $gpio_idr_idr);
          res_reg_impl!(LckrLck, lckr, lckr_mut, $gpio_lckr_lck);
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          res_reg_impl!(ModerModer, moder, moder_mut, $gpio_moder_moder);
          res_reg_impl!(OdrOdr, odr, odr_mut, $gpio_odr_odr);
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          res_reg_impl!(OspeedrOspeedr, ospeedr, ospeedr_mut,
                        $gpio_ospeedr_ospeedr);
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          res_reg_impl!(OtyperOt, otyper, otyper_mut, $gpio_otyper_ot);
          #[cfg(any(
            feature = "stm32l4x1",
            feature = "stm32l4x2",
            feature = "stm32l4x3",
            feature = "stm32l4x5",
            feature = "stm32l4x6",
            feature = "stm32l4r5",
            feature = "stm32l4r7",
            feature = "stm32l4r9",
            feature = "stm32l4s5",
            feature = "stm32l4s7",
            feature = "stm32l4s9"
          ))]
          res_reg_impl!(PupdrPupdr, pupdr, pupdr_mut, $gpio_pupdr_pupdr);
        }

        #[cfg(all($ascr_cfg, any(
          feature = "stm32l4x6",
          feature = "stm32l4r5",
          feature = "stm32l4r7",
          feature = "stm32l4r9",
          feature = "stm32l4s5",
          feature = "stm32l4s7",
          feature = "stm32l4s9"
        )))]
        impl<T: RegTag> GpioPinAscr<T> for $name_pin_ty<T> {
          type AscrAsc = $gpio::ascr::$asc_ty<T>;

          res_reg_impl!(AscrAsc, ascr, ascr_mut, $gpio_ascr_asc);
        }
      )*
    )*
  }
}

#[cfg(any(
  feature = "stm32f100",
  feature = "stm32f101",
  feature = "stm32f102",
  feature = "stm32f103",
  feature = "stm32f107",
  feature = "stm32l4x1",
  feature = "stm32l4x2",
  feature = "stm32l4x3",
  feature = "stm32l4x5",
  feature = "stm32l4x6",
  feature = "stm32l4r5",
  feature = "stm32l4r7",
  feature = "stm32l4r9",
  feature = "stm32l4s5",
  feature = "stm32l4s7",
  feature = "stm32l4s9"
))]
gpio_port! {
  "GPIO port A.",
  GpioA,
  drv_gpio_a,
  "GPIO port A pins.",
  GpioAPins,
  gpioa,
  gpioa_afrl,
  gpioa_afrh,
  gpioa_ascr,
  gpioa_brr,
  gpioa_bsrr,
  gpioa_crl,
  gpioa_crh,
  gpioa_idr,
  gpioa_lckr,
  gpioa_moder,
  gpioa_odr,
  gpioa_ospeedr,
  gpioa_otyper,
  gpioa_pupdr,
  #[not(__false__)],
  (
    afrl,
    crl,
    gpioa_afrl,
    gpioa_crl,
    (
      "GPIO port A pin 0.",
      GpioA0,
      gpio_a0,
      drv_gpio_a0,
      Afrl0,
      Asc0,
      Br0,
      Bs0,
      Cnf0,
      Mode0,
      Idr0,
      Lck0,
      Moder0,
      Odr0,
      Ospeedr0,
      Ot0,
      Pupdr0,
      gpioa_afrl_afrl0,
      gpioa_ascr_asc0,
      gpioa_brr_br0,
      gpioa_bsrr_br0,
      gpioa_bsrr_bs0,
      gpioa_crl_cnf0,
      gpioa_crl_mode0,
      gpioa_idr_idr0,
      gpioa_lckr_lck0,
      gpioa_moder_moder0,
      gpioa_odr_odr0,
      gpioa_ospeedr_ospeedr0,
      gpioa_otyper_ot0,
      gpioa_pupdr_pupdr0,
      afrl0,
      asc0,
      br0,
      bs0,
      cnf0,
      mode0,
      idr0,
      lck0,
      moder0,
      odr0,
      ospeedr0,
      ot0,
      pupdr0,
    ),
    (
      "GPIO port A pin 1.",
      GpioA1,
      gpio_a1,
      drv_gpio_a1,
      Afrl1,
      Asc1,
      Br1,
      Bs1,
      Cnf1,
      Mode1,
      Idr1,
      Lck1,
      Moder1,
      Odr1,
      Ospeedr1,
      Ot1,
      Pupdr1,
      gpioa_afrl_afrl1,
      gpioa_ascr_asc1,
      gpioa_brr_br1,
      gpioa_bsrr_br1,
      gpioa_bsrr_bs1,
      gpioa_crl_cnf1,
      gpioa_crl_mode1,
      gpioa_idr_idr1,
      gpioa_lckr_lck1,
      gpioa_moder_moder1,
      gpioa_odr_odr1,
      gpioa_ospeedr_ospeedr1,
      gpioa_otyper_ot1,
      gpioa_pupdr_pupdr1,
      afrl1,
      asc1,
      br1,
      bs1,
      cnf1,
      mode1,
      idr1,
      lck1,
      moder1,
      odr1,
      ospeedr1,
      ot1,
      pupdr1,
    ),
    (
      "GPIO port A pin 2.",
      GpioA2,
      gpio_a2,
      drv_gpio_a2,
      Afrl2,
      Asc2,
      Br2,
      Bs2,
      Cnf2,
      Mode2,
      Idr2,
      Lck2,
      Moder2,
      Odr2,
      Ospeedr2,
      Ot2,
      Pupdr2,
      gpioa_afrl_afrl2,
      gpioa_ascr_asc2,
      gpioa_brr_br2,
      gpioa_bsrr_br2,
      gpioa_bsrr_bs2,
      gpioa_crl_cnf2,
      gpioa_crl_mode2,
      gpioa_idr_idr2,
      gpioa_lckr_lck2,
      gpioa_moder_moder2,
      gpioa_odr_odr2,
      gpioa_ospeedr_ospeedr2,
      gpioa_otyper_ot2,
      gpioa_pupdr_pupdr2,
      afrl2,
      asc2,
      br2,
      bs2,
      cnf2,
      mode2,
      idr2,
      lck2,
      moder2,
      odr2,
      ospeedr2,
      ot2,
      pupdr2,
    ),
    (
      "GPIO port A pin 3.",
      GpioA3,
      gpio_a3,
      drv_gpio_a3,
      Afrl3,
      Asc3,
      Br3,
      Bs3,
      Cnf3,
      Mode3,
      Idr3,
      Lck3,
      Moder3,
      Odr3,
      Ospeedr3,
      Ot3,
      Pupdr3,
      gpioa_afrl_afrl3,
      gpioa_ascr_asc3,
      gpioa_brr_br3,
      gpioa_bsrr_br3,
      gpioa_bsrr_bs3,
      gpioa_crl_cnf3,
      gpioa_crl_mode3,
      gpioa_idr_idr3,
      gpioa_lckr_lck3,
      gpioa_moder_moder3,
      gpioa_odr_odr3,
      gpioa_ospeedr_ospeedr3,
      gpioa_otyper_ot3,
      gpioa_pupdr_pupdr3,
      afrl3,
      asc3,
      br3,
      bs3,
      cnf3,
      mode3,
      idr3,
      lck3,
      moder3,
      odr3,
      ospeedr3,
      ot3,
      pupdr3,
    ),
    (
      "GPIO port A pin 4.",
      GpioA4,
      gpio_a4,
      drv_gpio_a4,
      Afrl4,
      Asc4,
      Br4,
      Bs4,
      Cnf4,
      Mode4,
      Idr4,
      Lck4,
      Moder4,
      Odr4,
      Ospeedr4,
      Ot4,
      Pupdr4,
      gpioa_afrl_afrl4,
      gpioa_ascr_asc4,
      gpioa_brr_br4,
      gpioa_bsrr_br4,
      gpioa_bsrr_bs4,
      gpioa_crl_cnf4,
      gpioa_crl_mode4,
      gpioa_idr_idr4,
      gpioa_lckr_lck4,
      gpioa_moder_moder4,
      gpioa_odr_odr4,
      gpioa_ospeedr_ospeedr4,
      gpioa_otyper_ot4,
      gpioa_pupdr_pupdr4,
      afrl4,
      asc4,
      br4,
      bs4,
      cnf4,
      mode4,
      idr4,
      lck4,
      moder4,
      odr4,
      ospeedr4,
      ot4,
      pupdr4,
    ),
    (
      "GPIO port A pin 5.",
      GpioA5,
      gpio_a5,
      drv_gpio_a5,
      Afrl5,
      Asc5,
      Br5,
      Bs5,
      Cnf5,
      Mode5,
      Idr5,
      Lck5,
      Moder5,
      Odr5,
      Ospeedr5,
      Ot5,
      Pupdr5,
      gpioa_afrl_afrl5,
      gpioa_ascr_asc5,
      gpioa_brr_br5,
      gpioa_bsrr_br5,
      gpioa_bsrr_bs5,
      gpioa_crl_cnf5,
      gpioa_crl_mode5,
      gpioa_idr_idr5,
      gpioa_lckr_lck5,
      gpioa_moder_moder5,
      gpioa_odr_odr5,
      gpioa_ospeedr_ospeedr5,
      gpioa_otyper_ot5,
      gpioa_pupdr_pupdr5,
      afrl5,
      asc5,
      br5,
      bs5,
      cnf5,
      mode5,
      idr5,
      lck5,
      moder5,
      odr5,
      ospeedr5,
      ot5,
      pupdr5,
    ),
    (
      "GPIO port A pin 6.",
      GpioA6,
      gpio_a6,
      drv_gpio_a6,
      Afrl6,
      Asc6,
      Br6,
      Bs6,
      Cnf6,
      Mode6,
      Idr6,
      Lck6,
      Moder6,
      Odr6,
      Ospeedr6,
      Ot6,
      Pupdr6,
      gpioa_afrl_afrl6,
      gpioa_ascr_asc6,
      gpioa_brr_br6,
      gpioa_bsrr_br6,
      gpioa_bsrr_bs6,
      gpioa_crl_cnf6,
      gpioa_crl_mode6,
      gpioa_idr_idr6,
      gpioa_lckr_lck6,
      gpioa_moder_moder6,
      gpioa_odr_odr6,
      gpioa_ospeedr_ospeedr6,
      gpioa_otyper_ot6,
      gpioa_pupdr_pupdr6,
      afrl6,
      asc6,
      br6,
      bs6,
      cnf6,
      mode6,
      idr6,
      lck6,
      moder6,
      odr6,
      ospeedr6,
      ot6,
      pupdr6,
    ),
    (
      "GPIO port A pin 7.",
      GpioA7,
      gpio_a7,
      drv_gpio_a7,
      Afrl7,
      Asc7,
      Br7,
      Bs7,
      Cnf7,
      Mode7,
      Idr7,
      Lck7,
      Moder7,
      Odr7,
      Ospeedr7,
      Ot7,
      Pupdr7,
      gpioa_afrl_afrl7,
      gpioa_ascr_asc7,
      gpioa_brr_br7,
      gpioa_bsrr_br7,
      gpioa_bsrr_bs7,
      gpioa_crl_cnf7,
      gpioa_crl_mode7,
      gpioa_idr_idr7,
      gpioa_lckr_lck7,
      gpioa_moder_moder7,
      gpioa_odr_odr7,
      gpioa_ospeedr_ospeedr7,
      gpioa_otyper_ot7,
      gpioa_pupdr_pupdr7,
      afrl7,
      asc7,
      br7,
      bs7,
      cnf7,
      mode7,
      idr7,
      lck7,
      moder7,
      odr7,
      ospeedr7,
      ot7,
      pupdr7,
    ),
  ),
  (
    afrh,
    crh,
    gpioa_afrh,
    gpioa_crh,
    (
      "GPIO port A pin 8.",
      GpioA8,
      gpio_a8,
      drv_gpio_a8,
      Afrh8,
      Asc8,
      Br8,
      Bs8,
      Cnf8,
      Mode8,
      Idr8,
      Lck8,
      Moder8,
      Odr8,
      Ospeedr8,
      Ot8,
      Pupdr8,
      gpioa_afrh_afrh8,
      gpioa_ascr_asc8,
      gpioa_brr_br8,
      gpioa_bsrr_br8,
      gpioa_bsrr_bs8,
      gpioa_crh_cnf8,
      gpioa_crh_mode8,
      gpioa_idr_idr8,
      gpioa_lckr_lck8,
      gpioa_moder_moder8,
      gpioa_odr_odr8,
      gpioa_ospeedr_ospeedr8,
      gpioa_otyper_ot8,
      gpioa_pupdr_pupdr8,
      afrh8,
      asc8,
      br8,
      bs8,
      cnf8,
      mode8,
      idr8,
      lck8,
      moder8,
      odr8,
      ospeedr8,
      ot8,
      pupdr8,
    ),
    (
      "GPIO port A pin 9.",
      GpioA9,
      gpio_a9,
      drv_gpio_a9,
      Afrh9,
      Asc9,
      Br9,
      Bs9,
      Cnf9,
      Mode9,
      Idr9,
      Lck9,
      Moder9,
      Odr9,
      Ospeedr9,
      Ot9,
      Pupdr9,
      gpioa_afrh_afrh9,
      gpioa_ascr_asc9,
      gpioa_brr_br9,
      gpioa_bsrr_br9,
      gpioa_bsrr_bs9,
      gpioa_crh_cnf9,
      gpioa_crh_mode9,
      gpioa_idr_idr9,
      gpioa_lckr_lck9,
      gpioa_moder_moder9,
      gpioa_odr_odr9,
      gpioa_ospeedr_ospeedr9,
      gpioa_otyper_ot9,
      gpioa_pupdr_pupdr9,
      afrh9,
      asc9,
      br9,
      bs9,
      cnf9,
      mode9,
      idr9,
      lck9,
      moder9,
      odr9,
      ospeedr9,
      ot9,
      pupdr9,
    ),
    (
      "GPIO port A pin 10.",
      GpioA10,
      gpio_a10,
      drv_gpio_a10,
      Afrh10,
      Asc10,
      Br10,
      Bs10,
      Cnf10,
      Mode10,
      Idr10,
      Lck10,
      Moder10,
      Odr10,
      Ospeedr10,
      Ot10,
      Pupdr10,
      gpioa_afrh_afrh10,
      gpioa_ascr_asc10,
      gpioa_brr_br10,
      gpioa_bsrr_br10,
      gpioa_bsrr_bs10,
      gpioa_crh_cnf10,
      gpioa_crh_mode10,
      gpioa_idr_idr10,
      gpioa_lckr_lck10,
      gpioa_moder_moder10,
      gpioa_odr_odr10,
      gpioa_ospeedr_ospeedr10,
      gpioa_otyper_ot10,
      gpioa_pupdr_pupdr10,
      afrh10,
      asc10,
      br10,
      bs10,
      cnf10,
      mode10,
      idr10,
      lck10,
      moder10,
      odr10,
      ospeedr10,
      ot10,
      pupdr10,
    ),
    (
      "GPIO port A pin 11.",
      GpioA11,
      gpio_a11,
      drv_gpio_a11,
      Afrh11,
      Asc11,
      Br11,
      Bs11,
      Cnf11,
      Mode11,
      Idr11,
      Lck11,
      Moder11,
      Odr11,
      Ospeedr11,
      Ot11,
      Pupdr11,
      gpioa_afrh_afrh11,
      gpioa_ascr_asc11,
      gpioa_brr_br11,
      gpioa_bsrr_br11,
      gpioa_bsrr_bs11,
      gpioa_crh_cnf11,
      gpioa_crh_mode11,
      gpioa_idr_idr11,
      gpioa_lckr_lck11,
      gpioa_moder_moder11,
      gpioa_odr_odr11,
      gpioa_ospeedr_ospeedr11,
      gpioa_otyper_ot11,
      gpioa_pupdr_pupdr11,
      afrh11,
      asc11,
      br11,
      bs11,
      cnf11,
      mode11,
      idr11,
      lck11,
      moder11,
      odr11,
      ospeedr11,
      ot11,
      pupdr11,
    ),
    (
      "GPIO port A pin 12.",
      GpioA12,
      gpio_a12,
      drv_gpio_a12,
      Afrh12,
      Asc12,
      Br12,
      Bs12,
      Cnf12,
      Mode12,
      Idr12,
      Lck12,
      Moder12,
      Odr12,
      Ospeedr12,
      Ot12,
      Pupdr12,
      gpioa_afrh_afrh12,
      gpioa_ascr_asc12,
      gpioa_brr_br12,
      gpioa_bsrr_br12,
      gpioa_bsrr_bs12,
      gpioa_crh_cnf12,
      gpioa_crh_mode12,
      gpioa_idr_idr12,
      gpioa_lckr_lck12,
      gpioa_moder_moder12,
      gpioa_odr_odr12,
      gpioa_ospeedr_ospeedr12,
      gpioa_otyper_ot12,
      gpioa_pupdr_pupdr12,
      afrh12,
      asc12,
      br12,
      bs12,
      cnf12,
      mode12,
      idr12,
      lck12,
      moder12,
      odr12,
      ospeedr12,
      ot12,
      pupdr12,
    ),
    (
      "GPIO port A pin 13.",
      GpioA13,
      gpio_a13,
      drv_gpio_a13,
      Afrh13,
      Asc13,
      Br13,
      Bs13,
      Cnf13,
      Mode13,
      Idr13,
      Lck13,
      Moder13,
      Odr13,
      Ospeedr13,
      Ot13,
      Pupdr13,
      gpioa_afrh_afrh13,
      gpioa_ascr_asc13,
      gpioa_brr_br13,
      gpioa_bsrr_br13,
      gpioa_bsrr_bs13,
      gpioa_crh_cnf13,
      gpioa_crh_mode13,
      gpioa_idr_idr13,
      gpioa_lckr_lck13,
      gpioa_moder_moder13,
      gpioa_odr_odr13,
      gpioa_ospeedr_ospeedr13,
      gpioa_otyper_ot13,
      gpioa_pupdr_pupdr13,
      afrh13,
      asc13,
      br13,
      bs13,
      cnf13,
      mode13,
      idr13,
      lck13,
      moder13,
      odr13,
      ospeedr13,
      ot13,
      pupdr13,
    ),
    (
      "GPIO port A pin 14.",
      GpioA14,
      gpio_a14,
      drv_gpio_a14,
      Afrh14,
      Asc14,
      Br14,
      Bs14,
      Cnf14,
      Mode14,
      Idr14,
      Lck14,
      Moder14,
      Odr14,
      Ospeedr14,
      Ot14,
      Pupdr14,
      gpioa_afrh_afrh14,
      gpioa_ascr_asc14,
      gpioa_brr_br14,
      gpioa_bsrr_br14,
      gpioa_bsrr_bs14,
      gpioa_crh_cnf14,
      gpioa_crh_mode14,
      gpioa_idr_idr14,
      gpioa_lckr_lck14,
      gpioa_moder_moder14,
      gpioa_odr_odr14,
      gpioa_ospeedr_ospeedr14,
      gpioa_otyper_ot14,
      gpioa_pupdr_pupdr14,
      afrh14,
      asc14,
      br14,
      bs14,
      cnf14,
      mode14,
      idr14,
      lck14,
      moder14,
      odr14,
      ospeedr14,
      ot14,
      pupdr14,
    ),
    (
      "GPIO port A pin 15.",
      GpioA15,
      gpio_a15,
      drv_gpio_a15,
      Afrh15,
      Asc15,
      Br15,
      Bs15,
      Cnf15,
      Mode15,
      Idr15,
      Lck15,
      Moder15,
      Odr15,
      Ospeedr15,
      Ot15,
      Pupdr15,
      gpioa_afrh_afrh15,
      gpioa_ascr_asc15,
      gpioa_brr_br15,
      gpioa_bsrr_br15,
      gpioa_bsrr_bs15,
      gpioa_crh_cnf15,
      gpioa_crh_mode15,
      gpioa_idr_idr15,
      gpioa_lckr_lck15,
      gpioa_moder_moder15,
      gpioa_odr_odr15,
      gpioa_ospeedr_ospeedr15,
      gpioa_otyper_ot15,
      gpioa_pupdr_pupdr15,
      afrh15,
      asc15,
      br15,
      bs15,
      cnf15,
      mode15,
      idr15,
      lck15,
      moder15,
      odr15,
      ospeedr15,
      ot15,
      pupdr15,
    ),
  ),
}

#[cfg(any(
  feature = "stm32f100",
  feature = "stm32f101",
  feature = "stm32f102",
  feature = "stm32f103",
  feature = "stm32f107",
  feature = "stm32l4x1",
  feature = "stm32l4x2",
  feature = "stm32l4x3",
  feature = "stm32l4x5",
  feature = "stm32l4x6",
  feature = "stm32l4r5",
  feature = "stm32l4r7",
  feature = "stm32l4r9",
  feature = "stm32l4s5",
  feature = "stm32l4s7",
  feature = "stm32l4s9"
))]
gpio_port! {
  "GPIO port B.",
  GpioB,
  drv_gpio_b,
  "GPIO port B pins.",
  GpioBPins,
  gpiob,
  gpiob_afrl,
  gpiob_afrh,
  gpiob_ascr,
  gpiob_brr,
  gpiob_bsrr,
  gpiob_crl,
  gpiob_crh,
  gpiob_idr,
  gpiob_lckr,
  gpiob_moder,
  gpiob_odr,
  gpiob_ospeedr,
  gpiob_otyper,
  gpiob_pupdr,
  #[not(__false__)],
  (
    afrl,
    crl,
    gpiob_afrl,
    gpiob_crl,
    (
      "GPIO port B pin 0.",
      GpioB0,
      gpio_b0,
      drv_gpio_b0,
      Afrl0,
      Asc0,
      Br0,
      Bs0,
      Cnf0,
      Mode0,
      Idr0,
      Lck0,
      Moder0,
      Odr0,
      Ospeedr0,
      Ot0,
      Pupdr0,
      gpiob_afrl_afrl0,
      gpiob_ascr_asc0,
      gpiob_brr_br0,
      gpiob_bsrr_br0,
      gpiob_bsrr_bs0,
      gpiob_crl_cnf0,
      gpiob_crl_mode0,
      gpiob_idr_idr0,
      gpiob_lckr_lck0,
      gpiob_moder_moder0,
      gpiob_odr_odr0,
      gpiob_ospeedr_ospeedr0,
      gpiob_otyper_ot0,
      gpiob_pupdr_pupdr0,
      afrl0,
      asc0,
      br0,
      bs0,
      cnf0,
      mode0,
      idr0,
      lck0,
      moder0,
      odr0,
      ospeedr0,
      ot0,
      pupdr0,
    ),
    (
      "GPIO port B pin 1.",
      GpioB1,
      gpio_b1,
      drv_gpio_b1,
      Afrl1,
      Asc1,
      Br1,
      Bs1,
      Cnf1,
      Mode1,
      Idr1,
      Lck1,
      Moder1,
      Odr1,
      Ospeedr1,
      Ot1,
      Pupdr1,
      gpiob_afrl_afrl1,
      gpiob_ascr_asc1,
      gpiob_brr_br1,
      gpiob_bsrr_br1,
      gpiob_bsrr_bs1,
      gpiob_crl_cnf1,
      gpiob_crl_mode1,
      gpiob_idr_idr1,
      gpiob_lckr_lck1,
      gpiob_moder_moder1,
      gpiob_odr_odr1,
      gpiob_ospeedr_ospeedr1,
      gpiob_otyper_ot1,
      gpiob_pupdr_pupdr1,
      afrl1,
      asc1,
      br1,
      bs1,
      cnf1,
      mode1,
      idr1,
      lck1,
      moder1,
      odr1,
      ospeedr1,
      ot1,
      pupdr1,
    ),
    (
      "GPIO port B pin 2.",
      GpioB2,
      gpio_b2,
      drv_gpio_b2,
      Afrl2,
      Asc2,
      Br2,
      Bs2,
      Cnf2,
      Mode2,
      Idr2,
      Lck2,
      Moder2,
      Odr2,
      Ospeedr2,
      Ot2,
      Pupdr2,
      gpiob_afrl_afrl2,
      gpiob_ascr_asc2,
      gpiob_brr_br2,
      gpiob_bsrr_br2,
      gpiob_bsrr_bs2,
      gpiob_crl_cnf2,
      gpiob_crl_mode2,
      gpiob_idr_idr2,
      gpiob_lckr_lck2,
      gpiob_moder_moder2,
      gpiob_odr_odr2,
      gpiob_ospeedr_ospeedr2,
      gpiob_otyper_ot2,
      gpiob_pupdr_pupdr2,
      afrl2,
      asc2,
      br2,
      bs2,
      cnf2,
      mode2,
      idr2,
      lck2,
      moder2,
      odr2,
      ospeedr2,
      ot2,
      pupdr2,
    ),
    (
      "GPIO port B pin 3.",
      GpioB3,
      gpio_b3,
      drv_gpio_b3,
      Afrl3,
      Asc3,
      Br3,
      Bs3,
      Cnf3,
      Mode3,
      Idr3,
      Lck3,
      Moder3,
      Odr3,
      Ospeedr3,
      Ot3,
      Pupdr3,
      gpiob_afrl_afrl3,
      gpiob_ascr_asc3,
      gpiob_brr_br3,
      gpiob_bsrr_br3,
      gpiob_bsrr_bs3,
      gpiob_crl_cnf3,
      gpiob_crl_mode3,
      gpiob_idr_idr3,
      gpiob_lckr_lck3,
      gpiob_moder_moder3,
      gpiob_odr_odr3,
      gpiob_ospeedr_ospeedr3,
      gpiob_otyper_ot3,
      gpiob_pupdr_pupdr3,
      afrl3,
      asc3,
      br3,
      bs3,
      cnf3,
      mode3,
      idr3,
      lck3,
      moder3,
      odr3,
      ospeedr3,
      ot3,
      pupdr3,
    ),
    (
      "GPIO port B pin 4.",
      GpioB4,
      gpio_b4,
      drv_gpio_b4,
      Afrl4,
      Asc4,
      Br4,
      Bs4,
      Cnf4,
      Mode4,
      Idr4,
      Lck4,
      Moder4,
      Odr4,
      Ospeedr4,
      Ot4,
      Pupdr4,
      gpiob_afrl_afrl4,
      gpiob_ascr_asc4,
      gpiob_brr_br4,
      gpiob_bsrr_br4,
      gpiob_bsrr_bs4,
      gpiob_crl_cnf4,
      gpiob_crl_mode4,
      gpiob_idr_idr4,
      gpiob_lckr_lck4,
      gpiob_moder_moder4,
      gpiob_odr_odr4,
      gpiob_ospeedr_ospeedr4,
      gpiob_otyper_ot4,
      gpiob_pupdr_pupdr4,
      afrl4,
      asc4,
      br4,
      bs4,
      cnf4,
      mode4,
      idr4,
      lck4,
      moder4,
      odr4,
      ospeedr4,
      ot4,
      pupdr4,
    ),
    (
      "GPIO port B pin 5.",
      GpioB5,
      gpio_b5,
      drv_gpio_b5,
      Afrl5,
      Asc5,
      Br5,
      Bs5,
      Cnf5,
      Mode5,
      Idr5,
      Lck5,
      Moder5,
      Odr5,
      Ospeedr5,
      Ot5,
      Pupdr5,
      gpiob_afrl_afrl5,
      gpiob_ascr_asc5,
      gpiob_brr_br5,
      gpiob_bsrr_br5,
      gpiob_bsrr_bs5,
      gpiob_crl_cnf5,
      gpiob_crl_mode5,
      gpiob_idr_idr5,
      gpiob_lckr_lck5,
      gpiob_moder_moder5,
      gpiob_odr_odr5,
      gpiob_ospeedr_ospeedr5,
      gpiob_otyper_ot5,
      gpiob_pupdr_pupdr5,
      afrl5,
      asc5,
      br5,
      bs5,
      cnf5,
      mode5,
      idr5,
      lck5,
      moder5,
      odr5,
      ospeedr5,
      ot5,
      pupdr5,
    ),
    (
      "GPIO port B pin 6.",
      GpioB6,
      gpio_b6,
      drv_gpio_b6,
      Afrl6,
      Asc6,
      Br6,
      Bs6,
      Cnf6,
      Mode6,
      Idr6,
      Lck6,
      Moder6,
      Odr6,
      Ospeedr6,
      Ot6,
      Pupdr6,
      gpiob_afrl_afrl6,
      gpiob_ascr_asc6,
      gpiob_brr_br6,
      gpiob_bsrr_br6,
      gpiob_bsrr_bs6,
      gpiob_crl_cnf6,
      gpiob_crl_mode6,
      gpiob_idr_idr6,
      gpiob_lckr_lck6,
      gpiob_moder_moder6,
      gpiob_odr_odr6,
      gpiob_ospeedr_ospeedr6,
      gpiob_otyper_ot6,
      gpiob_pupdr_pupdr6,
      afrl6,
      asc6,
      br6,
      bs6,
      cnf6,
      mode6,
      idr6,
      lck6,
      moder6,
      odr6,
      ospeedr6,
      ot6,
      pupdr6,
    ),
    (
      "GPIO port B pin 7.",
      GpioB7,
      gpio_b7,
      drv_gpio_b7,
      Afrl7,
      Asc7,
      Br7,
      Bs7,
      Cnf7,
      Mode7,
      Idr7,
      Lck7,
      Moder7,
      Odr7,
      Ospeedr7,
      Ot7,
      Pupdr7,
      gpiob_afrl_afrl7,
      gpiob_ascr_asc7,
      gpiob_brr_br7,
      gpiob_bsrr_br7,
      gpiob_bsrr_bs7,
      gpiob_crl_cnf7,
      gpiob_crl_mode7,
      gpiob_idr_idr7,
      gpiob_lckr_lck7,
      gpiob_moder_moder7,
      gpiob_odr_odr7,
      gpiob_ospeedr_ospeedr7,
      gpiob_otyper_ot7,
      gpiob_pupdr_pupdr7,
      afrl7,
      asc7,
      br7,
      bs7,
      cnf7,
      mode7,
      idr7,
      lck7,
      moder7,
      odr7,
      ospeedr7,
      ot7,
      pupdr7,
    ),
  ),
  (
    afrh,
    crh,
    gpiob_afrh,
    gpiob_crh,
    (
      "GPIO port B pin 8.",
      GpioB8,
      gpio_b8,
      drv_gpio_b8,
      Afrh8,
      Asc8,
      Br8,
      Bs8,
      Cnf8,
      Mode8,
      Idr8,
      Lck8,
      Moder8,
      Odr8,
      Ospeedr8,
      Ot8,
      Pupdr8,
      gpiob_afrh_afrh8,
      gpiob_ascr_asc8,
      gpiob_brr_br8,
      gpiob_bsrr_br8,
      gpiob_bsrr_bs8,
      gpiob_crh_cnf8,
      gpiob_crh_mode8,
      gpiob_idr_idr8,
      gpiob_lckr_lck8,
      gpiob_moder_moder8,
      gpiob_odr_odr8,
      gpiob_ospeedr_ospeedr8,
      gpiob_otyper_ot8,
      gpiob_pupdr_pupdr8,
      afrh8,
      asc8,
      br8,
      bs8,
      cnf8,
      mode8,
      idr8,
      lck8,
      moder8,
      odr8,
      ospeedr8,
      ot8,
      pupdr8,
    ),
    (
      "GPIO port B pin 9.",
      GpioB9,
      gpio_b9,
      drv_gpio_b9,
      Afrh9,
      Asc9,
      Br9,
      Bs9,
      Cnf9,
      Mode9,
      Idr9,
      Lck9,
      Moder9,
      Odr9,
      Ospeedr9,
      Ot9,
      Pupdr9,
      gpiob_afrh_afrh9,
      gpiob_ascr_asc9,
      gpiob_brr_br9,
      gpiob_bsrr_br9,
      gpiob_bsrr_bs9,
      gpiob_crh_cnf9,
      gpiob_crh_mode9,
      gpiob_idr_idr9,
      gpiob_lckr_lck9,
      gpiob_moder_moder9,
      gpiob_odr_odr9,
      gpiob_ospeedr_ospeedr9,
      gpiob_otyper_ot9,
      gpiob_pupdr_pupdr9,
      afrh9,
      asc9,
      br9,
      bs9,
      cnf9,
      mode9,
      idr9,
      lck9,
      moder9,
      odr9,
      ospeedr9,
      ot9,
      pupdr9,
    ),
    (
      "GPIO port B pin 10.",
      GpioB10,
      gpio_b10,
      drv_gpio_b10,
      Afrh10,
      Asc10,
      Br10,
      Bs10,
      Cnf10,
      Mode10,
      Idr10,
      Lck10,
      Moder10,
      Odr10,
      Ospeedr10,
      Ot10,
      Pupdr10,
      gpiob_afrh_afrh10,
      gpiob_ascr_asc10,
      gpiob_brr_br10,
      gpiob_bsrr_br10,
      gpiob_bsrr_bs10,
      gpiob_crh_cnf10,
      gpiob_crh_mode10,
      gpiob_idr_idr10,
      gpiob_lckr_lck10,
      gpiob_moder_moder10,
      gpiob_odr_odr10,
      gpiob_ospeedr_ospeedr10,
      gpiob_otyper_ot10,
      gpiob_pupdr_pupdr10,
      afrh10,
      asc10,
      br10,
      bs10,
      cnf10,
      mode10,
      idr10,
      lck10,
      moder10,
      odr10,
      ospeedr10,
      ot10,
      pupdr10,
    ),
    (
      "GPIO port B pin 11.",
      GpioB11,
      gpio_b11,
      drv_gpio_b11,
      Afrh11,
      Asc11,
      Br11,
      Bs11,
      Cnf11,
      Mode11,
      Idr11,
      Lck11,
      Moder11,
      Odr11,
      Ospeedr11,
      Ot11,
      Pupdr11,
      gpiob_afrh_afrh11,
      gpiob_ascr_asc11,
      gpiob_brr_br11,
      gpiob_bsrr_br11,
      gpiob_bsrr_bs11,
      gpiob_crh_cnf11,
      gpiob_crh_mode11,
      gpiob_idr_idr11,
      gpiob_lckr_lck11,
      gpiob_moder_moder11,
      gpiob_odr_odr11,
      gpiob_ospeedr_ospeedr11,
      gpiob_otyper_ot11,
      gpiob_pupdr_pupdr11,
      afrh11,
      asc11,
      br11,
      bs11,
      cnf11,
      mode11,
      idr11,
      lck11,
      moder11,
      odr11,
      ospeedr11,
      ot11,
      pupdr11,
    ),
    (
      "GPIO port B pin 12.",
      GpioB12,
      gpio_b12,
      drv_gpio_b12,
      Afrh12,
      Asc12,
      Br12,
      Bs12,
      Cnf12,
      Mode12,
      Idr12,
      Lck12,
      Moder12,
      Odr12,
      Ospeedr12,
      Ot12,
      Pupdr12,
      gpiob_afrh_afrh12,
      gpiob_ascr_asc12,
      gpiob_brr_br12,
      gpiob_bsrr_br12,
      gpiob_bsrr_bs12,
      gpiob_crh_cnf12,
      gpiob_crh_mode12,
      gpiob_idr_idr12,
      gpiob_lckr_lck12,
      gpiob_moder_moder12,
      gpiob_odr_odr12,
      gpiob_ospeedr_ospeedr12,
      gpiob_otyper_ot12,
      gpiob_pupdr_pupdr12,
      afrh12,
      asc12,
      br12,
      bs12,
      cnf12,
      mode12,
      idr12,
      lck12,
      moder12,
      odr12,
      ospeedr12,
      ot12,
      pupdr12,
    ),
    (
      "GPIO port B pin 13.",
      GpioB13,
      gpio_b13,
      drv_gpio_b13,
      Afrh13,
      Asc13,
      Br13,
      Bs13,
      Cnf13,
      Mode13,
      Idr13,
      Lck13,
      Moder13,
      Odr13,
      Ospeedr13,
      Ot13,
      Pupdr13,
      gpiob_afrh_afrh13,
      gpiob_ascr_asc13,
      gpiob_brr_br13,
      gpiob_bsrr_br13,
      gpiob_bsrr_bs13,
      gpiob_crh_cnf13,
      gpiob_crh_mode13,
      gpiob_idr_idr13,
      gpiob_lckr_lck13,
      gpiob_moder_moder13,
      gpiob_odr_odr13,
      gpiob_ospeedr_ospeedr13,
      gpiob_otyper_ot13,
      gpiob_pupdr_pupdr13,
      afrh13,
      asc13,
      br13,
      bs13,
      cnf13,
      mode13,
      idr13,
      lck13,
      moder13,
      odr13,
      ospeedr13,
      ot13,
      pupdr13,
    ),
    (
      "GPIO port B pin 14.",
      GpioB14,
      gpio_b14,
      drv_gpio_b14,
      Afrh14,
      Asc14,
      Br14,
      Bs14,
      Cnf14,
      Mode14,
      Idr14,
      Lck14,
      Moder14,
      Odr14,
      Ospeedr14,
      Ot14,
      Pupdr14,
      gpiob_afrh_afrh14,
      gpiob_ascr_asc14,
      gpiob_brr_br14,
      gpiob_bsrr_br14,
      gpiob_bsrr_bs14,
      gpiob_crh_cnf14,
      gpiob_crh_mode14,
      gpiob_idr_idr14,
      gpiob_lckr_lck14,
      gpiob_moder_moder14,
      gpiob_odr_odr14,
      gpiob_ospeedr_ospeedr14,
      gpiob_otyper_ot14,
      gpiob_pupdr_pupdr14,
      afrh14,
      asc14,
      br14,
      bs14,
      cnf14,
      mode14,
      idr14,
      lck14,
      moder14,
      odr14,
      ospeedr14,
      ot14,
      pupdr14,
    ),
    (
      "GPIO port B pin 15.",
      GpioB15,
      gpio_b15,
      drv_gpio_b15,
      Afrh15,
      Asc15,
      Br15,
      Bs15,
      Cnf15,
      Mode15,
      Idr15,
      Lck15,
      Moder15,
      Odr15,
      Ospeedr15,
      Ot15,
      Pupdr15,
      gpiob_afrh_afrh15,
      gpiob_ascr_asc15,
      gpiob_brr_br15,
      gpiob_bsrr_br15,
      gpiob_bsrr_bs15,
      gpiob_crh_cnf15,
      gpiob_crh_mode15,
      gpiob_idr_idr15,
      gpiob_lckr_lck15,
      gpiob_moder_moder15,
      gpiob_odr_odr15,
      gpiob_ospeedr_ospeedr15,
      gpiob_otyper_ot15,
      gpiob_pupdr_pupdr15,
      afrh15,
      asc15,
      br15,
      bs15,
      cnf15,
      mode15,
      idr15,
      lck15,
      moder15,
      odr15,
      ospeedr15,
      ot15,
      pupdr15,
    ),
  ),
}

#[cfg(any(
  feature = "stm32f100",
  feature = "stm32f101",
  feature = "stm32f102",
  feature = "stm32f103",
  feature = "stm32f107",
  feature = "stm32l4x1",
  feature = "stm32l4x2",
  feature = "stm32l4x3",
  feature = "stm32l4x5",
  feature = "stm32l4x6",
  feature = "stm32l4r5",
  feature = "stm32l4r7",
  feature = "stm32l4r9",
  feature = "stm32l4s5",
  feature = "stm32l4s7",
  feature = "stm32l4s9"
))]
gpio_port! {
  "GPIO port C.",
  GpioC,
  drv_gpio_c,
  "GPIO port C pins.",
  GpioCPins,
  gpioc,
  gpioc_afrl,
  gpioc_afrh,
  gpioc_ascr,
  gpioc_brr,
  gpioc_bsrr,
  gpioc_crl,
  gpioc_crh,
  gpioc_idr,
  gpioc_lckr,
  gpioc_moder,
  gpioc_odr,
  gpioc_ospeedr,
  gpioc_otyper,
  gpioc_pupdr,
  #[not(__false__)],
  (
    afrl,
    crl,
    gpioc_afrl,
    gpioc_crl,
    (
      "GPIO port C pin 0.",
      GpioC0,
      gpio_c0,
      drv_gpio_c0,
      Afrl0,
      Asc0,
      Br0,
      Bs0,
      Cnf0,
      Mode0,
      Idr0,
      Lck0,
      Moder0,
      Odr0,
      Ospeedr0,
      Ot0,
      Pupdr0,
      gpioc_afrl_afrl0,
      gpioc_ascr_asc0,
      gpioc_brr_br0,
      gpioc_bsrr_br0,
      gpioc_bsrr_bs0,
      gpioc_crl_cnf0,
      gpioc_crl_mode0,
      gpioc_idr_idr0,
      gpioc_lckr_lck0,
      gpioc_moder_moder0,
      gpioc_odr_odr0,
      gpioc_ospeedr_ospeedr0,
      gpioc_otyper_ot0,
      gpioc_pupdr_pupdr0,
      afrl0,
      asc0,
      br0,
      bs0,
      cnf0,
      mode0,
      idr0,
      lck0,
      moder0,
      odr0,
      ospeedr0,
      ot0,
      pupdr0,
    ),
    (
      "GPIO port C pin 1.",
      GpioC1,
      gpio_c1,
      drv_gpio_c1,
      Afrl1,
      Asc1,
      Br1,
      Bs1,
      Cnf1,
      Mode1,
      Idr1,
      Lck1,
      Moder1,
      Odr1,
      Ospeedr1,
      Ot1,
      Pupdr1,
      gpioc_afrl_afrl1,
      gpioc_ascr_asc1,
      gpioc_brr_br1,
      gpioc_bsrr_br1,
      gpioc_bsrr_bs1,
      gpioc_crl_cnf1,
      gpioc_crl_mode1,
      gpioc_idr_idr1,
      gpioc_lckr_lck1,
      gpioc_moder_moder1,
      gpioc_odr_odr1,
      gpioc_ospeedr_ospeedr1,
      gpioc_otyper_ot1,
      gpioc_pupdr_pupdr1,
      afrl1,
      asc1,
      br1,
      bs1,
      cnf1,
      mode1,
      idr1,
      lck1,
      moder1,
      odr1,
      ospeedr1,
      ot1,
      pupdr1,
    ),
    (
      "GPIO port C pin 2.",
      GpioC2,
      gpio_c2,
      drv_gpio_c2,
      Afrl2,
      Asc2,
      Br2,
      Bs2,
      Cnf2,
      Mode2,
      Idr2,
      Lck2,
      Moder2,
      Odr2,
      Ospeedr2,
      Ot2,
      Pupdr2,
      gpioc_afrl_afrl2,
      gpioc_ascr_asc2,
      gpioc_brr_br2,
      gpioc_bsrr_br2,
      gpioc_bsrr_bs2,
      gpioc_crl_cnf2,
      gpioc_crl_mode2,
      gpioc_idr_idr2,
      gpioc_lckr_lck2,
      gpioc_moder_moder2,
      gpioc_odr_odr2,
      gpioc_ospeedr_ospeedr2,
      gpioc_otyper_ot2,
      gpioc_pupdr_pupdr2,
      afrl2,
      asc2,
      br2,
      bs2,
      cnf2,
      mode2,
      idr2,
      lck2,
      moder2,
      odr2,
      ospeedr2,
      ot2,
      pupdr2,
    ),
    (
      "GPIO port C pin 3.",
      GpioC3,
      gpio_c3,
      drv_gpio_c3,
      Afrl3,
      Asc3,
      Br3,
      Bs3,
      Cnf3,
      Mode3,
      Idr3,
      Lck3,
      Moder3,
      Odr3,
      Ospeedr3,
      Ot3,
      Pupdr3,
      gpioc_afrl_afrl3,
      gpioc_ascr_asc3,
      gpioc_brr_br3,
      gpioc_bsrr_br3,
      gpioc_bsrr_bs3,
      gpioc_crl_cnf3,
      gpioc_crl_mode3,
      gpioc_idr_idr3,
      gpioc_lckr_lck3,
      gpioc_moder_moder3,
      gpioc_odr_odr3,
      gpioc_ospeedr_ospeedr3,
      gpioc_otyper_ot3,
      gpioc_pupdr_pupdr3,
      afrl3,
      asc3,
      br3,
      bs3,
      cnf3,
      mode3,
      idr3,
      lck3,
      moder3,
      odr3,
      ospeedr3,
      ot3,
      pupdr3,
    ),
    (
      "GPIO port C pin 4.",
      GpioC4,
      gpio_c4,
      drv_gpio_c4,
      Afrl4,
      Asc4,
      Br4,
      Bs4,
      Cnf4,
      Mode4,
      Idr4,
      Lck4,
      Moder4,
      Odr4,
      Ospeedr4,
      Ot4,
      Pupdr4,
      gpioc_afrl_afrl4,
      gpioc_ascr_asc4,
      gpioc_brr_br4,
      gpioc_bsrr_br4,
      gpioc_bsrr_bs4,
      gpioc_crl_cnf4,
      gpioc_crl_mode4,
      gpioc_idr_idr4,
      gpioc_lckr_lck4,
      gpioc_moder_moder4,
      gpioc_odr_odr4,
      gpioc_ospeedr_ospeedr4,
      gpioc_otyper_ot4,
      gpioc_pupdr_pupdr4,
      afrl4,
      asc4,
      br4,
      bs4,
      cnf4,
      mode4,
      idr4,
      lck4,
      moder4,
      odr4,
      ospeedr4,
      ot4,
      pupdr4,
    ),
    (
      "GPIO port C pin 5.",
      GpioC5,
      gpio_c5,
      drv_gpio_c5,
      Afrl5,
      Asc5,
      Br5,
      Bs5,
      Cnf5,
      Mode5,
      Idr5,
      Lck5,
      Moder5,
      Odr5,
      Ospeedr5,
      Ot5,
      Pupdr5,
      gpioc_afrl_afrl5,
      gpioc_ascr_asc5,
      gpioc_brr_br5,
      gpioc_bsrr_br5,
      gpioc_bsrr_bs5,
      gpioc_crl_cnf5,
      gpioc_crl_mode5,
      gpioc_idr_idr5,
      gpioc_lckr_lck5,
      gpioc_moder_moder5,
      gpioc_odr_odr5,
      gpioc_ospeedr_ospeedr5,
      gpioc_otyper_ot5,
      gpioc_pupdr_pupdr5,
      afrl5,
      asc5,
      br5,
      bs5,
      cnf5,
      mode5,
      idr5,
      lck5,
      moder5,
      odr5,
      ospeedr5,
      ot5,
      pupdr5,
    ),
    (
      "GPIO port C pin 6.",
      GpioC6,
      gpio_c6,
      drv_gpio_c6,
      Afrl6,
      Asc6,
      Br6,
      Bs6,
      Cnf6,
      Mode6,
      Idr6,
      Lck6,
      Moder6,
      Odr6,
      Ospeedr6,
      Ot6,
      Pupdr6,
      gpioc_afrl_afrl6,
      gpioc_ascr_asc6,
      gpioc_brr_br6,
      gpioc_bsrr_br6,
      gpioc_bsrr_bs6,
      gpioc_crl_cnf6,
      gpioc_crl_mode6,
      gpioc_idr_idr6,
      gpioc_lckr_lck6,
      gpioc_moder_moder6,
      gpioc_odr_odr6,
      gpioc_ospeedr_ospeedr6,
      gpioc_otyper_ot6,
      gpioc_pupdr_pupdr6,
      afrl6,
      asc6,
      br6,
      bs6,
      cnf6,
      mode6,
      idr6,
      lck6,
      moder6,
      odr6,
      ospeedr6,
      ot6,
      pupdr6,
    ),
    (
      "GPIO port C pin 7.",
      GpioC7,
      gpio_c7,
      drv_gpio_c7,
      Afrl7,
      Asc7,
      Br7,
      Bs7,
      Cnf7,
      Mode7,
      Idr7,
      Lck7,
      Moder7,
      Odr7,
      Ospeedr7,
      Ot7,
      Pupdr7,
      gpioc_afrl_afrl7,
      gpioc_ascr_asc7,
      gpioc_brr_br7,
      gpioc_bsrr_br7,
      gpioc_bsrr_bs7,
      gpioc_crl_cnf7,
      gpioc_crl_mode7,
      gpioc_idr_idr7,
      gpioc_lckr_lck7,
      gpioc_moder_moder7,
      gpioc_odr_odr7,
      gpioc_ospeedr_ospeedr7,
      gpioc_otyper_ot7,
      gpioc_pupdr_pupdr7,
      afrl7,
      asc7,
      br7,
      bs7,
      cnf7,
      mode7,
      idr7,
      lck7,
      moder7,
      odr7,
      ospeedr7,
      ot7,
      pupdr7,
    ),
  ),
  (
    afrh,
    crh,
    gpioc_afrh,
    gpioc_crh,
    (
      "GPIO port C pin 8.",
      GpioC8,
      gpio_c8,
      drv_gpio_c8,
      Afrh8,
      Asc8,
      Br8,
      Bs8,
      Cnf8,
      Mode8,
      Idr8,
      Lck8,
      Moder8,
      Odr8,
      Ospeedr8,
      Ot8,
      Pupdr8,
      gpioc_afrh_afrh8,
      gpioc_ascr_asc8,
      gpioc_brr_br8,
      gpioc_bsrr_br8,
      gpioc_bsrr_bs8,
      gpioc_crh_cnf8,
      gpioc_crh_mode8,
      gpioc_idr_idr8,
      gpioc_lckr_lck8,
      gpioc_moder_moder8,
      gpioc_odr_odr8,
      gpioc_ospeedr_ospeedr8,
      gpioc_otyper_ot8,
      gpioc_pupdr_pupdr8,
      afrh8,
      asc8,
      br8,
      bs8,
      cnf8,
      mode8,
      idr8,
      lck8,
      moder8,
      odr8,
      ospeedr8,
      ot8,
      pupdr8,
    ),
    (
      "GPIO port C pin 9.",
      GpioC9,
      gpio_c9,
      drv_gpio_c9,
      Afrh9,
      Asc9,
      Br9,
      Bs9,
      Cnf9,
      Mode9,
      Idr9,
      Lck9,
      Moder9,
      Odr9,
      Ospeedr9,
      Ot9,
      Pupdr9,
      gpioc_afrh_afrh9,
      gpioc_ascr_asc9,
      gpioc_brr_br9,
      gpioc_bsrr_br9,
      gpioc_bsrr_bs9,
      gpioc_crh_cnf9,
      gpioc_crh_mode9,
      gpioc_idr_idr9,
      gpioc_lckr_lck9,
      gpioc_moder_moder9,
      gpioc_odr_odr9,
      gpioc_ospeedr_ospeedr9,
      gpioc_otyper_ot9,
      gpioc_pupdr_pupdr9,
      afrh9,
      asc9,
      br9,
      bs9,
      cnf9,
      mode9,
      idr9,
      lck9,
      moder9,
      odr9,
      ospeedr9,
      ot9,
      pupdr9,
    ),
    (
      "GPIO port C pin 10.",
      GpioC10,
      gpio_c10,
      drv_gpio_c10,
      Afrh10,
      Asc10,
      Br10,
      Bs10,
      Cnf10,
      Mode10,
      Idr10,
      Lck10,
      Moder10,
      Odr10,
      Ospeedr10,
      Ot10,
      Pupdr10,
      gpioc_afrh_afrh10,
      gpioc_ascr_asc10,
      gpioc_brr_br10,
      gpioc_bsrr_br10,
      gpioc_bsrr_bs10,
      gpioc_crh_cnf10,
      gpioc_crh_mode10,
      gpioc_idr_idr10,
      gpioc_lckr_lck10,
      gpioc_moder_moder10,
      gpioc_odr_odr10,
      gpioc_ospeedr_ospeedr10,
      gpioc_otyper_ot10,
      gpioc_pupdr_pupdr10,
      afrh10,
      asc10,
      br10,
      bs10,
      cnf10,
      mode10,
      idr10,
      lck10,
      moder10,
      odr10,
      ospeedr10,
      ot10,
      pupdr10,
    ),
    (
      "GPIO port C pin 11.",
      GpioC11,
      gpio_c11,
      drv_gpio_c11,
      Afrh11,
      Asc11,
      Br11,
      Bs11,
      Cnf11,
      Mode11,
      Idr11,
      Lck11,
      Moder11,
      Odr11,
      Ospeedr11,
      Ot11,
      Pupdr11,
      gpioc_afrh_afrh11,
      gpioc_ascr_asc11,
      gpioc_brr_br11,
      gpioc_bsrr_br11,
      gpioc_bsrr_bs11,
      gpioc_crh_cnf11,
      gpioc_crh_mode11,
      gpioc_idr_idr11,
      gpioc_lckr_lck11,
      gpioc_moder_moder11,
      gpioc_odr_odr11,
      gpioc_ospeedr_ospeedr11,
      gpioc_otyper_ot11,
      gpioc_pupdr_pupdr11,
      afrh11,
      asc11,
      br11,
      bs11,
      cnf11,
      mode11,
      idr11,
      lck11,
      moder11,
      odr11,
      ospeedr11,
      ot11,
      pupdr11,
    ),
    (
      "GPIO port C pin 12.",
      GpioC12,
      gpio_c12,
      drv_gpio_c12,
      Afrh12,
      Asc12,
      Br12,
      Bs12,
      Cnf12,
      Mode12,
      Idr12,
      Lck12,
      Moder12,
      Odr12,
      Ospeedr12,
      Ot12,
      Pupdr12,
      gpioc_afrh_afrh12,
      gpioc_ascr_asc12,
      gpioc_brr_br12,
      gpioc_bsrr_br12,
      gpioc_bsrr_bs12,
      gpioc_crh_cnf12,
      gpioc_crh_mode12,
      gpioc_idr_idr12,
      gpioc_lckr_lck12,
      gpioc_moder_moder12,
      gpioc_odr_odr12,
      gpioc_ospeedr_ospeedr12,
      gpioc_otyper_ot12,
      gpioc_pupdr_pupdr12,
      afrh12,
      asc12,
      br12,
      bs12,
      cnf12,
      mode12,
      idr12,
      lck12,
      moder12,
      odr12,
      ospeedr12,
      ot12,
      pupdr12,
    ),
    (
      "GPIO port C pin 13.",
      GpioC13,
      gpio_c13,
      drv_gpio_c13,
      Afrh13,
      Asc13,
      Br13,
      Bs13,
      Cnf13,
      Mode13,
      Idr13,
      Lck13,
      Moder13,
      Odr13,
      Ospeedr13,
      Ot13,
      Pupdr13,
      gpioc_afrh_afrh13,
      gpioc_ascr_asc13,
      gpioc_brr_br13,
      gpioc_bsrr_br13,
      gpioc_bsrr_bs13,
      gpioc_crh_cnf13,
      gpioc_crh_mode13,
      gpioc_idr_idr13,
      gpioc_lckr_lck13,
      gpioc_moder_moder13,
      gpioc_odr_odr13,
      gpioc_ospeedr_ospeedr13,
      gpioc_otyper_ot13,
      gpioc_pupdr_pupdr13,
      afrh13,
      asc13,
      br13,
      bs13,
      cnf13,
      mode13,
      idr13,
      lck13,
      moder13,
      odr13,
      ospeedr13,
      ot13,
      pupdr13,
    ),
    (
      "GPIO port C pin 14.",
      GpioC14,
      gpio_c14,
      drv_gpio_c14,
      Afrh14,
      Asc14,
      Br14,
      Bs14,
      Cnf14,
      Mode14,
      Idr14,
      Lck14,
      Moder14,
      Odr14,
      Ospeedr14,
      Ot14,
      Pupdr14,
      gpioc_afrh_afrh14,
      gpioc_ascr_asc14,
      gpioc_brr_br14,
      gpioc_bsrr_br14,
      gpioc_bsrr_bs14,
      gpioc_crh_cnf14,
      gpioc_crh_mode14,
      gpioc_idr_idr14,
      gpioc_lckr_lck14,
      gpioc_moder_moder14,
      gpioc_odr_odr14,
      gpioc_ospeedr_ospeedr14,
      gpioc_otyper_ot14,
      gpioc_pupdr_pupdr14,
      afrh14,
      asc14,
      br14,
      bs14,
      cnf14,
      mode14,
      idr14,
      lck14,
      moder14,
      odr14,
      ospeedr14,
      ot14,
      pupdr14,
    ),
    (
      "GPIO port C pin 15.",
      GpioC15,
      gpio_c15,
      drv_gpio_c15,
      Afrh15,
      Asc15,
      Br15,
      Bs15,
      Cnf15,
      Mode15,
      Idr15,
      Lck15,
      Moder15,
      Odr15,
      Ospeedr15,
      Ot15,
      Pupdr15,
      gpioc_afrh_afrh15,
      gpioc_ascr_asc15,
      gpioc_brr_br15,
      gpioc_bsrr_br15,
      gpioc_bsrr_bs15,
      gpioc_crh_cnf15,
      gpioc_crh_mode15,
      gpioc_idr_idr15,
      gpioc_lckr_lck15,
      gpioc_moder_moder15,
      gpioc_odr_odr15,
      gpioc_ospeedr_ospeedr15,
      gpioc_otyper_ot15,
      gpioc_pupdr_pupdr15,
      afrh15,
      asc15,
      br15,
      bs15,
      cnf15,
      mode15,
      idr15,
      lck15,
      moder15,
      odr15,
      ospeedr15,
      ot15,
      pupdr15,
    ),
  ),
}

#[cfg(any(
  feature = "stm32f100",
  feature = "stm32f101",
  feature = "stm32f102",
  feature = "stm32f103",
  feature = "stm32f107",
  feature = "stm32l4x1",
  feature = "stm32l4x2",
  feature = "stm32l4x3",
  feature = "stm32l4x5",
  feature = "stm32l4x6",
  feature = "stm32l4r5",
  feature = "stm32l4r7",
  feature = "stm32l4r9",
  feature = "stm32l4s5",
  feature = "stm32l4s7",
  feature = "stm32l4s9"
))]
gpio_port! {
  "GPIO port D.",
  GpioD,
  drv_gpio_d,
  "GPIO port D pins.",
  GpioDPins,
  gpiod,
  gpiod_afrl,
  gpiod_afrh,
  gpiod_ascr,
  gpiod_brr,
  gpiod_bsrr,
  gpiod_crl,
  gpiod_crh,
  gpiod_idr,
  gpiod_lckr,
  gpiod_moder,
  gpiod_odr,
  gpiod_ospeedr,
  gpiod_otyper,
  gpiod_pupdr,
  #[not(__false__)],
  (
    afrl,
    crl,
    gpiod_afrl,
    gpiod_crl,
    (
      "GPIO port D pin 0.",
      GpioD0,
      gpio_d0,
      drv_gpio_d0,
      Afrl0,
      Asc0,
      Br0,
      Bs0,
      Cnf0,
      Mode0,
      Idr0,
      Lck0,
      Moder0,
      Odr0,
      Ospeedr0,
      Ot0,
      Pupdr0,
      gpiod_afrl_afrl0,
      gpiod_ascr_asc0,
      gpiod_brr_br0,
      gpiod_bsrr_br0,
      gpiod_bsrr_bs0,
      gpiod_crl_cnf0,
      gpiod_crl_mode0,
      gpiod_idr_idr0,
      gpiod_lckr_lck0,
      gpiod_moder_moder0,
      gpiod_odr_odr0,
      gpiod_ospeedr_ospeedr0,
      gpiod_otyper_ot0,
      gpiod_pupdr_pupdr0,
      afrl0,
      asc0,
      br0,
      bs0,
      cnf0,
      mode0,
      idr0,
      lck0,
      moder0,
      odr0,
      ospeedr0,
      ot0,
      pupdr0,
    ),
    (
      "GPIO port D pin 1.",
      GpioD1,
      gpio_d1,
      drv_gpio_d1,
      Afrl1,
      Asc1,
      Br1,
      Bs1,
      Cnf1,
      Mode1,
      Idr1,
      Lck1,
      Moder1,
      Odr1,
      Ospeedr1,
      Ot1,
      Pupdr1,
      gpiod_afrl_afrl1,
      gpiod_ascr_asc1,
      gpiod_brr_br1,
      gpiod_bsrr_br1,
      gpiod_bsrr_bs1,
      gpiod_crl_cnf1,
      gpiod_crl_mode1,
      gpiod_idr_idr1,
      gpiod_lckr_lck1,
      gpiod_moder_moder1,
      gpiod_odr_odr1,
      gpiod_ospeedr_ospeedr1,
      gpiod_otyper_ot1,
      gpiod_pupdr_pupdr1,
      afrl1,
      asc1,
      br1,
      bs1,
      cnf1,
      mode1,
      idr1,
      lck1,
      moder1,
      odr1,
      ospeedr1,
      ot1,
      pupdr1,
    ),
    (
      "GPIO port D pin 2.",
      GpioD2,
      gpio_d2,
      drv_gpio_d2,
      Afrl2,
      Asc2,
      Br2,
      Bs2,
      Cnf2,
      Mode2,
      Idr2,
      Lck2,
      Moder2,
      Odr2,
      Ospeedr2,
      Ot2,
      Pupdr2,
      gpiod_afrl_afrl2,
      gpiod_ascr_asc2,
      gpiod_brr_br2,
      gpiod_bsrr_br2,
      gpiod_bsrr_bs2,
      gpiod_crl_cnf2,
      gpiod_crl_mode2,
      gpiod_idr_idr2,
      gpiod_lckr_lck2,
      gpiod_moder_moder2,
      gpiod_odr_odr2,
      gpiod_ospeedr_ospeedr2,
      gpiod_otyper_ot2,
      gpiod_pupdr_pupdr2,
      afrl2,
      asc2,
      br2,
      bs2,
      cnf2,
      mode2,
      idr2,
      lck2,
      moder2,
      odr2,
      ospeedr2,
      ot2,
      pupdr2,
    ),
    (
      "GPIO port D pin 3.",
      GpioD3,
      gpio_d3,
      drv_gpio_d3,
      Afrl3,
      Asc3,
      Br3,
      Bs3,
      Cnf3,
      Mode3,
      Idr3,
      Lck3,
      Moder3,
      Odr3,
      Ospeedr3,
      Ot3,
      Pupdr3,
      gpiod_afrl_afrl3,
      gpiod_ascr_asc3,
      gpiod_brr_br3,
      gpiod_bsrr_br3,
      gpiod_bsrr_bs3,
      gpiod_crl_cnf3,
      gpiod_crl_mode3,
      gpiod_idr_idr3,
      gpiod_lckr_lck3,
      gpiod_moder_moder3,
      gpiod_odr_odr3,
      gpiod_ospeedr_ospeedr3,
      gpiod_otyper_ot3,
      gpiod_pupdr_pupdr3,
      afrl3,
      asc3,
      br3,
      bs3,
      cnf3,
      mode3,
      idr3,
      lck3,
      moder3,
      odr3,
      ospeedr3,
      ot3,
      pupdr3,
    ),
    (
      "GPIO port D pin 4.",
      GpioD4,
      gpio_d4,
      drv_gpio_d4,
      Afrl4,
      Asc4,
      Br4,
      Bs4,
      Cnf4,
      Mode4,
      Idr4,
      Lck4,
      Moder4,
      Odr4,
      Ospeedr4,
      Ot4,
      Pupdr4,
      gpiod_afrl_afrl4,
      gpiod_ascr_asc4,
      gpiod_brr_br4,
      gpiod_bsrr_br4,
      gpiod_bsrr_bs4,
      gpiod_crl_cnf4,
      gpiod_crl_mode4,
      gpiod_idr_idr4,
      gpiod_lckr_lck4,
      gpiod_moder_moder4,
      gpiod_odr_odr4,
      gpiod_ospeedr_ospeedr4,
      gpiod_otyper_ot4,
      gpiod_pupdr_pupdr4,
      afrl4,
      asc4,
      br4,
      bs4,
      cnf4,
      mode4,
      idr4,
      lck4,
      moder4,
      odr4,
      ospeedr4,
      ot4,
      pupdr4,
    ),
    (
      "GPIO port D pin 5.",
      GpioD5,
      gpio_d5,
      drv_gpio_d5,
      Afrl5,
      Asc5,
      Br5,
      Bs5,
      Cnf5,
      Mode5,
      Idr5,
      Lck5,
      Moder5,
      Odr5,
      Ospeedr5,
      Ot5,
      Pupdr5,
      gpiod_afrl_afrl5,
      gpiod_ascr_asc5,
      gpiod_brr_br5,
      gpiod_bsrr_br5,
      gpiod_bsrr_bs5,
      gpiod_crl_cnf5,
      gpiod_crl_mode5,
      gpiod_idr_idr5,
      gpiod_lckr_lck5,
      gpiod_moder_moder5,
      gpiod_odr_odr5,
      gpiod_ospeedr_ospeedr5,
      gpiod_otyper_ot5,
      gpiod_pupdr_pupdr5,
      afrl5,
      asc5,
      br5,
      bs5,
      cnf5,
      mode5,
      idr5,
      lck5,
      moder5,
      odr5,
      ospeedr5,
      ot5,
      pupdr5,
    ),
    (
      "GPIO port D pin 6.",
      GpioD6,
      gpio_d6,
      drv_gpio_d6,
      Afrl6,
      Asc6,
      Br6,
      Bs6,
      Cnf6,
      Mode6,
      Idr6,
      Lck6,
      Moder6,
      Odr6,
      Ospeedr6,
      Ot6,
      Pupdr6,
      gpiod_afrl_afrl6,
      gpiod_ascr_asc6,
      gpiod_brr_br6,
      gpiod_bsrr_br6,
      gpiod_bsrr_bs6,
      gpiod_crl_cnf6,
      gpiod_crl_mode6,
      gpiod_idr_idr6,
      gpiod_lckr_lck6,
      gpiod_moder_moder6,
      gpiod_odr_odr6,
      gpiod_ospeedr_ospeedr6,
      gpiod_otyper_ot6,
      gpiod_pupdr_pupdr6,
      afrl6,
      asc6,
      br6,
      bs6,
      cnf6,
      mode6,
      idr6,
      lck6,
      moder6,
      odr6,
      ospeedr6,
      ot6,
      pupdr6,
    ),
    (
      "GPIO port D pin 7.",
      GpioD7,
      gpio_d7,
      drv_gpio_d7,
      Afrl7,
      Asc7,
      Br7,
      Bs7,
      Cnf7,
      Mode7,
      Idr7,
      Lck7,
      Moder7,
      Odr7,
      Ospeedr7,
      Ot7,
      Pupdr7,
      gpiod_afrl_afrl7,
      gpiod_ascr_asc7,
      gpiod_brr_br7,
      gpiod_bsrr_br7,
      gpiod_bsrr_bs7,
      gpiod_crl_cnf7,
      gpiod_crl_mode7,
      gpiod_idr_idr7,
      gpiod_lckr_lck7,
      gpiod_moder_moder7,
      gpiod_odr_odr7,
      gpiod_ospeedr_ospeedr7,
      gpiod_otyper_ot7,
      gpiod_pupdr_pupdr7,
      afrl7,
      asc7,
      br7,
      bs7,
      cnf7,
      mode7,
      idr7,
      lck7,
      moder7,
      odr7,
      ospeedr7,
      ot7,
      pupdr7,
    ),
  ),
  (
    afrh,
    crh,
    gpiod_afrh,
    gpiod_crh,
    (
      "GPIO port D pin 8.",
      GpioD8,
      gpio_d8,
      drv_gpio_d8,
      Afrh8,
      Asc8,
      Br8,
      Bs8,
      Cnf8,
      Mode8,
      Idr8,
      Lck8,
      Moder8,
      Odr8,
      Ospeedr8,
      Ot8,
      Pupdr8,
      gpiod_afrh_afrh8,
      gpiod_ascr_asc8,
      gpiod_brr_br8,
      gpiod_bsrr_br8,
      gpiod_bsrr_bs8,
      gpiod_crh_cnf8,
      gpiod_crh_mode8,
      gpiod_idr_idr8,
      gpiod_lckr_lck8,
      gpiod_moder_moder8,
      gpiod_odr_odr8,
      gpiod_ospeedr_ospeedr8,
      gpiod_otyper_ot8,
      gpiod_pupdr_pupdr8,
      afrh8,
      asc8,
      br8,
      bs8,
      cnf8,
      mode8,
      idr8,
      lck8,
      moder8,
      odr8,
      ospeedr8,
      ot8,
      pupdr8,
    ),
    (
      "GPIO port D pin 9.",
      GpioD9,
      gpio_d9,
      drv_gpio_d9,
      Afrh9,
      Asc9,
      Br9,
      Bs9,
      Cnf9,
      Mode9,
      Idr9,
      Lck9,
      Moder9,
      Odr9,
      Ospeedr9,
      Ot9,
      Pupdr9,
      gpiod_afrh_afrh9,
      gpiod_ascr_asc9,
      gpiod_brr_br9,
      gpiod_bsrr_br9,
      gpiod_bsrr_bs9,
      gpiod_crh_cnf9,
      gpiod_crh_mode9,
      gpiod_idr_idr9,
      gpiod_lckr_lck9,
      gpiod_moder_moder9,
      gpiod_odr_odr9,
      gpiod_ospeedr_ospeedr9,
      gpiod_otyper_ot9,
      gpiod_pupdr_pupdr9,
      afrh9,
      asc9,
      br9,
      bs9,
      cnf9,
      mode9,
      idr9,
      lck9,
      moder9,
      odr9,
      ospeedr9,
      ot9,
      pupdr9,
    ),
    (
      "GPIO port D pin 10.",
      GpioD10,
      gpio_d10,
      drv_gpio_d10,
      Afrh10,
      Asc10,
      Br10,
      Bs10,
      Cnf10,
      Mode10,
      Idr10,
      Lck10,
      Moder10,
      Odr10,
      Ospeedr10,
      Ot10,
      Pupdr10,
      gpiod_afrh_afrh10,
      gpiod_ascr_asc10,
      gpiod_brr_br10,
      gpiod_bsrr_br10,
      gpiod_bsrr_bs10,
      gpiod_crh_cnf10,
      gpiod_crh_mode10,
      gpiod_idr_idr10,
      gpiod_lckr_lck10,
      gpiod_moder_moder10,
      gpiod_odr_odr10,
      gpiod_ospeedr_ospeedr10,
      gpiod_otyper_ot10,
      gpiod_pupdr_pupdr10,
      afrh10,
      asc10,
      br10,
      bs10,
      cnf10,
      mode10,
      idr10,
      lck10,
      moder10,
      odr10,
      ospeedr10,
      ot10,
      pupdr10,
    ),
    (
      "GPIO port D pin 11.",
      GpioD11,
      gpio_d11,
      drv_gpio_d11,
      Afrh11,
      Asc11,
      Br11,
      Bs11,
      Cnf11,
      Mode11,
      Idr11,
      Lck11,
      Moder11,
      Odr11,
      Ospeedr11,
      Ot11,
      Pupdr11,
      gpiod_afrh_afrh11,
      gpiod_ascr_asc11,
      gpiod_brr_br11,
      gpiod_bsrr_br11,
      gpiod_bsrr_bs11,
      gpiod_crh_cnf11,
      gpiod_crh_mode11,
      gpiod_idr_idr11,
      gpiod_lckr_lck11,
      gpiod_moder_moder11,
      gpiod_odr_odr11,
      gpiod_ospeedr_ospeedr11,
      gpiod_otyper_ot11,
      gpiod_pupdr_pupdr11,
      afrh11,
      asc11,
      br11,
      bs11,
      cnf11,
      mode11,
      idr11,
      lck11,
      moder11,
      odr11,
      ospeedr11,
      ot11,
      pupdr11,
    ),
    (
      "GPIO port D pin 12.",
      GpioD12,
      gpio_d12,
      drv_gpio_d12,
      Afrh12,
      Asc12,
      Br12,
      Bs12,
      Cnf12,
      Mode12,
      Idr12,
      Lck12,
      Moder12,
      Odr12,
      Ospeedr12,
      Ot12,
      Pupdr12,
      gpiod_afrh_afrh12,
      gpiod_ascr_asc12,
      gpiod_brr_br12,
      gpiod_bsrr_br12,
      gpiod_bsrr_bs12,
      gpiod_crh_cnf12,
      gpiod_crh_mode12,
      gpiod_idr_idr12,
      gpiod_lckr_lck12,
      gpiod_moder_moder12,
      gpiod_odr_odr12,
      gpiod_ospeedr_ospeedr12,
      gpiod_otyper_ot12,
      gpiod_pupdr_pupdr12,
      afrh12,
      asc12,
      br12,
      bs12,
      cnf12,
      mode12,
      idr12,
      lck12,
      moder12,
      odr12,
      ospeedr12,
      ot12,
      pupdr12,
    ),
    (
      "GPIO port D pin 13.",
      GpioD13,
      gpio_d13,
      drv_gpio_d13,
      Afrh13,
      Asc13,
      Br13,
      Bs13,
      Cnf13,
      Mode13,
      Idr13,
      Lck13,
      Moder13,
      Odr13,
      Ospeedr13,
      Ot13,
      Pupdr13,
      gpiod_afrh_afrh13,
      gpiod_ascr_asc13,
      gpiod_brr_br13,
      gpiod_bsrr_br13,
      gpiod_bsrr_bs13,
      gpiod_crh_cnf13,
      gpiod_crh_mode13,
      gpiod_idr_idr13,
      gpiod_lckr_lck13,
      gpiod_moder_moder13,
      gpiod_odr_odr13,
      gpiod_ospeedr_ospeedr13,
      gpiod_otyper_ot13,
      gpiod_pupdr_pupdr13,
      afrh13,
      asc13,
      br13,
      bs13,
      cnf13,
      mode13,
      idr13,
      lck13,
      moder13,
      odr13,
      ospeedr13,
      ot13,
      pupdr13,
    ),
    (
      "GPIO port D pin 14.",
      GpioD14,
      gpio_d14,
      drv_gpio_d14,
      Afrh14,
      Asc14,
      Br14,
      Bs14,
      Cnf14,
      Mode14,
      Idr14,
      Lck14,
      Moder14,
      Odr14,
      Ospeedr14,
      Ot14,
      Pupdr14,
      gpiod_afrh_afrh14,
      gpiod_ascr_asc14,
      gpiod_brr_br14,
      gpiod_bsrr_br14,
      gpiod_bsrr_bs14,
      gpiod_crh_cnf14,
      gpiod_crh_mode14,
      gpiod_idr_idr14,
      gpiod_lckr_lck14,
      gpiod_moder_moder14,
      gpiod_odr_odr14,
      gpiod_ospeedr_ospeedr14,
      gpiod_otyper_ot14,
      gpiod_pupdr_pupdr14,
      afrh14,
      asc14,
      br14,
      bs14,
      cnf14,
      mode14,
      idr14,
      lck14,
      moder14,
      odr14,
      ospeedr14,
      ot14,
      pupdr14,
    ),
    (
      "GPIO port D pin 15.",
      GpioD15,
      gpio_d15,
      drv_gpio_d15,
      Afrh15,
      Asc15,
      Br15,
      Bs15,
      Cnf15,
      Mode15,
      Idr15,
      Lck15,
      Moder15,
      Odr15,
      Ospeedr15,
      Ot15,
      Pupdr15,
      gpiod_afrh_afrh15,
      gpiod_ascr_asc15,
      gpiod_brr_br15,
      gpiod_bsrr_br15,
      gpiod_bsrr_bs15,
      gpiod_crh_cnf15,
      gpiod_crh_mode15,
      gpiod_idr_idr15,
      gpiod_lckr_lck15,
      gpiod_moder_moder15,
      gpiod_odr_odr15,
      gpiod_ospeedr_ospeedr15,
      gpiod_otyper_ot15,
      gpiod_pupdr_pupdr15,
      afrh15,
      asc15,
      br15,
      bs15,
      cnf15,
      mode15,
      idr15,
      lck15,
      moder15,
      odr15,
      ospeedr15,
      ot15,
      pupdr15,
    ),
  ),
}

#[cfg(any(
  feature = "stm32f100",
  feature = "stm32f101",
  feature = "stm32f102",
  feature = "stm32f103",
  feature = "stm32f107",
  feature = "stm32l4x1",
  feature = "stm32l4x2",
  feature = "stm32l4x3",
  feature = "stm32l4x5",
  feature = "stm32l4x6",
  feature = "stm32l4r5",
  feature = "stm32l4r7",
  feature = "stm32l4r9",
  feature = "stm32l4s5",
  feature = "stm32l4s7",
  feature = "stm32l4s9"
))]
gpio_port! {
  "GPIO port E.",
  GpioE,
  drv_gpio_e,
  "GPIO port E pins.",
  GpioEPins,
  gpioe,
  gpioe_afrl,
  gpioe_afrh,
  gpioe_ascr,
  gpioe_brr,
  gpioe_bsrr,
  gpioe_crl,
  gpioe_crh,
  gpioe_idr,
  gpioe_lckr,
  gpioe_moder,
  gpioe_odr,
  gpioe_ospeedr,
  gpioe_otyper,
  gpioe_pupdr,
  #[not(__false__)],
  (
    afrl,
    crl,
    gpioe_afrl,
    gpioe_crl,
    (
      "GPIO port E pin 0.",
      GpioE0,
      gpio_e0,
      drv_gpio_e0,
      Afrl0,
      Asc0,
      Br0,
      Bs0,
      Cnf0,
      Mode0,
      Idr0,
      Lck0,
      Moder0,
      Odr0,
      Ospeedr0,
      Ot0,
      Pupdr0,
      gpioe_afrl_afrl0,
      gpioe_ascr_asc0,
      gpioe_brr_br0,
      gpioe_bsrr_br0,
      gpioe_bsrr_bs0,
      gpioe_crl_cnf0,
      gpioe_crl_mode0,
      gpioe_idr_idr0,
      gpioe_lckr_lck0,
      gpioe_moder_moder0,
      gpioe_odr_odr0,
      gpioe_ospeedr_ospeedr0,
      gpioe_otyper_ot0,
      gpioe_pupdr_pupdr0,
      afrl0,
      asc0,
      br0,
      bs0,
      cnf0,
      mode0,
      idr0,
      lck0,
      moder0,
      odr0,
      ospeedr0,
      ot0,
      pupdr0,
    ),
    (
      "GPIO port E pin 1.",
      GpioE1,
      gpio_e1,
      drv_gpio_e1,
      Afrl1,
      Asc1,
      Br1,
      Bs1,
      Cnf1,
      Mode1,
      Idr1,
      Lck1,
      Moder1,
      Odr1,
      Ospeedr1,
      Ot1,
      Pupdr1,
      gpioe_afrl_afrl1,
      gpioe_ascr_asc1,
      gpioe_brr_br1,
      gpioe_bsrr_br1,
      gpioe_bsrr_bs1,
      gpioe_crl_cnf1,
      gpioe_crl_mode1,
      gpioe_idr_idr1,
      gpioe_lckr_lck1,
      gpioe_moder_moder1,
      gpioe_odr_odr1,
      gpioe_ospeedr_ospeedr1,
      gpioe_otyper_ot1,
      gpioe_pupdr_pupdr1,
      afrl1,
      asc1,
      br1,
      bs1,
      cnf1,
      mode1,
      idr1,
      lck1,
      moder1,
      odr1,
      ospeedr1,
      ot1,
      pupdr1,
    ),
    (
      "GPIO port E pin 2.",
      GpioE2,
      gpio_e2,
      drv_gpio_e2,
      Afrl2,
      Asc2,
      Br2,
      Bs2,
      Cnf2,
      Mode2,
      Idr2,
      Lck2,
      Moder2,
      Odr2,
      Ospeedr2,
      Ot2,
      Pupdr2,
      gpioe_afrl_afrl2,
      gpioe_ascr_asc2,
      gpioe_brr_br2,
      gpioe_bsrr_br2,
      gpioe_bsrr_bs2,
      gpioe_crl_cnf2,
      gpioe_crl_mode2,
      gpioe_idr_idr2,
      gpioe_lckr_lck2,
      gpioe_moder_moder2,
      gpioe_odr_odr2,
      gpioe_ospeedr_ospeedr2,
      gpioe_otyper_ot2,
      gpioe_pupdr_pupdr2,
      afrl2,
      asc2,
      br2,
      bs2,
      cnf2,
      mode2,
      idr2,
      lck2,
      moder2,
      odr2,
      ospeedr2,
      ot2,
      pupdr2,
    ),
    (
      "GPIO port E pin 3.",
      GpioE3,
      gpio_e3,
      drv_gpio_e3,
      Afrl3,
      Asc3,
      Br3,
      Bs3,
      Cnf3,
      Mode3,
      Idr3,
      Lck3,
      Moder3,
      Odr3,
      Ospeedr3,
      Ot3,
      Pupdr3,
      gpioe_afrl_afrl3,
      gpioe_ascr_asc3,
      gpioe_brr_br3,
      gpioe_bsrr_br3,
      gpioe_bsrr_bs3,
      gpioe_crl_cnf3,
      gpioe_crl_mode3,
      gpioe_idr_idr3,
      gpioe_lckr_lck3,
      gpioe_moder_moder3,
      gpioe_odr_odr3,
      gpioe_ospeedr_ospeedr3,
      gpioe_otyper_ot3,
      gpioe_pupdr_pupdr3,
      afrl3,
      asc3,
      br3,
      bs3,
      cnf3,
      mode3,
      idr3,
      lck3,
      moder3,
      odr3,
      ospeedr3,
      ot3,
      pupdr3,
    ),
    (
      "GPIO port E pin 4.",
      GpioE4,
      gpio_e4,
      drv_gpio_e4,
      Afrl4,
      Asc4,
      Br4,
      Bs4,
      Cnf4,
      Mode4,
      Idr4,
      Lck4,
      Moder4,
      Odr4,
      Ospeedr4,
      Ot4,
      Pupdr4,
      gpioe_afrl_afrl4,
      gpioe_ascr_asc4,
      gpioe_brr_br4,
      gpioe_bsrr_br4,
      gpioe_bsrr_bs4,
      gpioe_crl_cnf4,
      gpioe_crl_mode4,
      gpioe_idr_idr4,
      gpioe_lckr_lck4,
      gpioe_moder_moder4,
      gpioe_odr_odr4,
      gpioe_ospeedr_ospeedr4,
      gpioe_otyper_ot4,
      gpioe_pupdr_pupdr4,
      afrl4,
      asc4,
      br4,
      bs4,
      cnf4,
      mode4,
      idr4,
      lck4,
      moder4,
      odr4,
      ospeedr4,
      ot4,
      pupdr4,
    ),
    (
      "GPIO port E pin 5.",
      GpioE5,
      gpio_e5,
      drv_gpio_e5,
      Afrl5,
      Asc5,
      Br5,
      Bs5,
      Cnf5,
      Mode5,
      Idr5,
      Lck5,
      Moder5,
      Odr5,
      Ospeedr5,
      Ot5,
      Pupdr5,
      gpioe_afrl_afrl5,
      gpioe_ascr_asc5,
      gpioe_brr_br5,
      gpioe_bsrr_br5,
      gpioe_bsrr_bs5,
      gpioe_crl_cnf5,
      gpioe_crl_mode5,
      gpioe_idr_idr5,
      gpioe_lckr_lck5,
      gpioe_moder_moder5,
      gpioe_odr_odr5,
      gpioe_ospeedr_ospeedr5,
      gpioe_otyper_ot5,
      gpioe_pupdr_pupdr5,
      afrl5,
      asc5,
      br5,
      bs5,
      cnf5,
      mode5,
      idr5,
      lck5,
      moder5,
      odr5,
      ospeedr5,
      ot5,
      pupdr5,
    ),
    (
      "GPIO port E pin 6.",
      GpioE6,
      gpio_e6,
      drv_gpio_e6,
      Afrl6,
      Asc6,
      Br6,
      Bs6,
      Cnf6,
      Mode6,
      Idr6,
      Lck6,
      Moder6,
      Odr6,
      Ospeedr6,
      Ot6,
      Pupdr6,
      gpioe_afrl_afrl6,
      gpioe_ascr_asc6,
      gpioe_brr_br6,
      gpioe_bsrr_br6,
      gpioe_bsrr_bs6,
      gpioe_crl_cnf6,
      gpioe_crl_mode6,
      gpioe_idr_idr6,
      gpioe_lckr_lck6,
      gpioe_moder_moder6,
      gpioe_odr_odr6,
      gpioe_ospeedr_ospeedr6,
      gpioe_otyper_ot6,
      gpioe_pupdr_pupdr6,
      afrl6,
      asc6,
      br6,
      bs6,
      cnf6,
      mode6,
      idr6,
      lck6,
      moder6,
      odr6,
      ospeedr6,
      ot6,
      pupdr6,
    ),
    (
      "GPIO port E pin 7.",
      GpioE7,
      gpio_e7,
      drv_gpio_e7,
      Afrl7,
      Asc7,
      Br7,
      Bs7,
      Cnf7,
      Mode7,
      Idr7,
      Lck7,
      Moder7,
      Odr7,
      Ospeedr7,
      Ot7,
      Pupdr7,
      gpioe_afrl_afrl7,
      gpioe_ascr_asc7,
      gpioe_brr_br7,
      gpioe_bsrr_br7,
      gpioe_bsrr_bs7,
      gpioe_crl_cnf7,
      gpioe_crl_mode7,
      gpioe_idr_idr7,
      gpioe_lckr_lck7,
      gpioe_moder_moder7,
      gpioe_odr_odr7,
      gpioe_ospeedr_ospeedr7,
      gpioe_otyper_ot7,
      gpioe_pupdr_pupdr7,
      afrl7,
      asc7,
      br7,
      bs7,
      cnf7,
      mode7,
      idr7,
      lck7,
      moder7,
      odr7,
      ospeedr7,
      ot7,
      pupdr7,
    ),
  ),
  (
    afrh,
    crh,
    gpioe_afrh,
    gpioe_crh,
    (
      "GPIO port E pin 8.",
      GpioE8,
      gpio_e8,
      drv_gpio_e8,
      Afrh8,
      Asc8,
      Br8,
      Bs8,
      Cnf8,
      Mode8,
      Idr8,
      Lck8,
      Moder8,
      Odr8,
      Ospeedr8,
      Ot8,
      Pupdr8,
      gpioe_afrh_afrh8,
      gpioe_ascr_asc8,
      gpioe_brr_br8,
      gpioe_bsrr_br8,
      gpioe_bsrr_bs8,
      gpioe_crh_cnf8,
      gpioe_crh_mode8,
      gpioe_idr_idr8,
      gpioe_lckr_lck8,
      gpioe_moder_moder8,
      gpioe_odr_odr8,
      gpioe_ospeedr_ospeedr8,
      gpioe_otyper_ot8,
      gpioe_pupdr_pupdr8,
      afrh8,
      asc8,
      br8,
      bs8,
      cnf8,
      mode8,
      idr8,
      lck8,
      moder8,
      odr8,
      ospeedr8,
      ot8,
      pupdr8,
    ),
    (
      "GPIO port E pin 9.",
      GpioE9,
      gpio_e9,
      drv_gpio_e9,
      Afrh9,
      Asc9,
      Br9,
      Bs9,
      Cnf9,
      Mode9,
      Idr9,
      Lck9,
      Moder9,
      Odr9,
      Ospeedr9,
      Ot9,
      Pupdr9,
      gpioe_afrh_afrh9,
      gpioe_ascr_asc9,
      gpioe_brr_br9,
      gpioe_bsrr_br9,
      gpioe_bsrr_bs9,
      gpioe_crh_cnf9,
      gpioe_crh_mode9,
      gpioe_idr_idr9,
      gpioe_lckr_lck9,
      gpioe_moder_moder9,
      gpioe_odr_odr9,
      gpioe_ospeedr_ospeedr9,
      gpioe_otyper_ot9,
      gpioe_pupdr_pupdr9,
      afrh9,
      asc9,
      br9,
      bs9,
      cnf9,
      mode9,
      idr9,
      lck9,
      moder9,
      odr9,
      ospeedr9,
      ot9,
      pupdr9,
    ),
    (
      "GPIO port E pin 10.",
      GpioE10,
      gpio_e10,
      drv_gpio_e10,
      Afrh10,
      Asc10,
      Br10,
      Bs10,
      Cnf10,
      Mode10,
      Idr10,
      Lck10,
      Moder10,
      Odr10,
      Ospeedr10,
      Ot10,
      Pupdr10,
      gpioe_afrh_afrh10,
      gpioe_ascr_asc10,
      gpioe_brr_br10,
      gpioe_bsrr_br10,
      gpioe_bsrr_bs10,
      gpioe_crh_cnf10,
      gpioe_crh_mode10,
      gpioe_idr_idr10,
      gpioe_lckr_lck10,
      gpioe_moder_moder10,
      gpioe_odr_odr10,
      gpioe_ospeedr_ospeedr10,
      gpioe_otyper_ot10,
      gpioe_pupdr_pupdr10,
      afrh10,
      asc10,
      br10,
      bs10,
      cnf10,
      mode10,
      idr10,
      lck10,
      moder10,
      odr10,
      ospeedr10,
      ot10,
      pupdr10,
    ),
    (
      "GPIO port E pin 11.",
      GpioE11,
      gpio_e11,
      drv_gpio_e11,
      Afrh11,
      Asc11,
      Br11,
      Bs11,
      Cnf11,
      Mode11,
      Idr11,
      Lck11,
      Moder11,
      Odr11,
      Ospeedr11,
      Ot11,
      Pupdr11,
      gpioe_afrh_afrh11,
      gpioe_ascr_asc11,
      gpioe_brr_br11,
      gpioe_bsrr_br11,
      gpioe_bsrr_bs11,
      gpioe_crh_cnf11,
      gpioe_crh_mode11,
      gpioe_idr_idr11,
      gpioe_lckr_lck11,
      gpioe_moder_moder11,
      gpioe_odr_odr11,
      gpioe_ospeedr_ospeedr11,
      gpioe_otyper_ot11,
      gpioe_pupdr_pupdr11,
      afrh11,
      asc11,
      br11,
      bs11,
      cnf11,
      mode11,
      idr11,
      lck11,
      moder11,
      odr11,
      ospeedr11,
      ot11,
      pupdr11,
    ),
    (
      "GPIO port E pin 12.",
      GpioE12,
      gpio_e12,
      drv_gpio_e12,
      Afrh12,
      Asc12,
      Br12,
      Bs12,
      Cnf12,
      Mode12,
      Idr12,
      Lck12,
      Moder12,
      Odr12,
      Ospeedr12,
      Ot12,
      Pupdr12,
      gpioe_afrh_afrh12,
      gpioe_ascr_asc12,
      gpioe_brr_br12,
      gpioe_bsrr_br12,
      gpioe_bsrr_bs12,
      gpioe_crh_cnf12,
      gpioe_crh_mode12,
      gpioe_idr_idr12,
      gpioe_lckr_lck12,
      gpioe_moder_moder12,
      gpioe_odr_odr12,
      gpioe_ospeedr_ospeedr12,
      gpioe_otyper_ot12,
      gpioe_pupdr_pupdr12,
      afrh12,
      asc12,
      br12,
      bs12,
      cnf12,
      mode12,
      idr12,
      lck12,
      moder12,
      odr12,
      ospeedr12,
      ot12,
      pupdr12,
    ),
    (
      "GPIO port E pin 13.",
      GpioE13,
      gpio_e13,
      drv_gpio_e13,
      Afrh13,
      Asc13,
      Br13,
      Bs13,
      Cnf13,
      Mode13,
      Idr13,
      Lck13,
      Moder13,
      Odr13,
      Ospeedr13,
      Ot13,
      Pupdr13,
      gpioe_afrh_afrh13,
      gpioe_ascr_asc13,
      gpioe_brr_br13,
      gpioe_bsrr_br13,
      gpioe_bsrr_bs13,
      gpioe_crh_cnf13,
      gpioe_crh_mode13,
      gpioe_idr_idr13,
      gpioe_lckr_lck13,
      gpioe_moder_moder13,
      gpioe_odr_odr13,
      gpioe_ospeedr_ospeedr13,
      gpioe_otyper_ot13,
      gpioe_pupdr_pupdr13,
      afrh13,
      asc13,
      br13,
      bs13,
      cnf13,
      mode13,
      idr13,
      lck13,
      moder13,
      odr13,
      ospeedr13,
      ot13,
      pupdr13,
    ),
    (
      "GPIO port E pin 14.",
      GpioE14,
      gpio_e14,
      drv_gpio_e14,
      Afrh14,
      Asc14,
      Br14,
      Bs14,
      Cnf14,
      Mode14,
      Idr14,
      Lck14,
      Moder14,
      Odr14,
      Ospeedr14,
      Ot14,
      Pupdr14,
      gpioe_afrh_afrh14,
      gpioe_ascr_asc14,
      gpioe_brr_br14,
      gpioe_bsrr_br14,
      gpioe_bsrr_bs14,
      gpioe_crh_cnf14,
      gpioe_crh_mode14,
      gpioe_idr_idr14,
      gpioe_lckr_lck14,
      gpioe_moder_moder14,
      gpioe_odr_odr14,
      gpioe_ospeedr_ospeedr14,
      gpioe_otyper_ot14,
      gpioe_pupdr_pupdr14,
      afrh14,
      asc14,
      br14,
      bs14,
      cnf14,
      mode14,
      idr14,
      lck14,
      moder14,
      odr14,
      ospeedr14,
      ot14,
      pupdr14,
    ),
    (
      "GPIO port E pin 15.",
      GpioE15,
      gpio_e15,
      drv_gpio_e15,
      Afrh15,
      Asc15,
      Br15,
      Bs15,
      Cnf15,
      Mode15,
      Idr15,
      Lck15,
      Moder15,
      Odr15,
      Ospeedr15,
      Ot15,
      Pupdr15,
      gpioe_afrh_afrh15,
      gpioe_ascr_asc15,
      gpioe_brr_br15,
      gpioe_bsrr_br15,
      gpioe_bsrr_bs15,
      gpioe_crh_cnf15,
      gpioe_crh_mode15,
      gpioe_idr_idr15,
      gpioe_lckr_lck15,
      gpioe_moder_moder15,
      gpioe_odr_odr15,
      gpioe_ospeedr_ospeedr15,
      gpioe_otyper_ot15,
      gpioe_pupdr_pupdr15,
      afrh15,
      asc15,
      br15,
      bs15,
      cnf15,
      mode15,
      idr15,
      lck15,
      moder15,
      odr15,
      ospeedr15,
      ot15,
      pupdr15,
    ),
  ),
}

#[cfg(any(
  feature = "stm32f100",
  feature = "stm32f101",
  feature = "stm32f102",
  feature = "stm32f103",
  feature = "stm32f107",
  feature = "stm32l4x5",
  feature = "stm32l4x6",
  feature = "stm32l4r5",
  feature = "stm32l4r7",
  feature = "stm32l4r9",
  feature = "stm32l4s5",
  feature = "stm32l4s7",
  feature = "stm32l4s9"
))]
gpio_port! {
  "GPIO port F.",
  GpioF,
  drv_gpio_f,
  "GPIO port F pins.",
  GpioFPins,
  gpiof,
  gpiof_afrl,
  gpiof_afrh,
  gpiof_ascr,
  gpiof_brr,
  gpiof_bsrr,
  gpiof_crl,
  gpiof_crh,
  gpiof_idr,
  gpiof_lckr,
  gpiof_moder,
  gpiof_odr,
  gpiof_ospeedr,
  gpiof_otyper,
  gpiof_pupdr,
  #[not(__false__)],
  (
    afrl,
    crl,
    gpiof_afrl,
    gpiof_crl,
    (
      "GPIO port F pin 0.",
      GpioF0,
      gpio_f0,
      drv_gpio_f0,
      Afrl0,
      Asc0,
      Br0,
      Bs0,
      Cnf0,
      Mode0,
      Idr0,
      Lck0,
      Moder0,
      Odr0,
      Ospeedr0,
      Ot0,
      Pupdr0,
      gpiof_afrl_afrl0,
      gpiof_ascr_asc0,
      gpiof_brr_br0,
      gpiof_bsrr_br0,
      gpiof_bsrr_bs0,
      gpiof_crl_cnf0,
      gpiof_crl_mode0,
      gpiof_idr_idr0,
      gpiof_lckr_lck0,
      gpiof_moder_moder0,
      gpiof_odr_odr0,
      gpiof_ospeedr_ospeedr0,
      gpiof_otyper_ot0,
      gpiof_pupdr_pupdr0,
      afrl0,
      asc0,
      br0,
      bs0,
      cnf0,
      mode0,
      idr0,
      lck0,
      moder0,
      odr0,
      ospeedr0,
      ot0,
      pupdr0,
    ),
    (
      "GPIO port F pin 1.",
      GpioF1,
      gpio_f1,
      drv_gpio_f1,
      Afrl1,
      Asc1,
      Br1,
      Bs1,
      Cnf1,
      Mode1,
      Idr1,
      Lck1,
      Moder1,
      Odr1,
      Ospeedr1,
      Ot1,
      Pupdr1,
      gpiof_afrl_afrl1,
      gpiof_ascr_asc1,
      gpiof_brr_br1,
      gpiof_bsrr_br1,
      gpiof_bsrr_bs1,
      gpiof_crl_cnf1,
      gpiof_crl_mode1,
      gpiof_idr_idr1,
      gpiof_lckr_lck1,
      gpiof_moder_moder1,
      gpiof_odr_odr1,
      gpiof_ospeedr_ospeedr1,
      gpiof_otyper_ot1,
      gpiof_pupdr_pupdr1,
      afrl1,
      asc1,
      br1,
      bs1,
      cnf1,
      mode1,
      idr1,
      lck1,
      moder1,
      odr1,
      ospeedr1,
      ot1,
      pupdr1,
    ),
    (
      "GPIO port F pin 2.",
      GpioF2,
      gpio_f2,
      drv_gpio_f2,
      Afrl2,
      Asc2,
      Br2,
      Bs2,
      Cnf2,
      Mode2,
      Idr2,
      Lck2,
      Moder2,
      Odr2,
      Ospeedr2,
      Ot2,
      Pupdr2,
      gpiof_afrl_afrl2,
      gpiof_ascr_asc2,
      gpiof_brr_br2,
      gpiof_bsrr_br2,
      gpiof_bsrr_bs2,
      gpiof_crl_cnf2,
      gpiof_crl_mode2,
      gpiof_idr_idr2,
      gpiof_lckr_lck2,
      gpiof_moder_moder2,
      gpiof_odr_odr2,
      gpiof_ospeedr_ospeedr2,
      gpiof_otyper_ot2,
      gpiof_pupdr_pupdr2,
      afrl2,
      asc2,
      br2,
      bs2,
      cnf2,
      mode2,
      idr2,
      lck2,
      moder2,
      odr2,
      ospeedr2,
      ot2,
      pupdr2,
    ),
    (
      "GPIO port F pin 3.",
      GpioF3,
      gpio_f3,
      drv_gpio_f3,
      Afrl3,
      Asc3,
      Br3,
      Bs3,
      Cnf3,
      Mode3,
      Idr3,
      Lck3,
      Moder3,
      Odr3,
      Ospeedr3,
      Ot3,
      Pupdr3,
      gpiof_afrl_afrl3,
      gpiof_ascr_asc3,
      gpiof_brr_br3,
      gpiof_bsrr_br3,
      gpiof_bsrr_bs3,
      gpiof_crl_cnf3,
      gpiof_crl_mode3,
      gpiof_idr_idr3,
      gpiof_lckr_lck3,
      gpiof_moder_moder3,
      gpiof_odr_odr3,
      gpiof_ospeedr_ospeedr3,
      gpiof_otyper_ot3,
      gpiof_pupdr_pupdr3,
      afrl3,
      asc3,
      br3,
      bs3,
      cnf3,
      mode3,
      idr3,
      lck3,
      moder3,
      odr3,
      ospeedr3,
      ot3,
      pupdr3,
    ),
    (
      "GPIO port F pin 4.",
      GpioF4,
      gpio_f4,
      drv_gpio_f4,
      Afrl4,
      Asc4,
      Br4,
      Bs4,
      Cnf4,
      Mode4,
      Idr4,
      Lck4,
      Moder4,
      Odr4,
      Ospeedr4,
      Ot4,
      Pupdr4,
      gpiof_afrl_afrl4,
      gpiof_ascr_asc4,
      gpiof_brr_br4,
      gpiof_bsrr_br4,
      gpiof_bsrr_bs4,
      gpiof_crl_cnf4,
      gpiof_crl_mode4,
      gpiof_idr_idr4,
      gpiof_lckr_lck4,
      gpiof_moder_moder4,
      gpiof_odr_odr4,
      gpiof_ospeedr_ospeedr4,
      gpiof_otyper_ot4,
      gpiof_pupdr_pupdr4,
      afrl4,
      asc4,
      br4,
      bs4,
      cnf4,
      mode4,
      idr4,
      lck4,
      moder4,
      odr4,
      ospeedr4,
      ot4,
      pupdr4,
    ),
    (
      "GPIO port F pin 5.",
      GpioF5,
      gpio_f5,
      drv_gpio_f5,
      Afrl5,
      Asc5,
      Br5,
      Bs5,
      Cnf5,
      Mode5,
      Idr5,
      Lck5,
      Moder5,
      Odr5,
      Ospeedr5,
      Ot5,
      Pupdr5,
      gpiof_afrl_afrl5,
      gpiof_ascr_asc5,
      gpiof_brr_br5,
      gpiof_bsrr_br5,
      gpiof_bsrr_bs5,
      gpiof_crl_cnf5,
      gpiof_crl_mode5,
      gpiof_idr_idr5,
      gpiof_lckr_lck5,
      gpiof_moder_moder5,
      gpiof_odr_odr5,
      gpiof_ospeedr_ospeedr5,
      gpiof_otyper_ot5,
      gpiof_pupdr_pupdr5,
      afrl5,
      asc5,
      br5,
      bs5,
      cnf5,
      mode5,
      idr5,
      lck5,
      moder5,
      odr5,
      ospeedr5,
      ot5,
      pupdr5,
    ),
    (
      "GPIO port F pin 6.",
      GpioF6,
      gpio_f6,
      drv_gpio_f6,
      Afrl6,
      Asc6,
      Br6,
      Bs6,
      Cnf6,
      Mode6,
      Idr6,
      Lck6,
      Moder6,
      Odr6,
      Ospeedr6,
      Ot6,
      Pupdr6,
      gpiof_afrl_afrl6,
      gpiof_ascr_asc6,
      gpiof_brr_br6,
      gpiof_bsrr_br6,
      gpiof_bsrr_bs6,
      gpiof_crl_cnf6,
      gpiof_crl_mode6,
      gpiof_idr_idr6,
      gpiof_lckr_lck6,
      gpiof_moder_moder6,
      gpiof_odr_odr6,
      gpiof_ospeedr_ospeedr6,
      gpiof_otyper_ot6,
      gpiof_pupdr_pupdr6,
      afrl6,
      asc6,
      br6,
      bs6,
      cnf6,
      mode6,
      idr6,
      lck6,
      moder6,
      odr6,
      ospeedr6,
      ot6,
      pupdr6,
    ),
    (
      "GPIO port F pin 7.",
      GpioF7,
      gpio_f7,
      drv_gpio_f7,
      Afrl7,
      Asc7,
      Br7,
      Bs7,
      Cnf7,
      Mode7,
      Idr7,
      Lck7,
      Moder7,
      Odr7,
      Ospeedr7,
      Ot7,
      Pupdr7,
      gpiof_afrl_afrl7,
      gpiof_ascr_asc7,
      gpiof_brr_br7,
      gpiof_bsrr_br7,
      gpiof_bsrr_bs7,
      gpiof_crl_cnf7,
      gpiof_crl_mode7,
      gpiof_idr_idr7,
      gpiof_lckr_lck7,
      gpiof_moder_moder7,
      gpiof_odr_odr7,
      gpiof_ospeedr_ospeedr7,
      gpiof_otyper_ot7,
      gpiof_pupdr_pupdr7,
      afrl7,
      asc7,
      br7,
      bs7,
      cnf7,
      mode7,
      idr7,
      lck7,
      moder7,
      odr7,
      ospeedr7,
      ot7,
      pupdr7,
    ),
  ),
  (
    afrh,
    crh,
    gpiof_afrh,
    gpiof_crh,
    (
      "GPIO port F pin 8.",
      GpioF8,
      gpio_f8,
      drv_gpio_f8,
      Afrh8,
      Asc8,
      Br8,
      Bs8,
      Cnf8,
      Mode8,
      Idr8,
      Lck8,
      Moder8,
      Odr8,
      Ospeedr8,
      Ot8,
      Pupdr8,
      gpiof_afrh_afrh8,
      gpiof_ascr_asc8,
      gpiof_brr_br8,
      gpiof_bsrr_br8,
      gpiof_bsrr_bs8,
      gpiof_crh_cnf8,
      gpiof_crh_mode8,
      gpiof_idr_idr8,
      gpiof_lckr_lck8,
      gpiof_moder_moder8,
      gpiof_odr_odr8,
      gpiof_ospeedr_ospeedr8,
      gpiof_otyper_ot8,
      gpiof_pupdr_pupdr8,
      afrh8,
      asc8,
      br8,
      bs8,
      cnf8,
      mode8,
      idr8,
      lck8,
      moder8,
      odr8,
      ospeedr8,
      ot8,
      pupdr8,
    ),
    (
      "GPIO port F pin 9.",
      GpioF9,
      gpio_f9,
      drv_gpio_f9,
      Afrh9,
      Asc9,
      Br9,
      Bs9,
      Cnf9,
      Mode9,
      Idr9,
      Lck9,
      Moder9,
      Odr9,
      Ospeedr9,
      Ot9,
      Pupdr9,
      gpiof_afrh_afrh9,
      gpiof_ascr_asc9,
      gpiof_brr_br9,
      gpiof_bsrr_br9,
      gpiof_bsrr_bs9,
      gpiof_crh_cnf9,
      gpiof_crh_mode9,
      gpiof_idr_idr9,
      gpiof_lckr_lck9,
      gpiof_moder_moder9,
      gpiof_odr_odr9,
      gpiof_ospeedr_ospeedr9,
      gpiof_otyper_ot9,
      gpiof_pupdr_pupdr9,
      afrh9,
      asc9,
      br9,
      bs9,
      cnf9,
      mode9,
      idr9,
      lck9,
      moder9,
      odr9,
      ospeedr9,
      ot9,
      pupdr9,
    ),
    (
      "GPIO port F pin 10.",
      GpioF10,
      gpio_f10,
      drv_gpio_f10,
      Afrh10,
      Asc10,
      Br10,
      Bs10,
      Cnf10,
      Mode10,
      Idr10,
      Lck10,
      Moder10,
      Odr10,
      Ospeedr10,
      Ot10,
      Pupdr10,
      gpiof_afrh_afrh10,
      gpiof_ascr_asc10,
      gpiof_brr_br10,
      gpiof_bsrr_br10,
      gpiof_bsrr_bs10,
      gpiof_crh_cnf10,
      gpiof_crh_mode10,
      gpiof_idr_idr10,
      gpiof_lckr_lck10,
      gpiof_moder_moder10,
      gpiof_odr_odr10,
      gpiof_ospeedr_ospeedr10,
      gpiof_otyper_ot10,
      gpiof_pupdr_pupdr10,
      afrh10,
      asc10,
      br10,
      bs10,
      cnf10,
      mode10,
      idr10,
      lck10,
      moder10,
      odr10,
      ospeedr10,
      ot10,
      pupdr10,
    ),
    (
      "GPIO port F pin 11.",
      GpioF11,
      gpio_f11,
      drv_gpio_f11,
      Afrh11,
      Asc11,
      Br11,
      Bs11,
      Cnf11,
      Mode11,
      Idr11,
      Lck11,
      Moder11,
      Odr11,
      Ospeedr11,
      Ot11,
      Pupdr11,
      gpiof_afrh_afrh11,
      gpiof_ascr_asc11,
      gpiof_brr_br11,
      gpiof_bsrr_br11,
      gpiof_bsrr_bs11,
      gpiof_crh_cnf11,
      gpiof_crh_mode11,
      gpiof_idr_idr11,
      gpiof_lckr_lck11,
      gpiof_moder_moder11,
      gpiof_odr_odr11,
      gpiof_ospeedr_ospeedr11,
      gpiof_otyper_ot11,
      gpiof_pupdr_pupdr11,
      afrh11,
      asc11,
      br11,
      bs11,
      cnf11,
      mode11,
      idr11,
      lck11,
      moder11,
      odr11,
      ospeedr11,
      ot11,
      pupdr11,
    ),
    (
      "GPIO port F pin 12.",
      GpioF12,
      gpio_f12,
      drv_gpio_f12,
      Afrh12,
      Asc12,
      Br12,
      Bs12,
      Cnf12,
      Mode12,
      Idr12,
      Lck12,
      Moder12,
      Odr12,
      Ospeedr12,
      Ot12,
      Pupdr12,
      gpiof_afrh_afrh12,
      gpiof_ascr_asc12,
      gpiof_brr_br12,
      gpiof_bsrr_br12,
      gpiof_bsrr_bs12,
      gpiof_crh_cnf12,
      gpiof_crh_mode12,
      gpiof_idr_idr12,
      gpiof_lckr_lck12,
      gpiof_moder_moder12,
      gpiof_odr_odr12,
      gpiof_ospeedr_ospeedr12,
      gpiof_otyper_ot12,
      gpiof_pupdr_pupdr12,
      afrh12,
      asc12,
      br12,
      bs12,
      cnf12,
      mode12,
      idr12,
      lck12,
      moder12,
      odr12,
      ospeedr12,
      ot12,
      pupdr12,
    ),
    (
      "GPIO port F pin 13.",
      GpioF13,
      gpio_f13,
      drv_gpio_f13,
      Afrh13,
      Asc13,
      Br13,
      Bs13,
      Cnf13,
      Mode13,
      Idr13,
      Lck13,
      Moder13,
      Odr13,
      Ospeedr13,
      Ot13,
      Pupdr13,
      gpiof_afrh_afrh13,
      gpiof_ascr_asc13,
      gpiof_brr_br13,
      gpiof_bsrr_br13,
      gpiof_bsrr_bs13,
      gpiof_crh_cnf13,
      gpiof_crh_mode13,
      gpiof_idr_idr13,
      gpiof_lckr_lck13,
      gpiof_moder_moder13,
      gpiof_odr_odr13,
      gpiof_ospeedr_ospeedr13,
      gpiof_otyper_ot13,
      gpiof_pupdr_pupdr13,
      afrh13,
      asc13,
      br13,
      bs13,
      cnf13,
      mode13,
      idr13,
      lck13,
      moder13,
      odr13,
      ospeedr13,
      ot13,
      pupdr13,
    ),
    (
      "GPIO port F pin 14.",
      GpioF14,
      gpio_f14,
      drv_gpio_f14,
      Afrh14,
      Asc14,
      Br14,
      Bs14,
      Cnf14,
      Mode14,
      Idr14,
      Lck14,
      Moder14,
      Odr14,
      Ospeedr14,
      Ot14,
      Pupdr14,
      gpiof_afrh_afrh14,
      gpiof_ascr_asc14,
      gpiof_brr_br14,
      gpiof_bsrr_br14,
      gpiof_bsrr_bs14,
      gpiof_crh_cnf14,
      gpiof_crh_mode14,
      gpiof_idr_idr14,
      gpiof_lckr_lck14,
      gpiof_moder_moder14,
      gpiof_odr_odr14,
      gpiof_ospeedr_ospeedr14,
      gpiof_otyper_ot14,
      gpiof_pupdr_pupdr14,
      afrh14,
      asc14,
      br14,
      bs14,
      cnf14,
      mode14,
      idr14,
      lck14,
      moder14,
      odr14,
      ospeedr14,
      ot14,
      pupdr14,
    ),
    (
      "GPIO port F pin 15.",
      GpioF15,
      gpio_f15,
      drv_gpio_f15,
      Afrh15,
      Asc15,
      Br15,
      Bs15,
      Cnf15,
      Mode15,
      Idr15,
      Lck15,
      Moder15,
      Odr15,
      Ospeedr15,
      Ot15,
      Pupdr15,
      gpiof_afrh_afrh15,
      gpiof_ascr_asc15,
      gpiof_brr_br15,
      gpiof_bsrr_br15,
      gpiof_bsrr_bs15,
      gpiof_crh_cnf15,
      gpiof_crh_mode15,
      gpiof_idr_idr15,
      gpiof_lckr_lck15,
      gpiof_moder_moder15,
      gpiof_odr_odr15,
      gpiof_ospeedr_ospeedr15,
      gpiof_otyper_ot15,
      gpiof_pupdr_pupdr15,
      afrh15,
      asc15,
      br15,
      bs15,
      cnf15,
      mode15,
      idr15,
      lck15,
      moder15,
      odr15,
      ospeedr15,
      ot15,
      pupdr15,
    ),
  ),
}

#[cfg(any(
  feature = "stm32f100",
  feature = "stm32f101",
  feature = "stm32f102",
  feature = "stm32f103",
  feature = "stm32f107",
  feature = "stm32l4x5",
  feature = "stm32l4x6",
  feature = "stm32l4r5",
  feature = "stm32l4r7",
  feature = "stm32l4r9",
  feature = "stm32l4s5",
  feature = "stm32l4s7",
  feature = "stm32l4s9"
))]
gpio_port! {
  "GPIO port G.",
  GpioG,
  drv_gpio_g,
  "GPIO port G pins.",
  GpioGPins,
  gpiog,
  gpiog_afrl,
  gpiog_afrh,
  gpiog_ascr,
  gpiog_brr,
  gpiog_bsrr,
  gpiog_crl,
  gpiog_crh,
  gpiog_idr,
  gpiog_lckr,
  gpiog_moder,
  gpiog_odr,
  gpiog_ospeedr,
  gpiog_otyper,
  gpiog_pupdr,
  #[not(__false__)],
  (
    afrl,
    crl,
    gpiog_afrl,
    gpiog_crl,
    (
      "GPIO port G pin 0.",
      GpioG0,
      gpio_g0,
      drv_gpio_g0,
      Afrl0,
      Asc0,
      Br0,
      Bs0,
      Cnf0,
      Mode0,
      Idr0,
      Lck0,
      Moder0,
      Odr0,
      Ospeedr0,
      Ot0,
      Pupdr0,
      gpiog_afrl_afrl0,
      gpiog_ascr_asc0,
      gpiog_brr_br0,
      gpiog_bsrr_br0,
      gpiog_bsrr_bs0,
      gpiog_crl_cnf0,
      gpiog_crl_mode0,
      gpiog_idr_idr0,
      gpiog_lckr_lck0,
      gpiog_moder_moder0,
      gpiog_odr_odr0,
      gpiog_ospeedr_ospeedr0,
      gpiog_otyper_ot0,
      gpiog_pupdr_pupdr0,
      afrl0,
      asc0,
      br0,
      bs0,
      cnf0,
      mode0,
      idr0,
      lck0,
      moder0,
      odr0,
      ospeedr0,
      ot0,
      pupdr0,
    ),
    (
      "GPIO port G pin 1.",
      GpioG1,
      gpio_g1,
      drv_gpio_g1,
      Afrl1,
      Asc1,
      Br1,
      Bs1,
      Cnf1,
      Mode1,
      Idr1,
      Lck1,
      Moder1,
      Odr1,
      Ospeedr1,
      Ot1,
      Pupdr1,
      gpiog_afrl_afrl1,
      gpiog_ascr_asc1,
      gpiog_brr_br1,
      gpiog_bsrr_br1,
      gpiog_bsrr_bs1,
      gpiog_crl_cnf1,
      gpiog_crl_mode1,
      gpiog_idr_idr1,
      gpiog_lckr_lck1,
      gpiog_moder_moder1,
      gpiog_odr_odr1,
      gpiog_ospeedr_ospeedr1,
      gpiog_otyper_ot1,
      gpiog_pupdr_pupdr1,
      afrl1,
      asc1,
      br1,
      bs1,
      cnf1,
      mode1,
      idr1,
      lck1,
      moder1,
      odr1,
      ospeedr1,
      ot1,
      pupdr1,
    ),
    (
      "GPIO port G pin 2.",
      GpioG2,
      gpio_g2,
      drv_gpio_g2,
      Afrl2,
      Asc2,
      Br2,
      Bs2,
      Cnf2,
      Mode2,
      Idr2,
      Lck2,
      Moder2,
      Odr2,
      Ospeedr2,
      Ot2,
      Pupdr2,
      gpiog_afrl_afrl2,
      gpiog_ascr_asc2,
      gpiog_brr_br2,
      gpiog_bsrr_br2,
      gpiog_bsrr_bs2,
      gpiog_crl_cnf2,
      gpiog_crl_mode2,
      gpiog_idr_idr2,
      gpiog_lckr_lck2,
      gpiog_moder_moder2,
      gpiog_odr_odr2,
      gpiog_ospeedr_ospeedr2,
      gpiog_otyper_ot2,
      gpiog_pupdr_pupdr2,
      afrl2,
      asc2,
      br2,
      bs2,
      cnf2,
      mode2,
      idr2,
      lck2,
      moder2,
      odr2,
      ospeedr2,
      ot2,
      pupdr2,
    ),
    (
      "GPIO port G pin 3.",
      GpioG3,
      gpio_g3,
      drv_gpio_g3,
      Afrl3,
      Asc3,
      Br3,
      Bs3,
      Cnf3,
      Mode3,
      Idr3,
      Lck3,
      Moder3,
      Odr3,
      Ospeedr3,
      Ot3,
      Pupdr3,
      gpiog_afrl_afrl3,
      gpiog_ascr_asc3,
      gpiog_brr_br3,
      gpiog_bsrr_br3,
      gpiog_bsrr_bs3,
      gpiog_crl_cnf3,
      gpiog_crl_mode3,
      gpiog_idr_idr3,
      gpiog_lckr_lck3,
      gpiog_moder_moder3,
      gpiog_odr_odr3,
      gpiog_ospeedr_ospeedr3,
      gpiog_otyper_ot3,
      gpiog_pupdr_pupdr3,
      afrl3,
      asc3,
      br3,
      bs3,
      cnf3,
      mode3,
      idr3,
      lck3,
      moder3,
      odr3,
      ospeedr3,
      ot3,
      pupdr3,
    ),
    (
      "GPIO port G pin 4.",
      GpioG4,
      gpio_g4,
      drv_gpio_g4,
      Afrl4,
      Asc4,
      Br4,
      Bs4,
      Cnf4,
      Mode4,
      Idr4,
      Lck4,
      Moder4,
      Odr4,
      Ospeedr4,
      Ot4,
      Pupdr4,
      gpiog_afrl_afrl4,
      gpiog_ascr_asc4,
      gpiog_brr_br4,
      gpiog_bsrr_br4,
      gpiog_bsrr_bs4,
      gpiog_crl_cnf4,
      gpiog_crl_mode4,
      gpiog_idr_idr4,
      gpiog_lckr_lck4,
      gpiog_moder_moder4,
      gpiog_odr_odr4,
      gpiog_ospeedr_ospeedr4,
      gpiog_otyper_ot4,
      gpiog_pupdr_pupdr4,
      afrl4,
      asc4,
      br4,
      bs4,
      cnf4,
      mode4,
      idr4,
      lck4,
      moder4,
      odr4,
      ospeedr4,
      ot4,
      pupdr4,
    ),
    (
      "GPIO port G pin 5.",
      GpioG5,
      gpio_g5,
      drv_gpio_g5,
      Afrl5,
      Asc5,
      Br5,
      Bs5,
      Cnf5,
      Mode5,
      Idr5,
      Lck5,
      Moder5,
      Odr5,
      Ospeedr5,
      Ot5,
      Pupdr5,
      gpiog_afrl_afrl5,
      gpiog_ascr_asc5,
      gpiog_brr_br5,
      gpiog_bsrr_br5,
      gpiog_bsrr_bs5,
      gpiog_crl_cnf5,
      gpiog_crl_mode5,
      gpiog_idr_idr5,
      gpiog_lckr_lck5,
      gpiog_moder_moder5,
      gpiog_odr_odr5,
      gpiog_ospeedr_ospeedr5,
      gpiog_otyper_ot5,
      gpiog_pupdr_pupdr5,
      afrl5,
      asc5,
      br5,
      bs5,
      cnf5,
      mode5,
      idr5,
      lck5,
      moder5,
      odr5,
      ospeedr5,
      ot5,
      pupdr5,
    ),
    (
      "GPIO port G pin 6.",
      GpioG6,
      gpio_g6,
      drv_gpio_g6,
      Afrl6,
      Asc6,
      Br6,
      Bs6,
      Cnf6,
      Mode6,
      Idr6,
      Lck6,
      Moder6,
      Odr6,
      Ospeedr6,
      Ot6,
      Pupdr6,
      gpiog_afrl_afrl6,
      gpiog_ascr_asc6,
      gpiog_brr_br6,
      gpiog_bsrr_br6,
      gpiog_bsrr_bs6,
      gpiog_crl_cnf6,
      gpiog_crl_mode6,
      gpiog_idr_idr6,
      gpiog_lckr_lck6,
      gpiog_moder_moder6,
      gpiog_odr_odr6,
      gpiog_ospeedr_ospeedr6,
      gpiog_otyper_ot6,
      gpiog_pupdr_pupdr6,
      afrl6,
      asc6,
      br6,
      bs6,
      cnf6,
      mode6,
      idr6,
      lck6,
      moder6,
      odr6,
      ospeedr6,
      ot6,
      pupdr6,
    ),
    (
      "GPIO port G pin 7.",
      GpioG7,
      gpio_g7,
      drv_gpio_g7,
      Afrl7,
      Asc7,
      Br7,
      Bs7,
      Cnf7,
      Mode7,
      Idr7,
      Lck7,
      Moder7,
      Odr7,
      Ospeedr7,
      Ot7,
      Pupdr7,
      gpiog_afrl_afrl7,
      gpiog_ascr_asc7,
      gpiog_brr_br7,
      gpiog_bsrr_br7,
      gpiog_bsrr_bs7,
      gpiog_crl_cnf7,
      gpiog_crl_mode7,
      gpiog_idr_idr7,
      gpiog_lckr_lck7,
      gpiog_moder_moder7,
      gpiog_odr_odr7,
      gpiog_ospeedr_ospeedr7,
      gpiog_otyper_ot7,
      gpiog_pupdr_pupdr7,
      afrl7,
      asc7,
      br7,
      bs7,
      cnf7,
      mode7,
      idr7,
      lck7,
      moder7,
      odr7,
      ospeedr7,
      ot7,
      pupdr7,
    ),
  ),
  (
    afrh,
    crh,
    gpiog_afrh,
    gpiog_crh,
    (
      "GPIO port G pin 8.",
      GpioG8,
      gpio_g8,
      drv_gpio_g8,
      Afrh8,
      Asc8,
      Br8,
      Bs8,
      Cnf8,
      Mode8,
      Idr8,
      Lck8,
      Moder8,
      Odr8,
      Ospeedr8,
      Ot8,
      Pupdr8,
      gpiog_afrh_afrh8,
      gpiog_ascr_asc8,
      gpiog_brr_br8,
      gpiog_bsrr_br8,
      gpiog_bsrr_bs8,
      gpiog_crh_cnf8,
      gpiog_crh_mode8,
      gpiog_idr_idr8,
      gpiog_lckr_lck8,
      gpiog_moder_moder8,
      gpiog_odr_odr8,
      gpiog_ospeedr_ospeedr8,
      gpiog_otyper_ot8,
      gpiog_pupdr_pupdr8,
      afrh8,
      asc8,
      br8,
      bs8,
      cnf8,
      mode8,
      idr8,
      lck8,
      moder8,
      odr8,
      ospeedr8,
      ot8,
      pupdr8,
    ),
    (
      "GPIO port G pin 9.",
      GpioG9,
      gpio_g9,
      drv_gpio_g9,
      Afrh9,
      Asc9,
      Br9,
      Bs9,
      Cnf9,
      Mode9,
      Idr9,
      Lck9,
      Moder9,
      Odr9,
      Ospeedr9,
      Ot9,
      Pupdr9,
      gpiog_afrh_afrh9,
      gpiog_ascr_asc9,
      gpiog_brr_br9,
      gpiog_bsrr_br9,
      gpiog_bsrr_bs9,
      gpiog_crh_cnf9,
      gpiog_crh_mode9,
      gpiog_idr_idr9,
      gpiog_lckr_lck9,
      gpiog_moder_moder9,
      gpiog_odr_odr9,
      gpiog_ospeedr_ospeedr9,
      gpiog_otyper_ot9,
      gpiog_pupdr_pupdr9,
      afrh9,
      asc9,
      br9,
      bs9,
      cnf9,
      mode9,
      idr9,
      lck9,
      moder9,
      odr9,
      ospeedr9,
      ot9,
      pupdr9,
    ),
    (
      "GPIO port G pin 10.",
      GpioG10,
      gpio_g10,
      drv_gpio_g10,
      Afrh10,
      Asc10,
      Br10,
      Bs10,
      Cnf10,
      Mode10,
      Idr10,
      Lck10,
      Moder10,
      Odr10,
      Ospeedr10,
      Ot10,
      Pupdr10,
      gpiog_afrh_afrh10,
      gpiog_ascr_asc10,
      gpiog_brr_br10,
      gpiog_bsrr_br10,
      gpiog_bsrr_bs10,
      gpiog_crh_cnf10,
      gpiog_crh_mode10,
      gpiog_idr_idr10,
      gpiog_lckr_lck10,
      gpiog_moder_moder10,
      gpiog_odr_odr10,
      gpiog_ospeedr_ospeedr10,
      gpiog_otyper_ot10,
      gpiog_pupdr_pupdr10,
      afrh10,
      asc10,
      br10,
      bs10,
      cnf10,
      mode10,
      idr10,
      lck10,
      moder10,
      odr10,
      ospeedr10,
      ot10,
      pupdr10,
    ),
    (
      "GPIO port G pin 11.",
      GpioG11,
      gpio_g11,
      drv_gpio_g11,
      Afrh11,
      Asc11,
      Br11,
      Bs11,
      Cnf11,
      Mode11,
      Idr11,
      Lck11,
      Moder11,
      Odr11,
      Ospeedr11,
      Ot11,
      Pupdr11,
      gpiog_afrh_afrh11,
      gpiog_ascr_asc11,
      gpiog_brr_br11,
      gpiog_bsrr_br11,
      gpiog_bsrr_bs11,
      gpiog_crh_cnf11,
      gpiog_crh_mode11,
      gpiog_idr_idr11,
      gpiog_lckr_lck11,
      gpiog_moder_moder11,
      gpiog_odr_odr11,
      gpiog_ospeedr_ospeedr11,
      gpiog_otyper_ot11,
      gpiog_pupdr_pupdr11,
      afrh11,
      asc11,
      br11,
      bs11,
      cnf11,
      mode11,
      idr11,
      lck11,
      moder11,
      odr11,
      ospeedr11,
      ot11,
      pupdr11,
    ),
    (
      "GPIO port G pin 12.",
      GpioG12,
      gpio_g12,
      drv_gpio_g12,
      Afrh12,
      Asc12,
      Br12,
      Bs12,
      Cnf12,
      Mode12,
      Idr12,
      Lck12,
      Moder12,
      Odr12,
      Ospeedr12,
      Ot12,
      Pupdr12,
      gpiog_afrh_afrh12,
      gpiog_ascr_asc12,
      gpiog_brr_br12,
      gpiog_bsrr_br12,
      gpiog_bsrr_bs12,
      gpiog_crh_cnf12,
      gpiog_crh_mode12,
      gpiog_idr_idr12,
      gpiog_lckr_lck12,
      gpiog_moder_moder12,
      gpiog_odr_odr12,
      gpiog_ospeedr_ospeedr12,
      gpiog_otyper_ot12,
      gpiog_pupdr_pupdr12,
      afrh12,
      asc12,
      br12,
      bs12,
      cnf12,
      mode12,
      idr12,
      lck12,
      moder12,
      odr12,
      ospeedr12,
      ot12,
      pupdr12,
    ),
    (
      "GPIO port G pin 13.",
      GpioG13,
      gpio_g13,
      drv_gpio_g13,
      Afrh13,
      Asc13,
      Br13,
      Bs13,
      Cnf13,
      Mode13,
      Idr13,
      Lck13,
      Moder13,
      Odr13,
      Ospeedr13,
      Ot13,
      Pupdr13,
      gpiog_afrh_afrh13,
      gpiog_ascr_asc13,
      gpiog_brr_br13,
      gpiog_bsrr_br13,
      gpiog_bsrr_bs13,
      gpiog_crh_cnf13,
      gpiog_crh_mode13,
      gpiog_idr_idr13,
      gpiog_lckr_lck13,
      gpiog_moder_moder13,
      gpiog_odr_odr13,
      gpiog_ospeedr_ospeedr13,
      gpiog_otyper_ot13,
      gpiog_pupdr_pupdr13,
      afrh13,
      asc13,
      br13,
      bs13,
      cnf13,
      mode13,
      idr13,
      lck13,
      moder13,
      odr13,
      ospeedr13,
      ot13,
      pupdr13,
    ),
    (
      "GPIO port G pin 14.",
      GpioG14,
      gpio_g14,
      drv_gpio_g14,
      Afrh14,
      Asc14,
      Br14,
      Bs14,
      Cnf14,
      Mode14,
      Idr14,
      Lck14,
      Moder14,
      Odr14,
      Ospeedr14,
      Ot14,
      Pupdr14,
      gpiog_afrh_afrh14,
      gpiog_ascr_asc14,
      gpiog_brr_br14,
      gpiog_bsrr_br14,
      gpiog_bsrr_bs14,
      gpiog_crh_cnf14,
      gpiog_crh_mode14,
      gpiog_idr_idr14,
      gpiog_lckr_lck14,
      gpiog_moder_moder14,
      gpiog_odr_odr14,
      gpiog_ospeedr_ospeedr14,
      gpiog_otyper_ot14,
      gpiog_pupdr_pupdr14,
      afrh14,
      asc14,
      br14,
      bs14,
      cnf14,
      mode14,
      idr14,
      lck14,
      moder14,
      odr14,
      ospeedr14,
      ot14,
      pupdr14,
    ),
    (
      "GPIO port G pin 15.",
      GpioG15,
      gpio_g15,
      drv_gpio_g15,
      Afrh15,
      Asc15,
      Br15,
      Bs15,
      Cnf15,
      Mode15,
      Idr15,
      Lck15,
      Moder15,
      Odr15,
      Ospeedr15,
      Ot15,
      Pupdr15,
      gpiog_afrh_afrh15,
      gpiog_ascr_asc15,
      gpiog_brr_br15,
      gpiog_bsrr_br15,
      gpiog_bsrr_bs15,
      gpiog_crh_cnf15,
      gpiog_crh_mode15,
      gpiog_idr_idr15,
      gpiog_lckr_lck15,
      gpiog_moder_moder15,
      gpiog_odr_odr15,
      gpiog_ospeedr_ospeedr15,
      gpiog_otyper_ot15,
      gpiog_pupdr_pupdr15,
      afrh15,
      asc15,
      br15,
      bs15,
      cnf15,
      mode15,
      idr15,
      lck15,
      moder15,
      odr15,
      ospeedr15,
      ot15,
      pupdr15,
    ),
  ),
}

#[cfg(any(
  feature = "stm32l4x1",
  feature = "stm32l4x2",
  feature = "stm32l4x3",
  feature = "stm32l4x5",
  feature = "stm32l4x6",
  feature = "stm32l4r5",
  feature = "stm32l4r7",
  feature = "stm32l4r9",
  feature = "stm32l4s5",
  feature = "stm32l4s7",
  feature = "stm32l4s9"
))]
gpio_port! {
  "GPIO port H.",
  GpioH,
  drv_gpio_h,
  "GPIO port H pins.",
  GpioHPins,
  gpioh,
  gpioh_afrl,
  gpioh_afrh,
  gpioh_ascr,
  gpioh_brr,
  gpioh_bsrr,
  gpioh_crl,
  gpioh_crh,
  gpioh_idr,
  gpioh_lckr,
  gpioh_moder,
  gpioh_odr,
  gpioh_ospeedr,
  gpioh_otyper,
  gpioh_pupdr,
  #[not(__false__)],
  (
    afrl,
    crl,
    gpioh_afrl,
    gpioh_crl,
    (
      "GPIO port H pin 0.",
      GpioH0,
      gpio_h0,
      drv_gpio_h0,
      Afrl0,
      Asc0,
      Br0,
      Bs0,
      Cnf0,
      Mode0,
      Idr0,
      Lck0,
      Moder0,
      Odr0,
      Ospeedr0,
      Ot0,
      Pupdr0,
      gpioh_afrl_afrl0,
      gpioh_ascr_asc0,
      gpioh_brr_br0,
      gpioh_bsrr_br0,
      gpioh_bsrr_bs0,
      gpioh_crl_cnf0,
      gpioh_crl_mode0,
      gpioh_idr_idr0,
      gpioh_lckr_lck0,
      gpioh_moder_moder0,
      gpioh_odr_odr0,
      gpioh_ospeedr_ospeedr0,
      gpioh_otyper_ot0,
      gpioh_pupdr_pupdr0,
      afrl0,
      asc0,
      br0,
      bs0,
      cnf0,
      mode0,
      idr0,
      lck0,
      moder0,
      odr0,
      ospeedr0,
      ot0,
      pupdr0,
    ),
    (
      "GPIO port H pin 1.",
      GpioH1,
      gpio_h1,
      drv_gpio_h1,
      Afrl1,
      Asc1,
      Br1,
      Bs1,
      Cnf1,
      Mode1,
      Idr1,
      Lck1,
      Moder1,
      Odr1,
      Ospeedr1,
      Ot1,
      Pupdr1,
      gpioh_afrl_afrl1,
      gpioh_ascr_asc1,
      gpioh_brr_br1,
      gpioh_bsrr_br1,
      gpioh_bsrr_bs1,
      gpioh_crl_cnf1,
      gpioh_crl_mode1,
      gpioh_idr_idr1,
      gpioh_lckr_lck1,
      gpioh_moder_moder1,
      gpioh_odr_odr1,
      gpioh_ospeedr_ospeedr1,
      gpioh_otyper_ot1,
      gpioh_pupdr_pupdr1,
      afrl1,
      asc1,
      br1,
      bs1,
      cnf1,
      mode1,
      idr1,
      lck1,
      moder1,
      odr1,
      ospeedr1,
      ot1,
      pupdr1,
    ),
    (
      "GPIO port H pin 2.",
      GpioH2,
      gpio_h2,
      drv_gpio_h2,
      Afrl2,
      Asc2,
      Br2,
      Bs2,
      Cnf2,
      Mode2,
      Idr2,
      Lck2,
      Moder2,
      Odr2,
      Ospeedr2,
      Ot2,
      Pupdr2,
      gpioh_afrl_afrl2,
      gpioh_ascr_asc2,
      gpioh_brr_br2,
      gpioh_bsrr_br2,
      gpioh_bsrr_bs2,
      gpioh_crl_cnf2,
      gpioh_crl_mode2,
      gpioh_idr_idr2,
      gpioh_lckr_lck2,
      gpioh_moder_moder2,
      gpioh_odr_odr2,
      gpioh_ospeedr_ospeedr2,
      gpioh_otyper_ot2,
      gpioh_pupdr_pupdr2,
      afrl2,
      asc2,
      br2,
      bs2,
      cnf2,
      mode2,
      idr2,
      lck2,
      moder2,
      odr2,
      ospeedr2,
      ot2,
      pupdr2,
    ),
    (
      "GPIO port H pin 3.",
      GpioH3,
      gpio_h3,
      drv_gpio_h3,
      Afrl3,
      Asc3,
      Br3,
      Bs3,
      Cnf3,
      Mode3,
      Idr3,
      Lck3,
      Moder3,
      Odr3,
      Ospeedr3,
      Ot3,
      Pupdr3,
      gpioh_afrl_afrl3,
      gpioh_ascr_asc3,
      gpioh_brr_br3,
      gpioh_bsrr_br3,
      gpioh_bsrr_bs3,
      gpioh_crl_cnf3,
      gpioh_crl_mode3,
      gpioh_idr_idr3,
      gpioh_lckr_lck3,
      gpioh_moder_moder3,
      gpioh_odr_odr3,
      gpioh_ospeedr_ospeedr3,
      gpioh_otyper_ot3,
      gpioh_pupdr_pupdr3,
      afrl3,
      asc3,
      br3,
      bs3,
      cnf3,
      mode3,
      idr3,
      lck3,
      moder3,
      odr3,
      ospeedr3,
      ot3,
      pupdr3,
    ),
    (
      "GPIO port H pin 4.",
      GpioH4,
      gpio_h4,
      drv_gpio_h4,
      Afrl4,
      Asc4,
      Br4,
      Bs4,
      Cnf4,
      Mode4,
      Idr4,
      Lck4,
      Moder4,
      Odr4,
      Ospeedr4,
      Ot4,
      Pupdr4,
      gpioh_afrl_afrl4,
      gpioh_ascr_asc4,
      gpioh_brr_br4,
      gpioh_bsrr_br4,
      gpioh_bsrr_bs4,
      gpioh_crl_cnf4,
      gpioh_crl_mode4,
      gpioh_idr_idr4,
      gpioh_lckr_lck4,
      gpioh_moder_moder4,
      gpioh_odr_odr4,
      gpioh_ospeedr_ospeedr4,
      gpioh_otyper_ot4,
      gpioh_pupdr_pupdr4,
      afrl4,
      asc4,
      br4,
      bs4,
      cnf4,
      mode4,
      idr4,
      lck4,
      moder4,
      odr4,
      ospeedr4,
      ot4,
      pupdr4,
    ),
    (
      "GPIO port H pin 5.",
      GpioH5,
      gpio_h5,
      drv_gpio_h5,
      Afrl5,
      Asc5,
      Br5,
      Bs5,
      Cnf5,
      Mode5,
      Idr5,
      Lck5,
      Moder5,
      Odr5,
      Ospeedr5,
      Ot5,
      Pupdr5,
      gpioh_afrl_afrl5,
      gpioh_ascr_asc5,
      gpioh_brr_br5,
      gpioh_bsrr_br5,
      gpioh_bsrr_bs5,
      gpioh_crl_cnf5,
      gpioh_crl_mode5,
      gpioh_idr_idr5,
      gpioh_lckr_lck5,
      gpioh_moder_moder5,
      gpioh_odr_odr5,
      gpioh_ospeedr_ospeedr5,
      gpioh_otyper_ot5,
      gpioh_pupdr_pupdr5,
      afrl5,
      asc5,
      br5,
      bs5,
      cnf5,
      mode5,
      idr5,
      lck5,
      moder5,
      odr5,
      ospeedr5,
      ot5,
      pupdr5,
    ),
    (
      "GPIO port H pin 6.",
      GpioH6,
      gpio_h6,
      drv_gpio_h6,
      Afrl6,
      Asc6,
      Br6,
      Bs6,
      Cnf6,
      Mode6,
      Idr6,
      Lck6,
      Moder6,
      Odr6,
      Ospeedr6,
      Ot6,
      Pupdr6,
      gpioh_afrl_afrl6,
      gpioh_ascr_asc6,
      gpioh_brr_br6,
      gpioh_bsrr_br6,
      gpioh_bsrr_bs6,
      gpioh_crl_cnf6,
      gpioh_crl_mode6,
      gpioh_idr_idr6,
      gpioh_lckr_lck6,
      gpioh_moder_moder6,
      gpioh_odr_odr6,
      gpioh_ospeedr_ospeedr6,
      gpioh_otyper_ot6,
      gpioh_pupdr_pupdr6,
      afrl6,
      asc6,
      br6,
      bs6,
      cnf6,
      mode6,
      idr6,
      lck6,
      moder6,
      odr6,
      ospeedr6,
      ot6,
      pupdr6,
    ),
    (
      "GPIO port H pin 7.",
      GpioH7,
      gpio_h7,
      drv_gpio_h7,
      Afrl7,
      Asc7,
      Br7,
      Bs7,
      Cnf7,
      Mode7,
      Idr7,
      Lck7,
      Moder7,
      Odr7,
      Ospeedr7,
      Ot7,
      Pupdr7,
      gpioh_afrl_afrl7,
      gpioh_ascr_asc7,
      gpioh_brr_br7,
      gpioh_bsrr_br7,
      gpioh_bsrr_bs7,
      gpioh_crl_cnf7,
      gpioh_crl_mode7,
      gpioh_idr_idr7,
      gpioh_lckr_lck7,
      gpioh_moder_moder7,
      gpioh_odr_odr7,
      gpioh_ospeedr_ospeedr7,
      gpioh_otyper_ot7,
      gpioh_pupdr_pupdr7,
      afrl7,
      asc7,
      br7,
      bs7,
      cnf7,
      mode7,
      idr7,
      lck7,
      moder7,
      odr7,
      ospeedr7,
      ot7,
      pupdr7,
    ),
  ),
  (
    afrh,
    crh,
    gpioh_afrh,
    gpioh_crh,
    (
      "GPIO port H pin 8.",
      GpioH8,
      gpio_h8,
      drv_gpio_h8,
      Afrh8,
      Asc8,
      Br8,
      Bs8,
      Cnf8,
      Mode8,
      Idr8,
      Lck8,
      Moder8,
      Odr8,
      Ospeedr8,
      Ot8,
      Pupdr8,
      gpioh_afrh_afrh8,
      gpioh_ascr_asc8,
      gpioh_brr_br8,
      gpioh_bsrr_br8,
      gpioh_bsrr_bs8,
      gpioh_crh_cnf8,
      gpioh_crh_mode8,
      gpioh_idr_idr8,
      gpioh_lckr_lck8,
      gpioh_moder_moder8,
      gpioh_odr_odr8,
      gpioh_ospeedr_ospeedr8,
      gpioh_otyper_ot8,
      gpioh_pupdr_pupdr8,
      afrh8,
      asc8,
      br8,
      bs8,
      cnf8,
      mode8,
      idr8,
      lck8,
      moder8,
      odr8,
      ospeedr8,
      ot8,
      pupdr8,
    ),
    (
      "GPIO port H pin 9.",
      GpioH9,
      gpio_h9,
      drv_gpio_h9,
      Afrh9,
      Asc9,
      Br9,
      Bs9,
      Cnf9,
      Mode9,
      Idr9,
      Lck9,
      Moder9,
      Odr9,
      Ospeedr9,
      Ot9,
      Pupdr9,
      gpioh_afrh_afrh9,
      gpioh_ascr_asc9,
      gpioh_brr_br9,
      gpioh_bsrr_br9,
      gpioh_bsrr_bs9,
      gpioh_crh_cnf9,
      gpioh_crh_mode9,
      gpioh_idr_idr9,
      gpioh_lckr_lck9,
      gpioh_moder_moder9,
      gpioh_odr_odr9,
      gpioh_ospeedr_ospeedr9,
      gpioh_otyper_ot9,
      gpioh_pupdr_pupdr9,
      afrh9,
      asc9,
      br9,
      bs9,
      cnf9,
      mode9,
      idr9,
      lck9,
      moder9,
      odr9,
      ospeedr9,
      ot9,
      pupdr9,
    ),
    (
      "GPIO port H pin 10.",
      GpioH10,
      gpio_h10,
      drv_gpio_h10,
      Afrh10,
      Asc10,
      Br10,
      Bs10,
      Cnf10,
      Mode10,
      Idr10,
      Lck10,
      Moder10,
      Odr10,
      Ospeedr10,
      Ot10,
      Pupdr10,
      gpioh_afrh_afrh10,
      gpioh_ascr_asc10,
      gpioh_brr_br10,
      gpioh_bsrr_br10,
      gpioh_bsrr_bs10,
      gpioh_crh_cnf10,
      gpioh_crh_mode10,
      gpioh_idr_idr10,
      gpioh_lckr_lck10,
      gpioh_moder_moder10,
      gpioh_odr_odr10,
      gpioh_ospeedr_ospeedr10,
      gpioh_otyper_ot10,
      gpioh_pupdr_pupdr10,
      afrh10,
      asc10,
      br10,
      bs10,
      cnf10,
      mode10,
      idr10,
      lck10,
      moder10,
      odr10,
      ospeedr10,
      ot10,
      pupdr10,
    ),
    (
      "GPIO port H pin 11.",
      GpioH11,
      gpio_h11,
      drv_gpio_h11,
      Afrh11,
      Asc11,
      Br11,
      Bs11,
      Cnf11,
      Mode11,
      Idr11,
      Lck11,
      Moder11,
      Odr11,
      Ospeedr11,
      Ot11,
      Pupdr11,
      gpioh_afrh_afrh11,
      gpioh_ascr_asc11,
      gpioh_brr_br11,
      gpioh_bsrr_br11,
      gpioh_bsrr_bs11,
      gpioh_crh_cnf11,
      gpioh_crh_mode11,
      gpioh_idr_idr11,
      gpioh_lckr_lck11,
      gpioh_moder_moder11,
      gpioh_odr_odr11,
      gpioh_ospeedr_ospeedr11,
      gpioh_otyper_ot11,
      gpioh_pupdr_pupdr11,
      afrh11,
      asc11,
      br11,
      bs11,
      cnf11,
      mode11,
      idr11,
      lck11,
      moder11,
      odr11,
      ospeedr11,
      ot11,
      pupdr11,
    ),
    (
      "GPIO port H pin 12.",
      GpioH12,
      gpio_h12,
      drv_gpio_h12,
      Afrh12,
      Asc12,
      Br12,
      Bs12,
      Cnf12,
      Mode12,
      Idr12,
      Lck12,
      Moder12,
      Odr12,
      Ospeedr12,
      Ot12,
      Pupdr12,
      gpioh_afrh_afrh12,
      gpioh_ascr_asc12,
      gpioh_brr_br12,
      gpioh_bsrr_br12,
      gpioh_bsrr_bs12,
      gpioh_crh_cnf12,
      gpioh_crh_mode12,
      gpioh_idr_idr12,
      gpioh_lckr_lck12,
      gpioh_moder_moder12,
      gpioh_odr_odr12,
      gpioh_ospeedr_ospeedr12,
      gpioh_otyper_ot12,
      gpioh_pupdr_pupdr12,
      afrh12,
      asc12,
      br12,
      bs12,
      cnf12,
      mode12,
      idr12,
      lck12,
      moder12,
      odr12,
      ospeedr12,
      ot12,
      pupdr12,
    ),
    (
      "GPIO port H pin 13.",
      GpioH13,
      gpio_h13,
      drv_gpio_h13,
      Afrh13,
      Asc13,
      Br13,
      Bs13,
      Cnf13,
      Mode13,
      Idr13,
      Lck13,
      Moder13,
      Odr13,
      Ospeedr13,
      Ot13,
      Pupdr13,
      gpioh_afrh_afrh13,
      gpioh_ascr_asc13,
      gpioh_brr_br13,
      gpioh_bsrr_br13,
      gpioh_bsrr_bs13,
      gpioh_crh_cnf13,
      gpioh_crh_mode13,
      gpioh_idr_idr13,
      gpioh_lckr_lck13,
      gpioh_moder_moder13,
      gpioh_odr_odr13,
      gpioh_ospeedr_ospeedr13,
      gpioh_otyper_ot13,
      gpioh_pupdr_pupdr13,
      afrh13,
      asc13,
      br13,
      bs13,
      cnf13,
      mode13,
      idr13,
      lck13,
      moder13,
      odr13,
      ospeedr13,
      ot13,
      pupdr13,
    ),
    (
      "GPIO port H pin 14.",
      GpioH14,
      gpio_h14,
      drv_gpio_h14,
      Afrh14,
      Asc14,
      Br14,
      Bs14,
      Cnf14,
      Mode14,
      Idr14,
      Lck14,
      Moder14,
      Odr14,
      Ospeedr14,
      Ot14,
      Pupdr14,
      gpioh_afrh_afrh14,
      gpioh_ascr_asc14,
      gpioh_brr_br14,
      gpioh_bsrr_br14,
      gpioh_bsrr_bs14,
      gpioh_crh_cnf14,
      gpioh_crh_mode14,
      gpioh_idr_idr14,
      gpioh_lckr_lck14,
      gpioh_moder_moder14,
      gpioh_odr_odr14,
      gpioh_ospeedr_ospeedr14,
      gpioh_otyper_ot14,
      gpioh_pupdr_pupdr14,
      afrh14,
      asc14,
      br14,
      bs14,
      cnf14,
      mode14,
      idr14,
      lck14,
      moder14,
      odr14,
      ospeedr14,
      ot14,
      pupdr14,
    ),
    (
      "GPIO port H pin 15.",
      GpioH15,
      gpio_h15,
      drv_gpio_h15,
      Afrh15,
      Asc15,
      Br15,
      Bs15,
      Cnf15,
      Mode15,
      Idr15,
      Lck15,
      Moder15,
      Odr15,
      Ospeedr15,
      Ot15,
      Pupdr15,
      gpioh_afrh_afrh15,
      gpioh_ascr_asc15,
      gpioh_brr_br15,
      gpioh_bsrr_br15,
      gpioh_bsrr_bs15,
      gpioh_crh_cnf15,
      gpioh_crh_mode15,
      gpioh_idr_idr15,
      gpioh_lckr_lck15,
      gpioh_moder_moder15,
      gpioh_odr_odr15,
      gpioh_ospeedr_ospeedr15,
      gpioh_otyper_ot15,
      gpioh_pupdr_pupdr15,
      afrh15,
      asc15,
      br15,
      bs15,
      cnf15,
      mode15,
      idr15,
      lck15,
      moder15,
      odr15,
      ospeedr15,
      ot15,
      pupdr15,
    ),
  ),
}

#[cfg(any(
  feature = "stm32l4x6",
  feature = "stm32l4r5",
  feature = "stm32l4r7",
  feature = "stm32l4r9",
  feature = "stm32l4s5",
  feature = "stm32l4s7",
  feature = "stm32l4s9"
))]
gpio_port! {
  "GPIO port I.",
  GpioI,
  drv_gpio_i,
  "GPIO port I pins.",
  GpioIPins,
  gpioi,
  gpioi_afrl,
  gpioi_afrh,
  gpioi_ascr,
  gpioi_brr,
  gpioi_bsrr,
  gpioi_crl,
  gpioi_crh,
  gpioi_idr,
  gpioi_lckr,
  gpioi_moder,
  gpioi_odr,
  gpioi_ospeedr,
  gpioi_otyper,
  gpioi_pupdr,
  #[__false__],
  (
    afrl,
    crl,
    gpioi_afrl,
    gpioi_crl,
    (
      "GPIO port I pin 0.",
      GpioI0,
      gpio_i0,
      drv_gpio_i0,
      Afrl0,
      Asc0,
      Br0,
      Bs0,
      Cnf0,
      Mode0,
      Idr0,
      Lck0,
      Moder0,
      Odr0,
      Ospeedr0,
      Ot0,
      Pupdr0,
      gpioi_afrl_afrl0,
      gpioi_ascr_asc0,
      gpioi_brr_br0,
      gpioi_bsrr_br0,
      gpioi_bsrr_bs0,
      gpioi_crl_cnf0,
      gpioi_crl_mode0,
      gpioi_idr_idr0,
      gpioi_lckr_lck0,
      gpioi_moder_moder0,
      gpioi_odr_odr0,
      gpioi_ospeedr_ospeedr0,
      gpioi_otyper_ot0,
      gpioi_pupdr_pupdr0,
      afrl0,
      asc0,
      br0,
      bs0,
      cnf0,
      mode0,
      idr0,
      lck0,
      moder0,
      odr0,
      ospeedr0,
      ot0,
      pupdr0,
    ),
    (
      "GPIO port I pin 1.",
      GpioI1,
      gpio_i1,
      drv_gpio_i1,
      Afrl1,
      Asc1,
      Br1,
      Bs1,
      Cnf1,
      Mode1,
      Idr1,
      Lck1,
      Moder1,
      Odr1,
      Ospeedr1,
      Ot1,
      Pupdr1,
      gpioi_afrl_afrl1,
      gpioi_ascr_asc1,
      gpioi_brr_br1,
      gpioi_bsrr_br1,
      gpioi_bsrr_bs1,
      gpioi_crl_cnf1,
      gpioi_crl_mode1,
      gpioi_idr_idr1,
      gpioi_lckr_lck1,
      gpioi_moder_moder1,
      gpioi_odr_odr1,
      gpioi_ospeedr_ospeedr1,
      gpioi_otyper_ot1,
      gpioi_pupdr_pupdr1,
      afrl1,
      asc1,
      br1,
      bs1,
      cnf1,
      mode1,
      idr1,
      lck1,
      moder1,
      odr1,
      ospeedr1,
      ot1,
      pupdr1,
    ),
    (
      "GPIO port I pin 2.",
      GpioI2,
      gpio_i2,
      drv_gpio_i2,
      Afrl2,
      Asc2,
      Br2,
      Bs2,
      Cnf2,
      Mode2,
      Idr2,
      Lck2,
      Moder2,
      Odr2,
      Ospeedr2,
      Ot2,
      Pupdr2,
      gpioi_afrl_afrl2,
      gpioi_ascr_asc2,
      gpioi_brr_br2,
      gpioi_bsrr_br2,
      gpioi_bsrr_bs2,
      gpioi_crl_cnf2,
      gpioi_crl_mode2,
      gpioi_idr_idr2,
      gpioi_lckr_lck2,
      gpioi_moder_moder2,
      gpioi_odr_odr2,
      gpioi_ospeedr_ospeedr2,
      gpioi_otyper_ot2,
      gpioi_pupdr_pupdr2,
      afrl2,
      asc2,
      br2,
      bs2,
      cnf2,
      mode2,
      idr2,
      lck2,
      moder2,
      odr2,
      ospeedr2,
      ot2,
      pupdr2,
    ),
    (
      "GPIO port I pin 3.",
      GpioI3,
      gpio_i3,
      drv_gpio_i3,
      Afrl3,
      Asc3,
      Br3,
      Bs3,
      Cnf3,
      Mode3,
      Idr3,
      Lck3,
      Moder3,
      Odr3,
      Ospeedr3,
      Ot3,
      Pupdr3,
      gpioi_afrl_afrl3,
      gpioi_ascr_asc3,
      gpioi_brr_br3,
      gpioi_bsrr_br3,
      gpioi_bsrr_bs3,
      gpioi_crl_cnf3,
      gpioi_crl_mode3,
      gpioi_idr_idr3,
      gpioi_lckr_lck3,
      gpioi_moder_moder3,
      gpioi_odr_odr3,
      gpioi_ospeedr_ospeedr3,
      gpioi_otyper_ot3,
      gpioi_pupdr_pupdr3,
      afrl3,
      asc3,
      br3,
      bs3,
      cnf3,
      mode3,
      idr3,
      lck3,
      moder3,
      odr3,
      ospeedr3,
      ot3,
      pupdr3,
    ),
    (
      "GPIO port I pin 4.",
      GpioI4,
      gpio_i4,
      drv_gpio_i4,
      Afrl4,
      Asc4,
      Br4,
      Bs4,
      Cnf4,
      Mode4,
      Idr4,
      Lck4,
      Moder4,
      Odr4,
      Ospeedr4,
      Ot4,
      Pupdr4,
      gpioi_afrl_afrl4,
      gpioi_ascr_asc4,
      gpioi_brr_br4,
      gpioi_bsrr_br4,
      gpioi_bsrr_bs4,
      gpioi_crl_cnf4,
      gpioi_crl_mode4,
      gpioi_idr_idr4,
      gpioi_lckr_lck4,
      gpioi_moder_moder4,
      gpioi_odr_odr4,
      gpioi_ospeedr_ospeedr4,
      gpioi_otyper_ot4,
      gpioi_pupdr_pupdr4,
      afrl4,
      asc4,
      br4,
      bs4,
      cnf4,
      mode4,
      idr4,
      lck4,
      moder4,
      odr4,
      ospeedr4,
      ot4,
      pupdr4,
    ),
    (
      "GPIO port I pin 5.",
      GpioI5,
      gpio_i5,
      drv_gpio_i5,
      Afrl5,
      Asc5,
      Br5,
      Bs5,
      Cnf5,
      Mode5,
      Idr5,
      Lck5,
      Moder5,
      Odr5,
      Ospeedr5,
      Ot5,
      Pupdr5,
      gpioi_afrl_afrl5,
      gpioi_ascr_asc5,
      gpioi_brr_br5,
      gpioi_bsrr_br5,
      gpioi_bsrr_bs5,
      gpioi_crl_cnf5,
      gpioi_crl_mode5,
      gpioi_idr_idr5,
      gpioi_lckr_lck5,
      gpioi_moder_moder5,
      gpioi_odr_odr5,
      gpioi_ospeedr_ospeedr5,
      gpioi_otyper_ot5,
      gpioi_pupdr_pupdr5,
      afrl5,
      asc5,
      br5,
      bs5,
      cnf5,
      mode5,
      idr5,
      lck5,
      moder5,
      odr5,
      ospeedr5,
      ot5,
      pupdr5,
    ),
    (
      "GPIO port I pin 6.",
      GpioI6,
      gpio_i6,
      drv_gpio_i6,
      Afrl6,
      Asc6,
      Br6,
      Bs6,
      Cnf6,
      Mode6,
      Idr6,
      Lck6,
      Moder6,
      Odr6,
      Ospeedr6,
      Ot6,
      Pupdr6,
      gpioi_afrl_afrl6,
      gpioi_ascr_asc6,
      gpioi_brr_br6,
      gpioi_bsrr_br6,
      gpioi_bsrr_bs6,
      gpioi_crl_cnf6,
      gpioi_crl_mode6,
      gpioi_idr_idr6,
      gpioi_lckr_lck6,
      gpioi_moder_moder6,
      gpioi_odr_odr6,
      gpioi_ospeedr_ospeedr6,
      gpioi_otyper_ot6,
      gpioi_pupdr_pupdr6,
      afrl6,
      asc6,
      br6,
      bs6,
      cnf6,
      mode6,
      idr6,
      lck6,
      moder6,
      odr6,
      ospeedr6,
      ot6,
      pupdr6,
    ),
    (
      "GPIO port I pin 7.",
      GpioI7,
      gpio_i7,
      drv_gpio_i7,
      Afrl7,
      Asc7,
      Br7,
      Bs7,
      Cnf7,
      Mode7,
      Idr7,
      Lck7,
      Moder7,
      Odr7,
      Ospeedr7,
      Ot7,
      Pupdr7,
      gpioi_afrl_afrl7,
      gpioi_ascr_asc7,
      gpioi_brr_br7,
      gpioi_bsrr_br7,
      gpioi_bsrr_bs7,
      gpioi_crl_cnf7,
      gpioi_crl_mode7,
      gpioi_idr_idr7,
      gpioi_lckr_lck7,
      gpioi_moder_moder7,
      gpioi_odr_odr7,
      gpioi_ospeedr_ospeedr7,
      gpioi_otyper_ot7,
      gpioi_pupdr_pupdr7,
      afrl7,
      asc7,
      br7,
      bs7,
      cnf7,
      mode7,
      idr7,
      lck7,
      moder7,
      odr7,
      ospeedr7,
      ot7,
      pupdr7,
    ),
  ),
  (
    afrh,
    crh,
    gpioi_afrh,
    gpioi_crh,
    (
      "GPIO port I pin 8.",
      GpioI8,
      gpio_i8,
      drv_gpio_i8,
      Afrh8,
      Asc8,
      Br8,
      Bs8,
      Cnf8,
      Mode8,
      Idr8,
      Lck8,
      Moder8,
      Odr8,
      Ospeedr8,
      Ot8,
      Pupdr8,
      gpioi_afrh_afrh8,
      gpioi_ascr_asc8,
      gpioi_brr_br8,
      gpioi_bsrr_br8,
      gpioi_bsrr_bs8,
      gpioi_crh_cnf8,
      gpioi_crh_mode8,
      gpioi_idr_idr8,
      gpioi_lckr_lck8,
      gpioi_moder_moder8,
      gpioi_odr_odr8,
      gpioi_ospeedr_ospeedr8,
      gpioi_otyper_ot8,
      gpioi_pupdr_pupdr8,
      afrh8,
      asc8,
      br8,
      bs8,
      cnf8,
      mode8,
      idr8,
      lck8,
      moder8,
      odr8,
      ospeedr8,
      ot8,
      pupdr8,
    ),
    (
      "GPIO port I pin 9.",
      GpioI9,
      gpio_i9,
      drv_gpio_i9,
      Afrh9,
      Asc9,
      Br9,
      Bs9,
      Cnf9,
      Mode9,
      Idr9,
      Lck9,
      Moder9,
      Odr9,
      Ospeedr9,
      Ot9,
      Pupdr9,
      gpioi_afrh_afrh9,
      gpioi_ascr_asc9,
      gpioi_brr_br9,
      gpioi_bsrr_br9,
      gpioi_bsrr_bs9,
      gpioi_crh_cnf9,
      gpioi_crh_mode9,
      gpioi_idr_idr9,
      gpioi_lckr_lck9,
      gpioi_moder_moder9,
      gpioi_odr_odr9,
      gpioi_ospeedr_ospeedr9,
      gpioi_otyper_ot9,
      gpioi_pupdr_pupdr9,
      afrh9,
      asc9,
      br9,
      bs9,
      cnf9,
      mode9,
      idr9,
      lck9,
      moder9,
      odr9,
      ospeedr9,
      ot9,
      pupdr9,
    ),
    (
      "GPIO port I pin 10.",
      GpioI10,
      gpio_i10,
      drv_gpio_i10,
      Afrh10,
      Asc10,
      Br10,
      Bs10,
      Cnf10,
      Mode10,
      Idr10,
      Lck10,
      Moder10,
      Odr10,
      Ospeedr10,
      Ot10,
      Pupdr10,
      gpioi_afrh_afrh10,
      gpioi_ascr_asc10,
      gpioi_brr_br10,
      gpioi_bsrr_br10,
      gpioi_bsrr_bs10,
      gpioi_crh_cnf10,
      gpioi_crh_mode10,
      gpioi_idr_idr10,
      gpioi_lckr_lck10,
      gpioi_moder_moder10,
      gpioi_odr_odr10,
      gpioi_ospeedr_ospeedr10,
      gpioi_otyper_ot10,
      gpioi_pupdr_pupdr10,
      afrh10,
      asc10,
      br10,
      bs10,
      cnf10,
      mode10,
      idr10,
      lck10,
      moder10,
      odr10,
      ospeedr10,
      ot10,
      pupdr10,
    ),
    (
      "GPIO port I pin 11.",
      GpioI11,
      gpio_i11,
      drv_gpio_i11,
      Afrh11,
      Asc11,
      Br11,
      Bs11,
      Cnf11,
      Mode11,
      Idr11,
      Lck11,
      Moder11,
      Odr11,
      Ospeedr11,
      Ot11,
      Pupdr11,
      gpioi_afrh_afrh11,
      gpioi_ascr_asc11,
      gpioi_brr_br11,
      gpioi_bsrr_br11,
      gpioi_bsrr_bs11,
      gpioi_crh_cnf11,
      gpioi_crh_mode11,
      gpioi_idr_idr11,
      gpioi_lckr_lck11,
      gpioi_moder_moder11,
      gpioi_odr_odr11,
      gpioi_ospeedr_ospeedr11,
      gpioi_otyper_ot11,
      gpioi_pupdr_pupdr11,
      afrh11,
      asc11,
      br11,
      bs11,
      cnf11,
      mode11,
      idr11,
      lck11,
      moder11,
      odr11,
      ospeedr11,
      ot11,
      pupdr11,
    ),
    (
      "GPIO port I pin 12.",
      GpioI12,
      gpio_i12,
      drv_gpio_i12,
      Afrh12,
      Asc12,
      Br12,
      Bs12,
      Cnf12,
      Mode12,
      Idr12,
      Lck12,
      Moder12,
      Odr12,
      Ospeedr12,
      Ot12,
      Pupdr12,
      gpioi_afrh_afrh12,
      gpioi_ascr_asc12,
      gpioi_brr_br12,
      gpioi_bsrr_br12,
      gpioi_bsrr_bs12,
      gpioi_crh_cnf12,
      gpioi_crh_mode12,
      gpioi_idr_idr12,
      gpioi_lckr_lck12,
      gpioi_moder_moder12,
      gpioi_odr_odr12,
      gpioi_ospeedr_ospeedr12,
      gpioi_otyper_ot12,
      gpioi_pupdr_pupdr12,
      afrh12,
      asc12,
      br12,
      bs12,
      cnf12,
      mode12,
      idr12,
      lck12,
      moder12,
      odr12,
      ospeedr12,
      ot12,
      pupdr12,
    ),
    (
      "GPIO port I pin 13.",
      GpioI13,
      gpio_i13,
      drv_gpio_i13,
      Afrh13,
      Asc13,
      Br13,
      Bs13,
      Cnf13,
      Mode13,
      Idr13,
      Lck13,
      Moder13,
      Odr13,
      Ospeedr13,
      Ot13,
      Pupdr13,
      gpioi_afrh_afrh13,
      gpioi_ascr_asc13,
      gpioi_brr_br13,
      gpioi_bsrr_br13,
      gpioi_bsrr_bs13,
      gpioi_crh_cnf13,
      gpioi_crh_mode13,
      gpioi_idr_idr13,
      gpioi_lckr_lck13,
      gpioi_moder_moder13,
      gpioi_odr_odr13,
      gpioi_ospeedr_ospeedr13,
      gpioi_otyper_ot13,
      gpioi_pupdr_pupdr13,
      afrh13,
      asc13,
      br13,
      bs13,
      cnf13,
      mode13,
      idr13,
      lck13,
      moder13,
      odr13,
      ospeedr13,
      ot13,
      pupdr13,
    ),
    (
      "GPIO port I pin 14.",
      GpioI14,
      gpio_i14,
      drv_gpio_i14,
      Afrh14,
      Asc14,
      Br14,
      Bs14,
      Cnf14,
      Mode14,
      Idr14,
      Lck14,
      Moder14,
      Odr14,
      Ospeedr14,
      Ot14,
      Pupdr14,
      gpioi_afrh_afrh14,
      gpioi_ascr_asc14,
      gpioi_brr_br14,
      gpioi_bsrr_br14,
      gpioi_bsrr_bs14,
      gpioi_crh_cnf14,
      gpioi_crh_mode14,
      gpioi_idr_idr14,
      gpioi_lckr_lck14,
      gpioi_moder_moder14,
      gpioi_odr_odr14,
      gpioi_ospeedr_ospeedr14,
      gpioi_otyper_ot14,
      gpioi_pupdr_pupdr14,
      afrh14,
      asc14,
      br14,
      bs14,
      cnf14,
      mode14,
      idr14,
      lck14,
      moder14,
      odr14,
      ospeedr14,
      ot14,
      pupdr14,
    ),
    (
      "GPIO port I pin 15.",
      GpioI15,
      gpio_i15,
      drv_gpio_i15,
      Afrh15,
      Asc15,
      Br15,
      Bs15,
      Cnf15,
      Mode15,
      Idr15,
      Lck15,
      Moder15,
      Odr15,
      Ospeedr15,
      Ot15,
      Pupdr15,
      gpioi_afrh_afrh15,
      gpioi_ascr_asc15,
      gpioi_brr_br15,
      gpioi_bsrr_br15,
      gpioi_bsrr_bs15,
      gpioi_crh_cnf15,
      gpioi_crh_mode15,
      gpioi_idr_idr15,
      gpioi_lckr_lck15,
      gpioi_moder_moder15,
      gpioi_odr_odr15,
      gpioi_ospeedr_ospeedr15,
      gpioi_otyper_ot15,
      gpioi_pupdr_pupdr15,
      afrh15,
      asc15,
      br15,
      bs15,
      cnf15,
      mode15,
      idr15,
      lck15,
      moder15,
      odr15,
      ospeedr15,
      ot15,
      pupdr15,
    ),
  ),
}
